[
  {
    "name": "List repository projects",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/projects",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "state",
        "type": "string",
        "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
        "default": "open",
        "required": false,
        "enum": [
          "open",
          "closed",
          "all"
        ],
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "**Note**: The status code may also be `401` or `410`, depending on the scope of the authenticating token.",
    "documentationUrl": "https://developer.github.com/v3/projects/#list-repository-projects"
  },
  {
    "name": "List organization projects",
    "enabledForApps": true,
    "method": "GET",
    "path": "/orgs/:org/projects",
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "state",
        "type": "string",
        "description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.",
        "default": "open",
        "required": false,
        "enum": [
          "open",
          "closed",
          "all"
        ],
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "**Note**: The status code may also be `401` or `410`, depending on the scope of the authenticating token.",
    "documentationUrl": "https://developer.github.com/v3/projects/#list-organization-projects"
  },
  {
    "name": "Get a project",
    "enabledForApps": true,
    "method": "GET",
    "path": "/projects/:project_id",
    "params": [
      {
        "name": "project_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "**Note**: The status code may also be `401` or `410`, depending on the scope of the authenticating token.",
    "documentationUrl": "https://developer.github.com/v3/projects/#get-a-project"
  },
  {
    "name": "Create a repository project",
    "enabledForApps": true,
    "method": "POST",
    "path": "/repos/:owner/:repo/projects",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the project.",
        "required": true,
        "location": "body"
      },
      {
        "name": "body",
        "type": "string",
        "description": "The body of the project.",
        "required": false,
        "location": "body"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "**Note**: The status code may also be `401` or `410`, depending on the scope of the authenticating token.",
    "documentationUrl": "https://developer.github.com/v3/projects/#create-a-repository-project"
  },
  {
    "name": "Create an organization project",
    "enabledForApps": true,
    "method": "POST",
    "path": "/orgs/:org/projects",
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the project.",
        "required": true,
        "location": "body"
      },
      {
        "name": "body",
        "type": "string",
        "description": "The body of the project.",
        "required": false,
        "location": "body"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "**Note**: The status code may also be `401` or `410`, depending on the scope of the authenticating token.",
    "documentationUrl": "https://developer.github.com/v3/projects/#create-an-organization-project"
  },
  {
    "name": "Update a project",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/projects/:project_id",
    "params": [
      {
        "name": "project_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the project.",
        "required": false,
        "location": "body"
      },
      {
        "name": "body",
        "type": "string",
        "description": "The body of the project.",
        "required": false,
        "location": "body"
      },
      {
        "name": "state",
        "type": "string",
        "description": "State of the project. Either `open` or `closed`.",
        "required": false,
        "enum": [
          "open",
          "closed"
        ],
        "location": "body"
      },
      {
        "name": "organization_permission",
        "type": "string",
        "description": "The permission level that all members of the project's organization will have on this project. If an organization member belongs to a team with a higher level of access or is a collaborator with a higher level of access, their permission level is not lowered by `organization_permission`. Updating a project's organization permission requires `admin` access to the project. Setting the organization permission is only available for organization projects.",
        "required": false,
        "location": "body"
      },
      {
        "name": "public",
        "type": "boolean",
        "description": "Sets visibility of the project within the organization. Updating a project's visibility requires `admin` access to the project. Setting visibility is only available for organization projects. Can be one of:  \n\\* `true` \\- Anyone that can view the organization can see the project.  \n\\* `false` \\- The project must be an organization project to set project visibility.",
        "required": false,
        "location": "body"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "**Note**: The status code may also be `401` or `410`, depending on the scope of the authenticating token.",
    "documentationUrl": "https://developer.github.com/v3/projects/#update-a-project"
  },
  {
    "name": "Delete a project",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/projects/:project_id",
    "params": [
      {
        "name": "project_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/#delete-a-project"
  },
  {
    "name": "List project cards",
    "enabledForApps": true,
    "method": "GET",
    "path": "/projects/columns/:column_id/cards",
    "params": [
      {
        "name": "column_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/cards/#list-project-cards"
  },
  {
    "name": "Get a project card",
    "enabledForApps": true,
    "method": "GET",
    "path": "/projects/columns/cards/:card_id",
    "params": [
      {
        "name": "card_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/cards/#get-a-project-card"
  },
  {
    "name": "Create a project card",
    "enabledForApps": true,
    "method": "POST",
    "path": "/projects/columns/:column_id/cards",
    "params": [
      {
        "name": "column_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "note",
        "type": "string",
        "description": "The card's note content. Only valid for cards without another type of content, so this must be omitted if `content_id` and `content_type` are specified.",
        "required": false,
        "location": "body"
      },
      {
        "name": "content_id",
        "type": "integer",
        "description": "The id of the issue to associate with this card.",
        "required": false,
        "location": "body"
      },
      {
        "name": "content_type",
        "type": "string",
        "description": "**Required if you provide `content_id`**. The type of content to associate with this card. Can only be \"Issue\" at this time.",
        "required": false,
        "location": "body"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/cards/#create-a-project-card"
  },
  {
    "name": "Update a project card",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/projects/columns/cards/:card_id",
    "params": [
      {
        "name": "card_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "note",
        "type": "string",
        "description": "The card's note content. Only valid for cards without another type of content, so this cannot be specified if the card already has a `content_id` and `content_type`.",
        "required": false,
        "location": "body"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/cards/#update-a-project-card"
  },
  {
    "name": "Delete a project card",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/projects/columns/cards/:card_id",
    "params": [
      {
        "name": "card_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/cards/#delete-a-project-card"
  },
  {
    "name": "Move a project card",
    "enabledForApps": true,
    "method": "POST",
    "path": "/projects/columns/cards/:card_id/moves",
    "params": [
      {
        "name": "card_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "position",
        "type": "string",
        "description": "Can be one of `top`, `bottom`, or `after:<card_id>`, where `<card_id>` is the `id` value of a card in the same column, or in the new column specified by `column_id`.",
        "required": true,
        "enum": [
          "top",
          "bottom",
          "after:<card_id>"
        ],
        "location": "body"
      },
      {
        "name": "column_id",
        "type": "integer",
        "description": "The `id` value of a column in the same project.",
        "required": false,
        "location": "body"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/cards/#move-a-project-card"
  },
  {
    "name": "List collaborators",
    "enabledForApps": false,
    "method": "GET",
    "path": "/projects/:id/collaborators",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "affiliation",
        "type": "string",
        "description": "Filters the collaborators by their affiliation. Can be one of:  \n\\* `outside`: Outside collaborators of a project that are not a member of the project's organization.  \n\\* `direct`: Collaborators with permissions to a project, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see.",
        "default": "all",
        "required": false,
        "enum": [
          "outside",
          "direct",
          "all"
        ],
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project `admin` to list collaborators.",
    "documentationUrl": "https://developer.github.com/v3/projects/collaborators/#list-collaborators"
  },
  {
    "name": "Review a user's permission level",
    "enabledForApps": false,
    "method": "GET",
    "path": "/projects/:id/collaborators/:username/permission",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Returns the collaborator's permission level for an organization project. Possible values for the `permission` key: `admin`, `write`, `read`, `none`. You must be an organization owner or a project `admin` to review a user's permission level.",
    "documentationUrl": "https://developer.github.com/v3/projects/collaborators/#review-a-users-permission-level"
  },
  {
    "name": "Add user as a collaborator",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/projects/:id/collaborators/:username",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "permission",
        "type": "string",
        "description": "The permission to grant the collaborator. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\" Can be one of:  \n\\* `read` \\- can read, but not write to or administer this project.  \n\\* `write` \\- can read and write, but not administer this project.  \n\\* `admin` \\- can read, write and administer this project.",
        "default": "write",
        "required": false,
        "enum": [
          "read",
          "write",
          "admin"
        ],
        "location": "body"
      }
    ],
    "description": "Adds a collaborator to a an organization project and sets their permission level. You must be an organization owner or a project `admin` to add a collaborator.",
    "documentationUrl": "https://developer.github.com/v3/projects/collaborators/#add-user-as-a-collaborator"
  },
  {
    "name": "Remove user as a collaborator",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/projects/:id/collaborators/:username",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a collaborator.",
    "documentationUrl": "https://developer.github.com/v3/projects/collaborators/#remove-user-as-a-collaborator"
  },
  {
    "name": "List project columns",
    "enabledForApps": true,
    "method": "GET",
    "path": "/projects/:project_id/columns",
    "params": [
      {
        "name": "project_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/columns/#list-project-columns"
  },
  {
    "name": "Get a project column",
    "enabledForApps": true,
    "method": "GET",
    "path": "/projects/columns/:column_id",
    "params": [
      {
        "name": "column_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/columns/#get-a-project-column"
  },
  {
    "name": "Create a project column",
    "enabledForApps": true,
    "method": "POST",
    "path": "/projects/:project_id/columns",
    "params": [
      {
        "name": "project_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the column.",
        "required": true,
        "location": "body"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/columns/#create-a-project-column"
  },
  {
    "name": "Update a project column",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/projects/columns/:column_id",
    "params": [
      {
        "name": "column_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "name",
        "type": "string",
        "description": "The new name of the column.",
        "required": true,
        "location": "body"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/columns/#update-a-project-column"
  },
  {
    "name": "Delete a project column",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/projects/columns/:column_id",
    "params": [
      {
        "name": "column_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/columns/#delete-a-project-column"
  },
  {
    "name": "Move a project column",
    "enabledForApps": true,
    "method": "POST",
    "path": "/projects/columns/:column_id/moves",
    "params": [
      {
        "name": "column_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "position",
        "type": "string",
        "description": "Can be one of `first`, `last`, or `after:<column_id>`, where `<column_id>` is the `id` value of a column in the same project.",
        "required": true,
        "enum": [
          "first",
          "last",
          "after:<column_id>"
        ],
        "location": "body"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/projects/columns/#move-a-project-column"
  }
]
