[
  {
    "name": "List your repositories",
    "method": "GET",
    "path": "/user/repos",
    "description": "List repositories that are accessible to the authenticated user.\n\nThis includes repositories owned by the authenticated user, repositories where the authenticated user is a collaborator, and repositories that the authenticated user has access to through an organization membership.",
    "params": [
      {
        "name": "visibility",
        "type": [
          "all",
          "public",
          "private"
        ],
        "description": "Can be one of `all`, `public`, or `private`.",
        "default": "all",
        "required": false
      },
      {
        "name": "affiliation",
        "type": "string",
        "description": "Comma-separated list of values. Can include:  \n\\* `owner`: Repositories that are owned by the authenticated user.  \n\\* `collaborator`: Repositories that the user has been added to as a collaborator.  \n\\* `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.  \n  \nDefault: `owner,collaborator,organization_member`",
        "required": false
      },
      {
        "name": "type",
        "type": [
          "all",
          "owner",
          "public",
          "private",
          "member"
        ],
        "description": "Can be one of `all`, `owner`, `public`, `private`, `member`.",
        "default": "allWill cause a 422 error if used in the same request as visibility                or affiliation.",
        "required": false
      },
      {
        "name": "sort",
        "type": [
          "created",
          "updated",
          "pushed",
          "full_name"
        ],
        "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
        "default": "full_name",
        "required": false
      },
      {
        "name": "direction",
        "type": [
          "asc",
          "desc"
        ],
        "description": "Can be one of `asc` or `desc`.",
        "default": "when using full_name: asc; otherwise desc",
        "required": false
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/repos/#list-your-repositories"
  },
  {
    "name": "List user repositories",
    "method": "GET",
    "path": "/users/:username/repos",
    "description": "List public repositories for the specified user.",
    "params": [
      {
        "name": "type",
        "type": [
          "all",
          "owner",
          "member"
        ],
        "description": "Can be one of `all`, `owner`, `member`.",
        "default": "owner",
        "required": false
      },
      {
        "name": "sort",
        "type": [
          "created",
          "updated",
          "pushed",
          "full_name"
        ],
        "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
        "default": "full_name",
        "required": false
      },
      {
        "name": "direction",
        "type": [
          "asc",
          "desc"
        ],
        "description": "Can be one of `asc` or `desc`.",
        "default": "when using full_name: asc, otherwise desc",
        "required": false
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/repos/#list-user-repositories"
  },
  {
    "name": "List organization repositories",
    "method": "GET",
    "path": "/orgs/:org/repos",
    "description": "List repositories for the specified org.",
    "params": [
      {
        "name": "type",
        "type": [
          "all",
          "public",
          "private",
          "forks",
          "sources",
          "member"
        ],
        "description": "Can be one of `all`, `public`, `private`, `forks`, `sources`, `member`.",
        "default": "all",
        "required": false
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/repos/#list-organization-repositories"
  },
  {
    "name": "List all public repositories",
    "method": "GET",
    "path": "/repositories",
    "description": "This provides a dump of every public repository, in the order that they were created.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](/v3/#link-header) to get the URL for the next page of repositories.",
    "params": [
      {
        "name": "since",
        "type": "string",
        "description": "The integer ID of the last Repository that you've seen.",
        "required": false
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/repos/#list-all-public-repositories"
  },
  {
    "name": "Create",
    "method": "POST",
    "path": "/user/repos"
  },
  {
    "name": "Create",
    "method": "POST",
    "path": "/orgs/:org/repos"
  },
  {
    "name": "Get",
    "method": "GET",
    "path": "/repos/:owner/:repo",
    "description": "",
    "params": [],
    "documentationUrl": "https://developer.github.com/v3/repos/#get"
  },
  {
    "name": "Edit",
    "method": "PATCH",
    "path": "/repos/:owner/:repo",
    "description": "",
    "params": [
      {
        "name": "name",
        "type": "string",
        "description": "The name of the repository.",
        "required": true
      },
      {
        "name": "description",
        "type": "string",
        "description": "A short description of the repository.",
        "required": false
      },
      {
        "name": "homepage",
        "type": "string",
        "description": "A URL with more information about the repository.",
        "required": false
      },
      {
        "name": "private",
        "type": "boolean",
        "description": "Either `true` to make the repository private or `false` to make it public. Creating private repositories requires a paid GitHub account. Default: `false`.  \n**Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.",
        "required": false
      },
      {
        "name": "has_issues",
        "type": "boolean",
        "description": "Either `true` to enable issues for this repository or `false` to disable them.",
        "default": "true.",
        "required": false
      },
      {
        "name": "has_projects",
        "type": "boolean",
        "description": "Either `true` to enable projects for this repository or `false` to disable them. Default: `true`. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
        "required": false
      },
      {
        "name": "has_wiki",
        "type": "boolean",
        "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
        "default": "true.",
        "required": false
      },
      {
        "name": "default_branch",
        "type": "String",
        "description": "Updates the default branch for this repository.",
        "required": false
      },
      {
        "name": "allow_squash_merge",
        "type": "boolean",
        "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
        "default": "true",
        "required": false
      },
      {
        "name": "allow_merge_commit",
        "type": "boolean",
        "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
        "default": "true",
        "required": false
      },
      {
        "name": "allow_rebase_merge",
        "type": "boolean",
        "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
        "default": "true",
        "required": false
      },
      {
        "name": "archived",
        "type": "boolean",
        "description": "`true` to archive this repository. **Note**: You cannot unarchive repositories through the API.",
        "default": "false",
        "required": false
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/repos/#edit"
  },
  {
    "name": "List all topics for a repository",
    "method": "GET",
    "path": "/repos/:owner/:repo/topics",
    "description": "",
    "params": [],
    "documentationUrl": "https://developer.github.com/v3/repos/#list-all-topics-for-a-repository"
  },
  {
    "name": "Replace all topics for a repository",
    "method": "PUT",
    "path": "/repos/:owner/:repo/topics",
    "description": "",
    "params": [
      {
        "name": "names",
        "type": "array of strings",
        "description": "An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an empty array (`[]`) to clear all topics from the repository.",
        "required": true
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository"
  },
  {
    "name": "List contributors",
    "method": "GET",
    "path": "/repos/:owner/:repo/contributors",
    "description": "Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.",
    "params": [
      {
        "name": "anon",
        "type": "string",
        "description": "Set to `1` or `true` to include anonymous contributors in results.",
        "required": false
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/repos/#list-contributors"
  },
  {
    "name": "List languages",
    "method": "GET",
    "path": "/repos/:owner/:repo/languages",
    "description": "Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.",
    "params": [],
    "documentationUrl": "https://developer.github.com/v3/repos/#list-languages"
  },
  {
    "name": "List teams",
    "method": "GET",
    "path": "/repos/:owner/:repo/teams",
    "description": "",
    "params": [],
    "documentationUrl": "https://developer.github.com/v3/repos/#list-teams"
  },
  {
    "name": "List tags",
    "method": "GET",
    "path": "/repos/:owner/:repo/tags",
    "description": "",
    "params": [],
    "documentationUrl": "https://developer.github.com/v3/repos/#list-tags"
  },
  {
    "name": "Delete a repository",
    "method": "DELETE",
    "path": "/repos/:owner/:repo",
    "description": "Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.",
    "params": [],
    "documentationUrl": "https://developer.github.com/v3/repos/#delete-a-repository"
  },
  {
    "name": "Transfer a repository",
    "method": "POST",
    "path": "/repos/:owner/:repo/transfer",
    "description": "A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://help.github.com/articles/about-repository-transfers/).",
    "params": [
      {
        "name": "new_owner",
        "type": "string",
        "description": "**Required:** The username or organization name the repository will be transferred to.",
        "required": false
      },
      {
        "name": "team_id",
        "type": "array of integers",
        "description": "ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.",
        "required": false
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/repos/#transfer-a-repository"
  }
]