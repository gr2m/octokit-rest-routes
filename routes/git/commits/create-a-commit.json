{
  "name": "Create a commit",
  "enabledForApps": true,
  "method": "POST",
  "path": "/repos/:owner/:repo/git/commits",
  "params": [
    {
      "name": "owner",
      "type": "string",
      "required": true,
      "description": "",
      "location": "url"
    },
    {
      "name": "repo",
      "type": "string",
      "required": true,
      "description": "",
      "location": "url"
    },
    {
      "name": "message",
      "type": "string",
      "description": "The commit message",
      "required": true,
      "location": "body"
    },
    {
      "name": "tree",
      "type": "string",
      "description": "The SHA of the tree object this commit points to",
      "required": true,
      "location": "body"
    },
    {
      "name": "parents",
      "type": "string[]",
      "description": "The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided.",
      "required": true,
      "location": "body"
    },
    {
      "name": "committer",
      "type": "object",
      "description": "object containing information about the committer.",
      "location": "body"
    },
    {
      "name": "author",
      "type": "object",
      "description": "object containing information about the author.",
      "location": "body"
    }
  ],
  "description": "Creates a new Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\nThe `committer` section is optional and will be filled with the `author` data if omitted. If the `author` section is omitted, it will be filled in with the authenticated user's information and the current date.\n\nBoth the `author` and `committer` parameters have the same keys:\n\n| name  | type   | description                                                                                                             |\n| ----- | ------ | ----------------------------------------------------------------------------------------------------------------------- |\n| name  | string | The name of the author (or committer) of the commit                                                                     |\n| email | string | The email of the author (or committer) of the commit                                                                    |\n| date  | string | Indicates when this commit was authored (or committed). This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`. |\n\nYou can also provide an optional string `signature` parameter. This value will be added to the `gpgsig` header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database.\n\n**Note**: To pass a `signature` parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work) to create signed commits.\n\nIn this example, the payload that the signature is over would have been:\n\n",
  "idName": "create-commit",
  "documentationUrl": "https://developer.github.com/v3/git/commits/#create-a-commit"
}
