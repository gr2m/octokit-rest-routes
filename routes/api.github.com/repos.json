[
  {
    "name": "List your repositories",
    "enabledForApps": false,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/user/repos",
    "previews": [],
    "params": [
      {
        "name": "visibility",
        "type": "string",
        "description": "Can be one of `all`, `public`, or `private`.",
        "default": "all",
        "required": false,
        "enum": [
          "all",
          "public",
          "private"
        ],
        "location": "query"
      },
      {
        "name": "affiliation",
        "type": "string",
        "description": "Comma-separated list of values. Can include:  \n\\* `owner`: Repositories that are owned by the authenticated user.  \n\\* `collaborator`: Repositories that the user has been added to as a collaborator.  \n\\* `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.",
        "default": "owner,collaborator,organization_member",
        "required": false,
        "location": "query"
      },
      {
        "name": "type",
        "type": "string",
        "description": "Can be one of `all`, `owner`, `public`, `private`, `member`. Default: `all`  \n  \nWill cause a `422` error if used in the same request as **visibility** or **affiliation**. Will cause a `422` error if used in the same request as **visibility** or **affiliation**.",
        "default": "all",
        "required": false,
        "enum": [
          "all",
          "owner",
          "public",
          "private",
          "member"
        ],
        "location": "query"
      },
      {
        "name": "sort",
        "type": "string",
        "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
        "default": "full_name",
        "required": false,
        "enum": [
          "created",
          "updated",
          "pushed",
          "full_name"
        ],
        "location": "query"
      },
      {
        "name": "direction",
        "type": "string",
        "description": "Can be one of `asc` or `desc`.",
        "default": "`asc` when using `full_name`, otherwise `desc`",
        "required": false,
        "enum": [
          "asc",
          "desc"
        ],
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.",
    "idName": "list",
    "documentationUrl": "https://developer.github.com/v3/repos/#list-your-repositories"
  },
  {
    "name": "List user repositories",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/users/:username/repos",
    "previews": [],
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "type",
        "type": "string",
        "description": "Can be one of `all`, `owner`, `member`.",
        "default": "owner",
        "required": false,
        "enum": [
          "all",
          "owner",
          "member"
        ],
        "location": "query"
      },
      {
        "name": "sort",
        "type": "string",
        "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
        "default": "full_name",
        "required": false,
        "enum": [
          "created",
          "updated",
          "pushed",
          "full_name"
        ],
        "location": "query"
      },
      {
        "name": "direction",
        "type": "string",
        "description": "Can be one of `asc` or `desc`.",
        "default": "`asc` when using `full_name`, otherwise `desc`",
        "required": false,
        "enum": [
          "asc",
          "desc"
        ],
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists public repositories for the specified user.",
    "idName": "list-for-user",
    "documentationUrl": "https://developer.github.com/v3/repos/#list-user-repositories"
  },
  {
    "name": "List organization repositories",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/orgs/:org/repos",
    "previews": [
      {
        "name": "baptiste",
        "description": "**Note:** The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create repository using a repository template](https://developer.github.com/v3/repos/#create-repository-using-a-repository-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.baptiste-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "type",
        "type": "string",
        "description": "Can be one of `all`, `public`, `private`, `forks`, `sources`, `member`.",
        "default": "all",
        "required": false,
        "enum": [
          "all",
          "public",
          "private",
          "forks",
          "sources",
          "member"
        ],
        "location": "query"
      },
      {
        "name": "sort",
        "type": "string",
        "description": "Can be one of `created`, `updated`, `pushed`, `full_name`.",
        "default": "created",
        "required": false,
        "enum": [
          "created",
          "updated",
          "pushed",
          "full_name"
        ],
        "location": "query"
      },
      {
        "name": "direction",
        "type": "string",
        "description": "Can be one of `asc` or `desc`.",
        "default": "when using `full_name`: `asc`, otherwise `desc`",
        "required": false,
        "enum": [
          "asc",
          "desc"
        ],
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists repositories for the specified organization.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": true,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "template_repository": null,
            "subscribers_count": 42,
            "network_count": 0,
            "license": {
              "key": "mit",
              "name": "MIT License",
              "spdx_id": "MIT",
              "url": "https://api.github.com/licenses/mit",
              "node_id": "MDc6TGljZW5zZW1pdA=="
            }
          }
        ]
      }
    ],
    "idName": "list-for-org",
    "documentationUrl": "https://developer.github.com/v3/repos/#list-organization-repositories"
  },
  {
    "name": "List all public repositories",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repositories",
    "previews": [],
    "params": [
      {
        "name": "since",
        "type": "string",
        "description": "The integer ID of the last Repository that you've seen.",
        "required": false,
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists all public repositories in the order that they were created.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of repositories.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          }
        ]
      }
    ],
    "idName": "list-public",
    "documentationUrl": "https://developer.github.com/v3/repos/#list-all-public-repositories"
  },
  {
    "method": "POST",
    "path": "/user/repos",
    "enabledForApps": true,
    "name": "Creates a new repository for the authenticated user",
    "githubCloudOnly": false,
    "previews": [
      {
        "name": "baptiste",
        "description": "**Note:** The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create repository using a repository template](https://developer.github.com/v3/repos/#create-repository-using-a-repository-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.baptiste-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "name",
        "type": "string",
        "description": "The name of the repository.",
        "required": true,
        "location": "body"
      },
      {
        "name": "description",
        "type": "string",
        "description": "A short description of the repository.",
        "required": false,
        "location": "body"
      },
      {
        "name": "homepage",
        "type": "string",
        "description": "A URL with more information about the repository.",
        "required": false,
        "location": "body"
      },
      {
        "name": "private",
        "type": "boolean",
        "description": "Either `true` to create a private repository or `false` to create a public one. Creating private repositories requires a paid GitHub account.",
        "default": false,
        "required": false,
        "location": "body"
      },
      {
        "name": "has_issues",
        "type": "boolean",
        "description": "Either `true` to enable issues for this repository or `false` to disable them.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "has_projects",
        "type": "boolean",
        "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "has_wiki",
        "type": "boolean",
        "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "is_template",
        "type": "boolean",
        "description": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
        "default": false,
        "required": false,
        "location": "body"
      },
      {
        "name": "team_id",
        "type": "integer",
        "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
        "required": false,
        "location": "body"
      },
      {
        "name": "auto_init",
        "type": "boolean",
        "description": "Pass `true` to create an initial commit with empty README.",
        "default": false,
        "required": false,
        "location": "body"
      },
      {
        "name": "gitignore_template",
        "type": "string",
        "description": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\".",
        "required": false,
        "location": "body"
      },
      {
        "name": "license_template",
        "type": "string",
        "description": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\".",
        "required": false,
        "location": "body"
      },
      {
        "name": "allow_squash_merge",
        "type": "boolean",
        "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "allow_merge_commit",
        "type": "boolean",
        "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "allow_rebase_merge",
        "type": "boolean",
        "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
        "default": true,
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "name": "Hello-World",
        "description": "This is your first repository",
        "homepage": "https://github.com",
        "private": false,
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true
      }
    ],
    "description": "**Note**: There are two endpoints for creating a repository: one to create a repository on a user account, and one to create a repository in an organization. The organization endpoint is fully enabled for [GitHub Apps](https://developer.github.com/v3/apps/available-endpoints/), whereas the user endpoint is enabled only for [user-to-server requests](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#user-to-server-requests).\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": false,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "language": null,
          "forks_count": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues_count": 0,
          "is_template": true,
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "admin": false,
            "push": false,
            "pull": true
          },
          "allow_rebase_merge": true,
          "template_repository": null,
          "allow_squash_merge": true,
          "allow_merge_commit": true,
          "subscribers_count": 42,
          "network_count": 0
        }
      }
    ],
    "idName": "create-for-authenticated-user",
    "documentationUrl": "https://developer.github.com/v3/repos/#create"
  },
  {
    "method": "POST",
    "path": "/orgs/:org/repos",
    "enabledForApps": true,
    "name": "Creates a new repository in the specified organization",
    "githubCloudOnly": false,
    "previews": [
      {
        "name": "baptiste",
        "description": "**Note:** The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create repository using a repository template](https://developer.github.com/v3/repos/#create-repository-using-a-repository-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.baptiste-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the repository.",
        "required": true,
        "location": "body"
      },
      {
        "name": "description",
        "type": "string",
        "description": "A short description of the repository.",
        "required": false,
        "location": "body"
      },
      {
        "name": "homepage",
        "type": "string",
        "description": "A URL with more information about the repository.",
        "required": false,
        "location": "body"
      },
      {
        "name": "private",
        "type": "boolean",
        "description": "Either `true` to create a private repository or `false` to create a public one. Creating private repositories requires a paid GitHub account.",
        "default": false,
        "required": false,
        "location": "body"
      },
      {
        "name": "has_issues",
        "type": "boolean",
        "description": "Either `true` to enable issues for this repository or `false` to disable them.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "has_projects",
        "type": "boolean",
        "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "has_wiki",
        "type": "boolean",
        "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "is_template",
        "type": "boolean",
        "description": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
        "default": false,
        "required": false,
        "location": "body"
      },
      {
        "name": "team_id",
        "type": "integer",
        "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
        "required": false,
        "location": "body"
      },
      {
        "name": "auto_init",
        "type": "boolean",
        "description": "Pass `true` to create an initial commit with empty README.",
        "default": false,
        "required": false,
        "location": "body"
      },
      {
        "name": "gitignore_template",
        "type": "string",
        "description": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\".",
        "required": false,
        "location": "body"
      },
      {
        "name": "license_template",
        "type": "string",
        "description": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\".",
        "required": false,
        "location": "body"
      },
      {
        "name": "allow_squash_merge",
        "type": "boolean",
        "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "allow_merge_commit",
        "type": "boolean",
        "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "allow_rebase_merge",
        "type": "boolean",
        "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
        "default": true,
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "name": "Hello-World",
        "description": "This is your first repository",
        "homepage": "https://github.com",
        "private": false,
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true
      }
    ],
    "description": "**Note**: There are two endpoints for creating a repository: one to create a repository on a user account, and one to create a repository in an organization. The organization endpoint is fully enabled for [GitHub Apps](https://developer.github.com/v3/apps/available-endpoints/), whereas the user endpoint is enabled only for [user-to-server requests](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#user-to-server-requests).\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": false,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "language": null,
          "forks_count": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues_count": 0,
          "is_template": true,
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "admin": false,
            "push": false,
            "pull": true
          },
          "allow_rebase_merge": true,
          "template_repository": null,
          "allow_squash_merge": true,
          "allow_merge_commit": true,
          "subscribers_count": 42,
          "network_count": 0
        }
      }
    ],
    "idName": "create-in-org",
    "documentationUrl": "https://developer.github.com/v3/repos/#create"
  },
  {
    "name": "Create repository using a repository template",
    "enabledForApps": false,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/generate",
    "previews": [
      {
        "name": "baptiste",
        "description": "**Note:** Creating and using repository templates is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.baptiste-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "owner",
        "type": "string",
        "description": "The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization.",
        "required": true,
        "location": "url"
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the new repository.",
        "required": true,
        "location": "body"
      },
      {
        "name": "description",
        "type": "string",
        "description": "A short description of the new repository.",
        "required": false,
        "location": "body"
      },
      {
        "name": "private",
        "type": "boolean",
        "description": "Either `true` to create a new private repository or `false` to create a new public one.",
        "default": false,
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "owner": "octocat",
        "name": "Hello-World",
        "description": "This is your first repository",
        "private": false
      }
    ],
    "description": "Creates a new repository using a repository template. Use the `repo` route parameter to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [`GET /repos/:owner/:repo`](https://developer.github.com/v3/repos/#get) endpoint and check that the `is_template` key is `true`.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository\n\n\\`",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": false,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "language": null,
          "forks_count": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues_count": 0,
          "is_template": false,
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "admin": false,
            "push": false,
            "pull": true
          },
          "allow_rebase_merge": true,
          "template_repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": true,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "allow_rebase_merge": true,
            "template_repository": null,
            "allow_squash_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0
          },
          "allow_squash_merge": true,
          "allow_merge_commit": true,
          "subscribers_count": 42,
          "network_count": 0
        }
      }
    ],
    "idName": "create-using-template",
    "documentationUrl": "https://developer.github.com/v3/repos/#create-repository-using-a-repository-template"
  },
  {
    "name": "Get",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": false,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "language": null,
          "forks_count": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues_count": 0,
          "is_template": true,
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "admin": false,
            "push": false,
            "pull": true
          },
          "allow_rebase_merge": true,
          "template_repository": null,
          "allow_squash_merge": true,
          "allow_merge_commit": true,
          "subscribers_count": 42,
          "network_count": 0,
          "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit",
            "node_id": "MDc6TGljZW5zZW1pdA=="
          },
          "organization": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "parent": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": true,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "allow_rebase_merge": true,
            "template_repository": null,
            "allow_squash_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0
          },
          "source": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": true,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "allow_rebase_merge": true,
            "template_repository": null,
            "allow_squash_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0
          }
        },
        "description": "The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network."
      }
    ],
    "idName": "get",
    "documentationUrl": "https://developer.github.com/v3/repos/#get"
  },
  {
    "name": "Edit",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PATCH",
    "path": "/repos/:owner/:repo",
    "previews": [
      {
        "name": "baptiste",
        "description": "**Note:** The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create repository using a repository template](https://developer.github.com/v3/repos/#create-repository-using-a-repository-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.baptiste-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the repository.",
        "required": true,
        "location": "body"
      },
      {
        "name": "description",
        "type": "string",
        "description": "A short description of the repository.",
        "required": false,
        "location": "body"
      },
      {
        "name": "homepage",
        "type": "string",
        "description": "A URL with more information about the repository.",
        "required": false,
        "location": "body"
      },
      {
        "name": "private",
        "type": "boolean",
        "description": "Either `true` to make the repository private or `false` to make it public. Creating private repositories requires a paid GitHub account. Default: `false`.  \n**Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private. **Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://help.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.",
        "default": false,
        "required": false,
        "location": "body"
      },
      {
        "name": "has_issues",
        "type": "boolean",
        "description": "Either `true` to enable issues for this repository or `false` to disable them.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "has_projects",
        "type": "boolean",
        "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "has_wiki",
        "type": "boolean",
        "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "is_template",
        "type": "boolean",
        "description": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
        "default": false,
        "required": false,
        "location": "body"
      },
      {
        "name": "default_branch",
        "type": "string",
        "description": "Updates the default branch for this repository.",
        "required": false,
        "location": "body"
      },
      {
        "name": "allow_squash_merge",
        "type": "boolean",
        "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "allow_merge_commit",
        "type": "boolean",
        "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "allow_rebase_merge",
        "type": "boolean",
        "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "archived",
        "type": "boolean",
        "description": "`true` to archive this repository. **Note**: You cannot unarchive repositories through the API.",
        "default": false,
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "name": "Hello-World",
        "description": "This is your first repository",
        "homepage": "https://github.com",
        "private": true,
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true
      }
    ],
    "description": "**Note**: To edit a repository's topics, use the [`topics` endpoint](https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository).",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": false,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "language": null,
          "forks_count": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues_count": 0,
          "is_template": true,
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "admin": false,
            "push": false,
            "pull": true
          },
          "allow_rebase_merge": true,
          "template_repository": null,
          "allow_squash_merge": true,
          "allow_merge_commit": true,
          "subscribers_count": 42,
          "network_count": 0,
          "organization": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "parent": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": true,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "allow_rebase_merge": true,
            "template_repository": null,
            "allow_squash_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0
          },
          "source": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": true,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "allow_rebase_merge": true,
            "template_repository": null,
            "allow_squash_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0
          }
        }
      }
    ],
    "idName": "update",
    "documentationUrl": "https://developer.github.com/v3/repos/#edit"
  },
  {
    "name": "List all topics for a repository",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/topics",
    "previews": [
      {
        "name": "mercy",
        "description": "**Note:** The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mercy-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "names": [
            "octocat",
            "atom",
            "electron",
            "api"
          ]
        }
      }
    ],
    "idName": "list-topics",
    "documentationUrl": "https://developer.github.com/v3/repos/#list-all-topics-for-a-repository"
  },
  {
    "name": "Replace all topics for a repository",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/topics",
    "previews": [
      {
        "name": "mercy",
        "description": "**Note:** The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mercy-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "names",
        "type": "string[]",
        "description": "An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an empty array (`[]`) to clear all topics from the repository. **Note:** Topic `names` cannot contain uppercase letters.",
        "required": true,
        "location": "body"
      }
    ],
    "requests": [
      {
        "names": [
          "octocat",
          "atom",
          "electron",
          "api"
        ]
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "names": [
            "octocat",
            "atom",
            "electron",
            "api"
          ]
        }
      }
    ],
    "idName": "replace-topics",
    "documentationUrl": "https://developer.github.com/v3/repos/#replace-all-topics-for-a-repository"
  },
  {
    "name": "Check if vulnerability alerts are enabled for a repository",
    "enabledForApps": false,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/vulnerability-alerts",
    "previews": [
      {
        "name": "dorian",
        "description": "**Note:** Enabling and disabling vulnerability alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dorian-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Shows whether vulnerability alerts are enabled or disabled for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\" in the GitHub Help documentation.",
    "idName": "check-vulnerability-alerts",
    "documentationUrl": "https://developer.github.com/v3/repos/#check-if-vulnerability-alerts-are-enabled-for-a-repository"
  },
  {
    "name": "Enable vulnerability alerts",
    "enabledForApps": false,
    "githubCloudOnly": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/vulnerability-alerts",
    "previews": [
      {
        "name": "dorian",
        "description": "**Note:** Enabling and disabling vulnerability alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dorian-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Enables vulnerability alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\" in the GitHub Help documentation.",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "enable-vulnerability-alerts",
    "documentationUrl": "https://developer.github.com/v3/repos/#enable-vulnerability-alerts"
  },
  {
    "name": "Disable vulnerability alerts",
    "enabledForApps": false,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/vulnerability-alerts",
    "previews": [
      {
        "name": "dorian",
        "description": "**Note:** Enabling and disabling vulnerability alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.dorian-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Disables vulnerability alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\" in the GitHub Help documentation.",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "disable-vulnerability-alerts",
    "documentationUrl": "https://developer.github.com/v3/repos/#disable-vulnerability-alerts"
  },
  {
    "name": "Enable automated security fixes",
    "enabledForApps": false,
    "githubCloudOnly": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/automated-security-fixes",
    "previews": [
      {
        "name": "london",
        "description": "**Note:** Enabling or disabling automated security fixes is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.london-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\" in the GitHub Help documentation.",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "enable-automated-security-fixes",
    "documentationUrl": "https://developer.github.com/v3/repos/#enable-automated-security-fixes"
  },
  {
    "name": "Disable automated security fixes",
    "enabledForApps": false,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/automated-security-fixes",
    "previews": [
      {
        "name": "london",
        "description": "**Note:** Enabling or disabling automated security fixes is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.london-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\" in the GitHub Help documentation.",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "disable-automated-security-fixes",
    "documentationUrl": "https://developer.github.com/v3/repos/#disable-automated-security-fixes"
  },
  {
    "name": "List contributors",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/contributors",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "anon",
        "type": "string",
        "description": "Set to `1` or `true` to include anonymous contributors in results.",
        "required": false,
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.\n\nGitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.",
    "idName": "list-contributors",
    "documentationUrl": "https://developer.github.com/v3/repos/#list-contributors"
  },
  {
    "name": "List languages",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/languages",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "C": 78769,
          "Python": 7769
        }
      }
    ],
    "idName": "list-languages",
    "documentationUrl": "https://developer.github.com/v3/repos/#list-languages"
  },
  {
    "name": "List teams",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/teams",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "id": 1,
            "node_id": "MDQ6VGVhbTE=",
            "url": "https://api.github.com/teams/1",
            "name": "Justice League",
            "slug": "justice-league",
            "description": "A great team.",
            "privacy": "closed",
            "permission": "admin",
            "members_url": "https://api.github.com/teams/1/members{/member}",
            "repositories_url": "https://api.github.com/teams/1/repos",
            "parent": null
          }
        ]
      }
    ],
    "idName": "list-teams",
    "documentationUrl": "https://developer.github.com/v3/repos/#list-teams"
  },
  {
    "name": "List tags",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/tags",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "name": "v0.1",
            "commit": {
              "sha": "c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc",
              "url": "https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc"
            },
            "zipball_url": "https://github.com/octocat/Hello-World/zipball/v0.1",
            "tarball_url": "https://github.com/octocat/Hello-World/tarball/v0.1"
          }
        ]
      }
    ],
    "idName": "list-tags",
    "documentationUrl": "https://developer.github.com/v3/repos/#list-tags"
  },
  {
    "name": "Delete a repository",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.\n\nIf an organization owner has configured the organization to prevent members from deleting organization-owned repositories, a member will get this response:",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      },
      {
        "headers": {
          "status": "403 Forbidden",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "Organization members cannot delete repositories.",
          "documentation_url": "https://developer.github.com/v3/repos/#delete-a-repository"
        },
        "description": "If an organization owner has configured the organization to prevent members from deleting organization-owned repositories, a member will get this response:"
      }
    ],
    "idName": "delete",
    "documentationUrl": "https://developer.github.com/v3/repos/#delete-a-repository"
  },
  {
    "name": "Transfer a repository",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/transfer",
    "previews": [
      {
        "name": "nightshade",
        "description": "**Note:** The [Repository Transfer API](https://developer.github.com/changes/2017-11-09-repository-transfer-api-preview) is currently available for developers to preview. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.nightshade-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "new_owner",
        "type": "string",
        "description": "**Required:** The username or organization name the repository will be transferred to.",
        "required": false,
        "location": "body"
      },
      {
        "name": "team_ids",
        "type": "integer[]",
        "description": "ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "new_owner": "github",
        "team_ids": [
          12,
          345
        ]
      }
    ],
    "description": "A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://help.github.com/articles/about-repository-transfers/).",
    "responses": [
      {
        "headers": {
          "status": "202 Accepted",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": false,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "language": null,
          "forks_count": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues_count": 0,
          "is_template": true,
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "admin": false,
            "push": false,
            "pull": true
          },
          "allow_rebase_merge": true,
          "template_repository": null,
          "allow_squash_merge": true,
          "allow_merge_commit": true,
          "subscribers_count": 42,
          "network_count": 0
        }
      }
    ],
    "idName": "transfer",
    "documentationUrl": "https://developer.github.com/v3/repos/#transfer-a-repository"
  },
  {
    "name": "List branches",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/branches",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "protected",
        "type": "boolean",
        "description": "Setting to `true` returns only protected branches. When set to `false`, only unprotected branches are returned. Omitting this parameter returns all branches.",
        "required": false,
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "name": "master",
            "commit": {
              "sha": "c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc",
              "url": "https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc"
            },
            "protected": true,
            "protection": {
              "enabled": true,
              "required_status_checks": {
                "enforcement_level": "non_admins",
                "contexts": [
                  "ci-test",
                  "linter"
                ]
              }
            },
            "protection_url": "https://api.github.com/repos/octocat/hello-world/branches/master/protection"
          }
        ]
      }
    ],
    "idName": "list-branches",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#list-branches"
  },
  {
    "name": "Get branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/branches/:branch",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "name": "master",
          "commit": {
            "sha": "7fd1a60b01f91b314f59955a4e4d4e80d8edf11d",
            "node_id": "MDY6Q29tbWl0N2ZkMWE2MGIwMWY5MWIzMTRmNTk5NTVhNGU0ZDRlODBkOGVkZjExZA==",
            "commit": {
              "author": {
                "name": "The Octocat",
                "date": "2012-03-06T15:06:50-08:00",
                "email": "octocat@nowhere.com"
              },
              "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d",
              "message": "Merge pull request #6 from Spaceghost/patch-1\n\nNew line at end of file.",
              "tree": {
                "sha": "b4eecafa9be2f2006ce1b709d6857b07069b4608",
                "url": "https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608"
              },
              "committer": {
                "name": "The Octocat",
                "date": "2012-03-06T15:06:50-08:00",
                "email": "octocat@nowhere.com"
              },
              "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
              }
            },
            "author": {
              "gravatar_id": "",
              "avatar_url": "https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
              "url": "https://api.github.com/users/octocat",
              "id": 583231,
              "login": "octocat"
            },
            "parents": [
              {
                "sha": "553c2077f0edc3d5dc5d17262f6aa498e69d6f8e",
                "url": "https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e"
              },
              {
                "sha": "762941318ee16e59dabbacb1b4049eec22f0d303",
                "url": "https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303"
              }
            ],
            "url": "https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d",
            "committer": {
              "gravatar_id": "",
              "avatar_url": "https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png",
              "url": "https://api.github.com/users/octocat",
              "id": 583231,
              "login": "octocat"
            }
          },
          "_links": {
            "html": "https://github.com/octocat/Hello-World/tree/master",
            "self": "https://api.github.com/repos/octocat/Hello-World/branches/master"
          },
          "protected": true,
          "protection": {
            "enabled": true,
            "required_status_checks": {
              "enforcement_level": "non_admins",
              "contexts": [
                "ci-test",
                "linter"
              ]
            }
          },
          "protection_url": "https://api.github.com/repos/octocat/hello-world/branches/master/protection"
        }
      }
    ],
    "idName": "get-branch",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-branch"
  },
  {
    "name": "Get branch protection",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/branches/:branch/protection",
    "previews": [
      {
        "name": "luke-cage",
        "description": "**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.luke-cage-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection",
          "required_status_checks": {
            "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks",
            "strict": true,
            "contexts": [
              "continuous-integration/travis-ci"
            ],
            "contexts_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts"
          },
          "enforce_admins": {
            "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins",
            "enabled": true
          },
          "required_pull_request_reviews": {
            "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews",
            "dismissal_restrictions": {
              "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions",
              "users_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams",
              "users": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "teams": [
                {
                  "id": 1,
                  "node_id": "MDQ6VGVhbTE=",
                  "url": "https://api.github.com/teams/1",
                  "name": "Justice League",
                  "slug": "justice-league",
                  "description": "A great team.",
                  "privacy": "closed",
                  "permission": "admin",
                  "members_url": "https://api.github.com/teams/1/members{/member}",
                  "repositories_url": "https://api.github.com/teams/1/repos",
                  "parent": null
                }
              ]
            },
            "dismiss_stale_reviews": true,
            "require_code_owner_reviews": true,
            "required_approving_review_count": 2
          },
          "restrictions": {
            "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions",
            "users_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams",
            "users": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ],
            "teams": [
              {
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "url": "https://api.github.com/teams/1",
                "name": "Justice League",
                "slug": "justice-league",
                "description": "A great team.",
                "privacy": "closed",
                "permission": "admin",
                "members_url": "https://api.github.com/teams/1/members{/member}",
                "repositories_url": "https://api.github.com/teams/1/repos",
                "parent": null
              }
            ]
          }
        }
      }
    ],
    "idName": "get-branch-protection",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-branch-protection"
  },
  {
    "name": "Update branch protection",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/branches/:branch/protection",
    "previews": [
      {
        "name": "luke-cage",
        "description": "**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.luke-cage-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "required_status_checks",
        "type": "object",
        "description": "Require status checks to pass before merging. Set to `null` to disable.",
        "required": true,
        "allowNull": true,
        "location": "body"
      },
      {
        "name": "required_status_checks.strict",
        "type": "boolean",
        "description": "Require branches to be up to date before merging.",
        "required": true,
        "location": "body"
      },
      {
        "name": "required_status_checks.contexts",
        "type": "string[]",
        "description": "The list of status checks to require in order to merge into this branch",
        "required": true,
        "location": "body"
      },
      {
        "name": "enforce_admins",
        "type": "boolean",
        "description": "Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.",
        "required": true,
        "allowNull": true,
        "location": "body"
      },
      {
        "name": "required_pull_request_reviews",
        "type": "object",
        "description": "Require at least one approving review on a pull request, before merging. Set to `null` to disable.",
        "required": true,
        "allowNull": true,
        "location": "body"
      },
      {
        "name": "required_pull_request_reviews.dismissal_restrictions",
        "type": "object",
        "description": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
        "required": false,
        "location": "body"
      },
      {
        "name": "required_pull_request_reviews.dismissal_restrictions.users",
        "type": "string[]",
        "description": "The list of user `login`s with dismissal access",
        "required": false,
        "location": "body"
      },
      {
        "name": "required_pull_request_reviews.dismissal_restrictions.teams",
        "type": "string[]",
        "description": "The list of team `slug`s with dismissal access",
        "required": false,
        "location": "body"
      },
      {
        "name": "required_pull_request_reviews.dismiss_stale_reviews",
        "type": "boolean",
        "description": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
        "required": false,
        "location": "body"
      },
      {
        "name": "required_pull_request_reviews.require_code_owner_reviews",
        "type": "boolean",
        "description": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) review them.",
        "required": false,
        "location": "body"
      },
      {
        "name": "required_pull_request_reviews.required_approving_review_count",
        "type": "integer",
        "description": "Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
        "required": false,
        "location": "body"
      },
      {
        "name": "restrictions",
        "type": "object",
        "description": "Restrict who can push to this branch. Team and user `restrictions` are only available for organization-owned repositories. Set to `null` to disable.",
        "required": true,
        "allowNull": true,
        "location": "body"
      },
      {
        "name": "restrictions.users",
        "type": "string[]",
        "description": "The list of user `login`s with push access",
        "required": false,
        "location": "body"
      },
      {
        "name": "restrictions.teams",
        "type": "string[]",
        "description": "The list of team `slug`s with push access",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "required_status_checks": {
          "strict": true,
          "contexts": [
            "continuous-integration/travis-ci"
          ]
        },
        "enforce_admins": true,
        "required_pull_request_reviews": {
          "dismissal_restrictions": {
            "users": [
              "octocat"
            ],
            "teams": [
              "justice-league"
            ]
          },
          "dismiss_stale_reviews": true,
          "require_code_owner_reviews": true,
          "required_approving_review_count": 2
        },
        "restrictions": {
          "users": [
            "octocat"
          ],
          "teams": [
            "justice-league"
          ]
        }
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nProtecting a branch requires admin or owner permissions to the repository.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n\n**Note**: The list of users and teams in total is limited to 100 items.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection",
          "required_status_checks": {
            "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks",
            "strict": true,
            "contexts": [
              "continuous-integration/travis-ci"
            ],
            "contexts_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts"
          },
          "enforce_admins": {
            "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins",
            "enabled": true
          },
          "required_pull_request_reviews": {
            "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews",
            "dismissal_restrictions": {
              "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions",
              "users_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams",
              "users": [
                {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                }
              ],
              "teams": [
                {
                  "id": 1,
                  "node_id": "MDQ6VGVhbTE=",
                  "url": "https://api.github.com/teams/1",
                  "name": "Justice League",
                  "slug": "justice-league",
                  "description": "A great team.",
                  "privacy": "closed",
                  "permission": "admin",
                  "members_url": "https://api.github.com/teams/1/members{/member}",
                  "repositories_url": "https://api.github.com/teams/1/repos",
                  "parent": null
                }
              ]
            },
            "dismiss_stale_reviews": true,
            "require_code_owner_reviews": true,
            "required_approving_review_count": 2
          },
          "restrictions": {
            "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions",
            "users_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams",
            "users": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ],
            "teams": [
              {
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "url": "https://api.github.com/teams/1",
                "name": "Justice League",
                "slug": "justice-league",
                "description": "A great team.",
                "privacy": "closed",
                "permission": "admin",
                "members_url": "https://api.github.com/teams/1/members{/member}",
                "repositories_url": "https://api.github.com/teams/1/repos",
                "parent": null
              }
            ]
          }
        }
      }
    ],
    "idName": "update-branch-protection",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#update-branch-protection"
  },
  {
    "name": "Remove branch protection",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/branches/:branch/protection",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "remove-branch-protection",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-branch-protection"
  },
  {
    "name": "Get required status checks of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks",
          "strict": true,
          "contexts": [
            "continuous-integration/travis-ci"
          ],
          "contexts_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts"
        }
      }
    ],
    "idName": "get-protected-branch-required-status-checks",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-required-status-checks-of-protected-branch"
  },
  {
    "name": "Update required status checks of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "strict",
        "type": "boolean",
        "description": "Require branches to be up to date before merging.",
        "required": false,
        "location": "body"
      },
      {
        "name": "contexts",
        "type": "string[]",
        "description": "The list of status checks to require in order to merge into this branch",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "strict": true,
        "contexts": [
          "continuous-integration/travis-ci"
        ]
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nUpdating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks",
          "strict": true,
          "contexts": [
            "continuous-integration/travis-ci"
          ],
          "contexts_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts"
        }
      }
    ],
    "idName": "update-protected-branch-required-status-checks",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#update-required-status-checks-of-protected-branch"
  },
  {
    "name": "Remove required status checks of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
    "idName": "remove-protected-branch-required-status-checks",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-required-status-checks-of-protected-branch"
  },
  {
    "name": "List required status checks contexts of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
    "idName": "list-protected-branch-required-status-checks-contexts",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#list-required-status-checks-contexts-of-protected-branch"
  },
  {
    "name": "Replace required status checks contexts of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "mapTo": "input",
        "name": "contexts",
        "type": "string[]",
        "required": true,
        "description": "",
        "location": "body"
      }
    ],
    "requests": [
      [
        "continuous-integration/travis-ci"
      ]
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          "continuous-integration/travis-ci"
        ]
      }
    ],
    "idName": "replace-protected-branch-required-status-checks-contexts",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#replace-required-status-checks-contexts-of-protected-branch"
  },
  {
    "name": "Add required status checks contexts of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "mapTo": "input",
        "name": "contexts",
        "type": "string[]",
        "required": true,
        "description": "",
        "location": "body"
      }
    ],
    "requests": [
      [
        "continuous-integration/jenkins"
      ]
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          "continuous-integration/travis-ci",
          "continuous-integration/jenkins"
        ]
      }
    ],
    "idName": "add-protected-branch-required-status-checks-contexts",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#add-required-status-checks-contexts-of-protected-branch"
  },
  {
    "name": "Remove required status checks contexts of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "mapTo": "input",
        "name": "contexts",
        "type": "string[]",
        "required": true,
        "description": "",
        "location": "body"
      }
    ],
    "requests": [
      [
        "continuous-integration/jenkins"
      ]
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          "continuous-integration/travis-ci"
        ]
      }
    ],
    "idName": "remove-protected-branch-required-status-checks-contexts",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-required-status-checks-contexts-of-protected-branch"
  },
  {
    "name": "Get pull request review enforcement of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
    "previews": [
      {
        "name": "luke-cage",
        "description": "**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.luke-cage-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
    "idName": "get-protected-branch-pull-request-review-enforcement",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-pull-request-review-enforcement-of-protected-branch"
  },
  {
    "name": "Update pull request review enforcement of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
    "previews": [
      {
        "name": "luke-cage",
        "description": "**Note:** The Protected Branches API now has a setting for requiring a specified number of approving pull request reviews before merging. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-03-16-protected-branches-required-approving-reviews) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.luke-cage-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "dismissal_restrictions",
        "type": "object",
        "description": "Specify which users and teams can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.",
        "required": false,
        "location": "body"
      },
      {
        "name": "dismissal_restrictions.users",
        "type": "string[]",
        "description": "The list of user `login`s with dismissal access",
        "required": false,
        "location": "body"
      },
      {
        "name": "dismissal_restrictions.teams",
        "type": "string[]",
        "description": "The list of team `slug`s with dismissal access",
        "required": false,
        "location": "body"
      },
      {
        "name": "dismiss_stale_reviews",
        "type": "boolean",
        "description": "Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.",
        "required": false,
        "location": "body"
      },
      {
        "name": "require_code_owner_reviews",
        "type": "boolean",
        "description": "Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) have reviewed.",
        "required": false,
        "location": "body"
      },
      {
        "name": "required_approving_review_count",
        "type": "integer",
        "description": "Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6.",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "dismissal_restrictions": {
          "users": [
            "octocat"
          ],
          "teams": [
            "justice-league"
          ]
        },
        "dismiss_stale_reviews": true,
        "require_code_owner_reviews": true,
        "required_approving_review_count": 2
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nUpdating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews",
          "dismissal_restrictions": {
            "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions",
            "users_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams",
            "users": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            ],
            "teams": [
              {
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "url": "https://api.github.com/teams/1",
                "name": "Justice League",
                "slug": "justice-league",
                "description": "A great team.",
                "privacy": "closed",
                "permission": "admin",
                "members_url": "https://api.github.com/teams/1/members{/member}",
                "repositories_url": "https://api.github.com/teams/1/repos",
                "parent": null
              }
            ]
          },
          "dismiss_stale_reviews": true,
          "require_code_owner_reviews": true,
          "required_approving_review_count": 2
        }
      }
    ],
    "idName": "update-protected-branch-pull-request-review-enforcement",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#update-pull-request-review-enforcement-of-protected-branch"
  },
  {
    "name": "Remove pull request review enforcement of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
    "idName": "remove-protected-branch-pull-request-review-enforcement",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-pull-request-review-enforcement-of-protected-branch"
  },
  {
    "name": "Get required signatures of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
    "previews": [
      {
        "name": "zzzax",
        "description": "**Note:** Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.zzzax-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.\n\n**Note**: You must enable branch protection to require signed commits.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures",
          "enabled": true
        }
      }
    ],
    "idName": "get-protected-branch-required-signatures",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-required-signatures-of-protected-branch"
  },
  {
    "name": "Add required signatures of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
    "previews": [
      {
        "name": "zzzax",
        "description": "**Note:** Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.zzzax-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures",
          "enabled": true
        }
      }
    ],
    "idName": "add-protected-branch-required-signatures",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#add-required-signatures-of-protected-branch"
  },
  {
    "name": "Remove required signatures of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/branches/:branch/protection/required_signatures",
    "previews": [
      {
        "name": "zzzax",
        "description": "**Note:** Protected Branches API can now manage a setting for requiring signed commits. This feature is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.zzzax-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.",
    "idName": "remove-protected-branch-required-signatures",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-required-signatures-of-protected-branch"
  },
  {
    "name": "Get admin enforcement of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.",
    "idName": "get-protected-branch-admin-enforcement",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-admin-enforcement-of-protected-branch"
  },
  {
    "name": "Add admin enforcement of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nAdding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins",
          "enabled": true
        }
      }
    ],
    "idName": "add-protected-branch-admin-enforcement",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#add-admin-enforcement-of-protected-branch"
  },
  {
    "name": "Remove admin enforcement of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nRemoving admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.",
    "idName": "remove-protected-branch-admin-enforcement",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-admin-enforcement-of-protected-branch"
  },
  {
    "name": "Get restrictions of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\n**Note**: Teams and users `restrictions` are only available for organization-owned repositories.",
    "idName": "get-protected-branch-restrictions",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#get-restrictions-of-protected-branch"
  },
  {
    "name": "Remove restrictions of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nDisables the ability to restrict who can push to this branch.",
    "idName": "remove-protected-branch-restrictions",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-restrictions-of-protected-branch"
  },
  {
    "name": "List team restrictions of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
    "previews": [
      {
        "name": "hellcat",
        "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "requests": [
      [
        {
          "id": 1,
          "node_id": "MDQ6VGVhbTE=",
          "url": "https://api.github.com/teams/1",
          "name": "Justice League",
          "slug": "justice-league",
          "description": "A great team.",
          "privacy": "closed",
          "permission": "admin",
          "members_url": "https://api.github.com/teams/1/members{/member}",
          "repositories_url": "https://api.github.com/teams/1/repos",
          "parent": null
        }
      ]
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nLists the teams who have push access to this branch. If you pass the `hellcat-preview` media type, the list includes child teams.",
    "responses": [],
    "idName": "list-protected-branch-team-restrictions",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#list-team-restrictions-of-protected-branch"
  },
  {
    "name": "Replace team restrictions of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
    "previews": [
      {
        "name": "hellcat",
        "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "mapTo": "input",
        "name": "teams",
        "type": "string[]",
        "required": true,
        "description": "",
        "location": "body"
      }
    ],
    "requests": [
      [
        "justice-league"
      ]
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nReplaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. If you pass the `hellcat-preview` media type, you can include child teams.\n\n| Type    | Description                                                                                                                         |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users and teams in total is limited to 100 items. |",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "id": 1,
            "node_id": "MDQ6VGVhbTE=",
            "url": "https://api.github.com/teams/1",
            "name": "Justice League",
            "slug": "justice-league",
            "description": "A great team.",
            "privacy": "closed",
            "permission": "admin",
            "members_url": "https://api.github.com/teams/1/members{/member}",
            "repositories_url": "https://api.github.com/teams/1/repos",
            "parent": null
          }
        ]
      }
    ],
    "idName": "replace-protected-branch-team-restrictions",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#replace-team-restrictions-of-protected-branch"
  },
  {
    "name": "Add team restrictions of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
    "previews": [
      {
        "name": "hellcat",
        "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "mapTo": "input",
        "name": "teams",
        "type": "string[]",
        "required": true,
        "description": "",
        "location": "body"
      }
    ],
    "requests": [
      [
        "justice-league"
      ]
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nGrants the specified teams push access for this branch. If you pass the `hellcat-preview` media type, you can also give push access to child teams.\n\n| Type    | Description                                                                                                                         |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users and teams in total is limited to 100 items. |",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "id": 1,
            "node_id": "MDQ6VGVhbTE=",
            "url": "https://api.github.com/teams/1",
            "name": "Justice League",
            "slug": "justice-league",
            "description": "A great team.",
            "privacy": "closed",
            "permission": "admin",
            "members_url": "https://api.github.com/teams/1/members{/member}",
            "repositories_url": "https://api.github.com/teams/1/repos",
            "parent": null
          }
        ]
      }
    ],
    "idName": "add-protected-branch-team-restrictions",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#add-team-restrictions-of-protected-branch"
  },
  {
    "name": "Remove team restrictions of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
    "previews": [
      {
        "name": "hellcat",
        "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "mapTo": "input",
        "name": "teams",
        "type": "string[]",
        "required": true,
        "description": "",
        "location": "body"
      }
    ],
    "requests": [
      [
        "octocats"
      ]
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nRemoves the ability of a team to push to this branch. If you pass the `hellcat-preview` media type, you can include child teams.\n\n| Type    | Description                                                                                                                                  |\n| ------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users and teams in total is limited to 100 items. |",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "id": 1,
            "node_id": "MDQ6VGVhbTE=",
            "url": "https://api.github.com/teams/1",
            "name": "Justice League",
            "slug": "justice-league",
            "description": "A great team.",
            "privacy": "closed",
            "permission": "admin",
            "members_url": "https://api.github.com/teams/1/members{/member}",
            "repositories_url": "https://api.github.com/teams/1/repos",
            "parent": null
          }
        ]
      }
    ],
    "idName": "remove-protected-branch-team-restrictions",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-team-restrictions-of-protected-branch"
  },
  {
    "name": "List user restrictions of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nLists the people who have push access to this branch.",
    "idName": "list-protected-branch-user-restrictions",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#list-user-restrictions-of-protected-branch"
  },
  {
    "name": "Replace user restrictions of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "mapTo": "input",
        "name": "users",
        "type": "string[]",
        "required": true,
        "description": "",
        "location": "body"
      }
    ],
    "requests": [
      [
        "octocat"
      ]
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nReplaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.\n\n| Type    | Description                                                                                                            |\n| ------- | ---------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users and teams in total is limited to 100 items. |",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          }
        ]
      }
    ],
    "idName": "replace-protected-branch-user-restrictions",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#replace-user-restrictions-of-protected-branch"
  },
  {
    "name": "Add user restrictions of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "mapTo": "input",
        "name": "users",
        "type": "string[]",
        "required": true,
        "description": "",
        "location": "body"
      }
    ],
    "requests": [
      [
        "octocat"
      ]
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nGrants the specified people push access for this branch.\n\n| Type    | Description                                                                                                            |\n| ------- | ---------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users and teams in total is limited to 100 items. |",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          }
        ]
      }
    ],
    "idName": "add-protected-branch-user-restrictions",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#add-user-restrictions-of-protected-branch"
  },
  {
    "name": "Remove user restrictions of protected branch",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "branch",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "mapTo": "input",
        "name": "users",
        "type": "string[]",
        "required": true,
        "description": "",
        "location": "body"
      }
    ],
    "requests": [
      [
        "defunkt"
      ]
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nRemoves the ability of a team to push to this branch.\n\n| Type    | Description                                                                                                                            |\n| ------- | -------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames of the people who should no longer have push access. **Note**: The list of users and teams in total is limited to 100 items. |",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          }
        ]
      }
    ],
    "idName": "remove-protected-branch-user-restrictions",
    "documentationUrl": "https://developer.github.com/v3/repos/branches/#remove-user-restrictions-of-protected-branch"
  },
  {
    "name": "List collaborators",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/collaborators",
    "previews": [
      {
        "name": "hellcat",
        "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "affiliation",
        "type": "string",
        "description": "Filter collaborators returned by their affiliation. Can be one of:  \n\\* `outside`: All outside collaborators of an organization-owned repository.  \n\\* `direct`: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see.",
        "default": "all",
        "required": false,
        "enum": [
          "outside",
          "direct",
          "all"
        ],
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nIf you pass the `hellcat-preview` media type, team members will include the members of child teams.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false,
            "permissions": {
              "pull": true,
              "push": true,
              "admin": false
            }
          }
        ]
      }
    ],
    "idName": "list-collaborators",
    "documentationUrl": "https://developer.github.com/v3/repos/collaborators/#list-collaborators"
  },
  {
    "name": "Check if a user is a collaborator",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/collaborators/:username",
    "previews": [
      {
        "name": "hellcat",
        "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nIf you pass the `hellcat-preview` media type, team members will include the members of child teams.",
    "idName": "check-collaborator",
    "documentationUrl": "https://developer.github.com/v3/repos/collaborators/#check-if-a-user-is-a-collaborator"
  },
  {
    "name": "Review a user's permission level",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/collaborators/:username/permission",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Possible values for the `permission` key: `admin`, `write`, `read`, `none`.",
    "idName": "get-collaborator-permission-level",
    "documentationUrl": "https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level"
  },
  {
    "name": "Add user as a collaborator",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/collaborators/:username",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "permission",
        "type": "string",
        "description": "The permission to grant the collaborator. **Only valid on organization-owned repositories.** Can be one of:  \n\\* `pull` - can pull, but not push to or administer this repository.  \n\\* `push` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push and administer this repository.",
        "default": "push",
        "required": false,
        "enum": [
          "pull",
          "push",
          "admin"
        ],
        "location": "body"
      }
    ],
    "description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"\n\nThe invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://developer.github.com/v3/repos/invitations/).\n\n**Rate limits**\n\nTo prevent abuse, you are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.",
    "triggersNotification": true,
    "idName": "add-collaborator",
    "documentationUrl": "https://developer.github.com/v3/repos/collaborators/#add-user-as-a-collaborator"
  },
  {
    "name": "Remove user as a collaborator",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/collaborators/:username",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "remove-collaborator",
    "documentationUrl": "https://developer.github.com/v3/repos/collaborators/#remove-user-as-a-collaborator"
  },
  {
    "name": "List commit comments for a repository",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/comments",
    "previews": [
      {
        "name": "squirrel-girl",
        "description": "An additional `reactions` object in the commit comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Commit Comments use [these custom media types](https://developer.github.com/v3/repos/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\nComments are ordered by ascending ID.\n\n",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1",
            "url": "https://api.github.com/repos/octocat/Hello-World/comments/1",
            "id": 1,
            "node_id": "MDEzOkNvbW1pdENvbW1lbnQx",
            "body": "Great stuff",
            "path": "file1.txt",
            "position": 4,
            "line": 14,
            "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "user": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "created_at": "2011-04-14T16:00:49Z",
            "updated_at": "2011-04-14T16:00:49Z"
          }
        ]
      }
    ],
    "idName": "list-commit-comments",
    "documentationUrl": "https://developer.github.com/v3/repos/comments/#list-commit-comments-for-a-repository"
  },
  {
    "name": "List comments for a single commit",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/commits/:commit_sha/comments",
    "previews": [
      {
        "name": "squirrel-girl",
        "description": "An additional `reactions` object in the commit comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "commit_sha",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      },
      {
        "name": "ref",
        "type": "string",
        "required": false,
        "description": "",
        "location": "url",
        "deprecated": {
          "date": "2019-06-07",
          "message": "\"ref\" parameter renamed to \"commit_sha\"",
          "before": {
            "name": "ref"
          },
          "after": {
            "name": "commit_sha"
          }
        }
      }
    ],
    "description": "Use the `:commit_sha` to specify the commit that will have its comments listed.\n\n",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1",
            "url": "https://api.github.com/repos/octocat/Hello-World/comments/1",
            "id": 1,
            "node_id": "MDEzOkNvbW1pdENvbW1lbnQx",
            "body": "Great stuff",
            "path": "file1.txt",
            "position": 4,
            "line": 14,
            "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "user": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "created_at": "2011-04-14T16:00:49Z",
            "updated_at": "2011-04-14T16:00:49Z"
          }
        ]
      }
    ],
    "idName": "list-comments-for-commit",
    "documentationUrl": "https://developer.github.com/v3/repos/comments/#list-comments-for-a-single-commit"
  },
  {
    "name": "Create a commit comment",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/commits/:commit_sha/comments",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "commit_sha",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "body",
        "type": "string",
        "description": "The contents of the comment.",
        "required": true,
        "location": "body"
      },
      {
        "name": "path",
        "type": "string",
        "description": "Relative path of the file to comment on.",
        "required": false,
        "location": "body"
      },
      {
        "name": "position",
        "type": "integer",
        "description": "Line index in the diff to comment on.",
        "required": false,
        "location": "body"
      },
      {
        "name": "line",
        "type": "integer",
        "description": "**Deprecated**. Use **position** parameter instead. Line number in the file to comment on.",
        "required": false,
        "location": "body"
      },
      {
        "name": "sha",
        "type": "string",
        "required": false,
        "description": "",
        "location": "url",
        "deprecated": {
          "date": "2019-06-07",
          "message": "\"sha\" parameter renamed to \"commit_sha\"",
          "before": {
            "name": "sha"
          },
          "after": {
            "name": "commit_sha"
          }
        }
      }
    ],
    "requests": [
      {
        "body": "Great stuff",
        "path": "file1.txt",
        "position": 4,
        "line": null
      }
    ],
    "description": "Create a comment for a commit using its `:commit_sha`.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1",
          "url": "https://api.github.com/repos/octocat/Hello-World/comments/1",
          "id": 1,
          "node_id": "MDEzOkNvbW1pdENvbW1lbnQx",
          "body": "Great stuff",
          "path": "file1.txt",
          "position": 4,
          "line": 14,
          "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "user": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "created_at": "2011-04-14T16:00:49Z",
          "updated_at": "2011-04-14T16:00:49Z"
        }
      }
    ],
    "triggersNotification": true,
    "idName": "create-commit-comment",
    "documentationUrl": "https://developer.github.com/v3/repos/comments/#create-a-commit-comment"
  },
  {
    "name": "Get a single commit comment",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/comments/:comment_id",
    "previews": [
      {
        "name": "squirrel-girl",
        "description": "An additional `reactions` object in the commit comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.squirrel-girl-preview\n\n```\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "comment_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1",
          "url": "https://api.github.com/repos/octocat/Hello-World/comments/1",
          "id": 1,
          "node_id": "MDEzOkNvbW1pdENvbW1lbnQx",
          "body": "Great stuff",
          "path": "file1.txt",
          "position": 4,
          "line": 14,
          "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "user": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "created_at": "2011-04-14T16:00:49Z",
          "updated_at": "2011-04-14T16:00:49Z"
        }
      }
    ],
    "idName": "get-commit-comment",
    "documentationUrl": "https://developer.github.com/v3/repos/comments/#get-a-single-commit-comment"
  },
  {
    "name": "Update a commit comment",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/comments/:comment_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "comment_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "body",
        "type": "string",
        "description": "The contents of the comment",
        "required": true,
        "location": "body"
      }
    ],
    "requests": [
      {
        "body": "Nice change"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1",
          "url": "https://api.github.com/repos/octocat/Hello-World/comments/1",
          "id": 1,
          "node_id": "MDEzOkNvbW1pdENvbW1lbnQx",
          "body": "Nice change",
          "path": "file1.txt",
          "position": 4,
          "line": 14,
          "commit_id": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "user": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "created_at": "2011-04-14T16:00:49Z",
          "updated_at": "2011-04-14T16:00:49Z"
        }
      }
    ],
    "idName": "update-commit-comment",
    "documentationUrl": "https://developer.github.com/v3/repos/comments/#update-a-commit-comment"
  },
  {
    "name": "Delete a commit comment",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/comments/:comment_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "comment_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "delete-commit-comment",
    "documentationUrl": "https://developer.github.com/v3/repos/comments/#delete-a-commit-comment"
  },
  {
    "name": "List commits on a repository",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/commits",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "sha",
        "type": "string",
        "description": "SHA or branch to start listing commits from.",
        "default": "the repository’s default branch (usually `master`).",
        "required": false,
        "location": "query"
      },
      {
        "name": "path",
        "type": "string",
        "description": "Only commits containing this file path will be returned.",
        "required": false,
        "location": "query"
      },
      {
        "name": "author",
        "type": "string",
        "description": "GitHub login or email address by which to filter by commit author.",
        "required": false,
        "location": "query"
      },
      {
        "name": "since",
        "type": "string",
        "description": "Only commits after this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "required": false,
        "location": "query"
      },
      {
        "name": "until",
        "type": "string",
        "description": "Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "required": false,
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
            "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments",
            "commit": {
              "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "author": {
                "name": "Monalisa Octocat",
                "email": "support@github.com",
                "date": "2011-04-14T16:00:49Z"
              },
              "committer": {
                "name": "Monalisa Octocat",
                "email": "support@github.com",
                "date": "2011-04-14T16:00:49Z"
              },
              "message": "Fix all the bugs",
              "tree": {
                "url": "https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
              },
              "comment_count": 0,
              "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
              }
            },
            "author": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "committer": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "parents": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
              }
            ]
          }
        ]
      }
    ],
    "idName": "list-commits",
    "documentationUrl": "https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository"
  },
  {
    "name": "Get a single commit",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/commits/:ref",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "ref",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "sha",
        "type": "string",
        "required": false,
        "description": "",
        "location": "url",
        "deprecated": {
          "date": "2019-04-10",
          "message": "\"sha\" parameter renamed to \"ref\"",
          "before": {
            "name": "sha"
          },
          "after": {
            "name": "commit_sha"
          }
        }
      },
      {
        "name": "commit_sha",
        "type": "string",
        "required": false,
        "description": "",
        "location": "url",
        "deprecated": {
          "date": "2019-06-21",
          "message": "\"commit_sha\" parameter renamed to \"ref\"",
          "before": {
            "name": "commit_sha"
          },
          "after": {
            "name": "ref"
          }
        }
      }
    ],
    "description": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\nYou can pass the appropriate [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) to fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |\n\n",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
          "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "comments_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments",
          "commit": {
            "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "author": {
              "name": "Monalisa Octocat",
              "email": "support@github.com",
              "date": "2011-04-14T16:00:49Z"
            },
            "committer": {
              "name": "Monalisa Octocat",
              "email": "support@github.com",
              "date": "2011-04-14T16:00:49Z"
            },
            "message": "Fix all the bugs",
            "tree": {
              "url": "https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
            },
            "comment_count": 0,
            "verification": {
              "verified": false,
              "reason": "unsigned",
              "signature": null,
              "payload": null
            }
          },
          "author": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "committer": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "parents": [
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
            }
          ],
          "stats": {
            "additions": 104,
            "deletions": 4,
            "total": 108
          },
          "files": [
            {
              "filename": "file1.txt",
              "additions": 10,
              "deletions": 2,
              "changes": 12,
              "status": "modified",
              "raw_url": "https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt",
              "blob_url": "https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt",
              "patch": "@@ -29,7 +29,7 @@\n....."
            }
          ]
        }
      }
    ],
    "idName": "get-commit",
    "documentationUrl": "https://developer.github.com/v3/repos/commits/#get-a-single-commit"
  },
  {
    "name": "Get the SHA-1 of a commit reference",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/commits/:ref",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "ref",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "**Note:** To access this endpoint, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.VERSION.sha\n\n```\n\nReturns the SHA-1 of the commit reference. You must have `read` access for the repository to get the SHA-1 of a commit reference. You can use this endpoint to check if a remote reference's SHA-1 is the same as your local reference's SHA-1 by providing the local SHA-1 reference as the ETag.\n\n",
    "responses": [
      {
        "headers": {
          "status": "200 OK"
        }
      }
    ],
    "idName": "get-commit-ref-sha",
    "documentationUrl": "https://developer.github.com/v3/repos/commits/#get-a-single-commit",
    "deprecated": {
      "date": "2019-05-22",
      "message": "\"Get the SHA-1 of a commit reference\" will be removed. Use \"Get a single commit\" instead with media type format set to \"sha\" instead."
    }
  },
  {
    "name": "Compare two commits",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/compare/:base...:head",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "base",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "head",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "requests": [
      {
        "url": "https://api.github.com/repos/octocat/Hello-World/compare/master...topic",
        "html_url": "https://github.com/octocat/Hello-World/compare/master...topic",
        "permalink_url": "https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17",
        "diff_url": "https://github.com/octocat/Hello-World/compare/master...topic.diff",
        "patch_url": "https://github.com/octocat/Hello-World/compare/master...topic.patch",
        "base_commit": {
          "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
          "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "comments_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments",
          "commit": {
            "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "author": {
              "name": "Monalisa Octocat",
              "email": "support@github.com",
              "date": "2011-04-14T16:00:49Z"
            },
            "committer": {
              "name": "Monalisa Octocat",
              "email": "support@github.com",
              "date": "2011-04-14T16:00:49Z"
            },
            "message": "Fix all the bugs",
            "tree": {
              "url": "https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
            },
            "comment_count": 0,
            "verification": {
              "verified": false,
              "reason": "unsigned",
              "signature": null,
              "payload": null
            }
          },
          "author": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "committer": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "parents": [
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
            }
          ]
        },
        "merge_base_commit": {
          "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
          "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "comments_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments",
          "commit": {
            "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "author": {
              "name": "Monalisa Octocat",
              "email": "support@github.com",
              "date": "2011-04-14T16:00:49Z"
            },
            "committer": {
              "name": "Monalisa Octocat",
              "email": "support@github.com",
              "date": "2011-04-14T16:00:49Z"
            },
            "message": "Fix all the bugs",
            "tree": {
              "url": "https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
            },
            "comment_count": 0,
            "verification": {
              "verified": false,
              "reason": "unsigned",
              "signature": null,
              "payload": null
            }
          },
          "author": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "committer": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "parents": [
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
            }
          ]
        },
        "status": "behind",
        "ahead_by": 1,
        "behind_by": 2,
        "total_commits": 1,
        "commits": [
          {
            "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "node_id": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==",
            "html_url": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments",
            "commit": {
              "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "author": {
                "name": "Monalisa Octocat",
                "email": "support@github.com",
                "date": "2011-04-14T16:00:49Z"
              },
              "committer": {
                "name": "Monalisa Octocat",
                "email": "support@github.com",
                "date": "2011-04-14T16:00:49Z"
              },
              "message": "Fix all the bugs",
              "tree": {
                "url": "https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
              },
              "comment_count": 0,
              "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
              }
            },
            "author": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "committer": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "parents": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
                "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
              }
            ]
          }
        ],
        "files": [
          {
            "sha": "bbcd538c8e72b8c175046e27cc8f907076331401",
            "filename": "file1.txt",
            "status": "added",
            "additions": 103,
            "deletions": 21,
            "changes": 124,
            "blob_url": "https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt",
            "raw_url": "https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "patch": "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
          }
        ]
      }
    ],
    "description": "Both `:base` and `:head` must be branch names in `:repo`. To compare branches across other repositories in the same network as `:repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [Commit List API](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long to generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |",
    "responses": [],
    "idName": "compare-commits",
    "documentationUrl": "https://developer.github.com/v3/repos/commits/#compare-two-commits"
  },
  {
    "name": "List branches for HEAD commit",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/commits/:commit_sha/branches-where-head",
    "previews": [
      {
        "name": "groot",
        "description": "**Note:** Listing branches or pull requests for a commit in the Commits API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-04-11-pulls-branches-for-commit/) for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.groot-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "commit_sha",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Protected branches are available in public repositories with GitHub Free, and in public and private repositories with GitHub Pro, GitHub Team, and GitHub Enterprise Cloud. For more information, see [GitHub's billing plans](https://help.github.com/articles/github-s-billing-plans) in the GitHub Help documentation.\n\nReturns all branches where the given commit SHA is the HEAD, or latest commit for the branch.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "name": "branch_5",
            "commit": {
              "sha": "c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc",
              "url": "https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc"
            },
            "protected": "false"
          }
        ]
      }
    ],
    "idName": "list-branches-for-head-commit",
    "documentationUrl": "https://developer.github.com/v3/repos/commits/#list-branches-for-head-commit"
  },
  {
    "name": "List pull requests associated with commit",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/commits/:commit_sha/pulls",
    "previews": [
      {
        "name": "groot",
        "description": "**Note:** Listing branches or pull requests for a commit in the Commits API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-04-11-pulls-branches-for-commit/) for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.groot-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "commit_sha",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists all pull requests containing the provided commit SHA, which can be from any point in the commit history. The results will include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests) endpoint.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347",
            "id": 1,
            "node_id": "MDExOlB1bGxSZXF1ZXN0MQ==",
            "html_url": "https://github.com/octocat/Hello-World/pull/1347",
            "diff_url": "https://github.com/octocat/Hello-World/pull/1347.diff",
            "patch_url": "https://github.com/octocat/Hello-World/pull/1347.patch",
            "issue_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits",
            "review_comments_url": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments",
            "review_comment_url": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "number": 1347,
            "state": "open",
            "locked": true,
            "title": "new-feature",
            "user": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "body": "Please pull these awesome changes",
            "labels": [
              {
                "id": 208045946,
                "node_id": "MDU6TGFiZWwyMDgwNDU5NDY=",
                "url": "https://api.github.com/repos/octocat/Hello-World/labels/bug",
                "name": "bug",
                "description": "Something isn't working",
                "color": "f29513",
                "default": true
              }
            ],
            "milestone": {
              "url": "https://api.github.com/repos/octocat/Hello-World/milestones/1",
              "html_url": "https://github.com/octocat/Hello-World/milestones/v1.0",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels",
              "id": 1002604,
              "node_id": "MDk6TWlsZXN0b25lMTAwMjYwNA==",
              "number": 1,
              "state": "open",
              "title": "v1.0",
              "description": "Tracking milestone for version 1.0",
              "creator": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "open_issues": 4,
              "closed_issues": 8,
              "created_at": "2011-04-10T20:09:31Z",
              "updated_at": "2014-03-03T18:58:10Z",
              "closed_at": "2013-02-12T13:22:01Z",
              "due_on": "2012-10-09T23:39:01Z"
            },
            "active_lock_reason": "too heated",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:01:12Z",
            "closed_at": "2011-01-26T19:01:12Z",
            "merged_at": "2011-01-26T19:01:12Z",
            "merge_commit_sha": "e5bd3914e2e596debea16f433f57875b5b90bcd6",
            "assignee": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "assignees": [
              {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              {
                "login": "hubot",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/hubot_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hubot",
                "html_url": "https://github.com/hubot",
                "followers_url": "https://api.github.com/users/hubot/followers",
                "following_url": "https://api.github.com/users/hubot/following{/other_user}",
                "gists_url": "https://api.github.com/users/hubot/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hubot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hubot/subscriptions",
                "organizations_url": "https://api.github.com/users/hubot/orgs",
                "repos_url": "https://api.github.com/users/hubot/repos",
                "events_url": "https://api.github.com/users/hubot/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hubot/received_events",
                "type": "User",
                "site_admin": true
              }
            ],
            "requested_reviewers": [
              {
                "login": "other_user",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/other_user",
                "html_url": "https://github.com/other_user",
                "followers_url": "https://api.github.com/users/other_user/followers",
                "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                "organizations_url": "https://api.github.com/users/other_user/orgs",
                "repos_url": "https://api.github.com/users/other_user/repos",
                "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                "received_events_url": "https://api.github.com/users/other_user/received_events",
                "type": "User",
                "site_admin": false
              }
            ],
            "requested_teams": [
              {
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "url": "https://api.github.com/teams/1",
                "name": "Justice League",
                "slug": "justice-league",
                "description": "A great team.",
                "privacy": "closed",
                "permission": "admin",
                "members_url": "https://api.github.com/teams/1/members{/member}",
                "repositories_url": "https://api.github.com/teams/1/repos",
                "parent": null
              }
            ],
            "head": {
              "label": "octocat:new-topic",
              "ref": "new-topic",
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "repo": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "is_template": true,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "template_repository": null,
                "allow_squash_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              }
            },
            "base": {
              "label": "octocat:master",
              "ref": "master",
              "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "user": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "repo": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "is_template": true,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "template_repository": null,
                "allow_squash_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              }
            },
            "_links": {
              "self": {
                "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
              },
              "html": {
                "href": "https://github.com/octocat/Hello-World/pull/1347"
              },
              "issue": {
                "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
              },
              "comments": {
                "href": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
              },
              "review_comments": {
                "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
              },
              "review_comment": {
                "href": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
              },
              "commits": {
                "href": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
              },
              "statuses": {
                "href": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
              }
            },
            "author_association": "OWNER",
            "draft": false
          }
        ]
      }
    ],
    "idName": "list-pull-requests-associated-with-commit",
    "documentationUrl": "https://developer.github.com/v3/repos/commits/#list-pull-requests-associated-with-commit"
  },
  {
    "name": "Retrieve community profile metrics",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/community/profile",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "This endpoint will return all community profile metrics, including an overall health score, repository description, the presence of documentation, detected code of conduct, detected license, and the presence of ISSUE\\_TEMPLATE, PULL\\_REQUEST\\_TEMPLATE, README, and CONTRIBUTING files.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "health_percentage": 100,
          "description": "My first repository on GitHub!",
          "documentation": true,
          "files": {
            "code_of_conduct": {
              "name": "Contributor Covenant",
              "key": "contributor_covenant",
              "url": "https://api.github.com/codes_of_conduct/contributor_covenant",
              "html_url": "https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md"
            },
            "contributing": {
              "url": "https://api.github.com/repos/octocat/Hello-World/contents/CONTRIBUTING",
              "html_url": "https://github.com/octocat/Hello-World/blob/master/CONTRIBUTING"
            },
            "issue_template": {
              "url": "https://api.github.com/repos/octocat/Hello-World/contents/ISSUE_TEMPLATE",
              "html_url": "https://github.com/octocat/Hello-World/blob/master/ISSUE_TEMPLATE"
            },
            "pull_request_template": {
              "url": "https://api.github.com/repos/octocat/Hello-World/contents/PULL_REQUEST_TEMPLATE",
              "html_url": "https://github.com/octocat/Hello-World/blob/master/PULL_REQUEST_TEMPLATE"
            },
            "license": {
              "name": "MIT License",
              "key": "mit",
              "spdx_id": "MIT",
              "url": "https://api.github.com/licenses/mit",
              "html_url": "https://github.com/octocat/Hello-World/blob/master/LICENSE"
            },
            "readme": {
              "url": "https://api.github.com/repos/octocat/Hello-World/contents/README.md",
              "html_url": "https://github.com/octocat/Hello-World/blob/master/README.md"
            }
          },
          "updated_at": "2017-02-28T19:09:29Z"
        }
      }
    ],
    "idName": "retrieve-community-profile-metrics",
    "documentationUrl": "https://developer.github.com/v3/repos/community/#retrieve-community-profile-metrics"
  },
  {
    "name": "Get the README",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/readme",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "ref",
        "type": "string",
        "description": "The name of the commit/branch/tag.",
        "default": "the repository’s default branch (usually `master`)",
        "required": false,
        "location": "query"
      }
    ],
    "description": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://developer.github.com/v3/repos/contents/#custom-media-types) for retrieving the raw content or rendered HTML.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "type": "file",
          "encoding": "base64",
          "size": 5362,
          "name": "README.md",
          "path": "README.md",
          "content": "encoded content ...",
          "sha": "3d21ec53a331a6f037a91c368710b99387d012c1",
          "url": "https://api.github.com/repos/octokit/octokit.rb/contents/README.md",
          "git_url": "https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1",
          "html_url": "https://github.com/octokit/octokit.rb/blob/master/README.md",
          "download_url": "https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md",
          "_links": {
            "git": "https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1",
            "self": "https://api.github.com/repos/octokit/octokit.rb/contents/README.md",
            "html": "https://github.com/octokit/octokit.rb/blob/master/README.md"
          }
        }
      }
    ],
    "idName": "get-readme",
    "documentationUrl": "https://developer.github.com/v3/repos/contents/#get-the-readme"
  },
  {
    "name": "Get contents",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/contents/:path",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "path",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "ref",
        "type": "string",
        "description": "The name of the commit/branch/tag.",
        "default": "the repository’s default branch (usually `master`)",
        "required": false,
        "location": "query"
      }
    ],
    "description": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit `:path`, you will receive the contents of all files in the repository.\n\nFiles and symlinks support [a custom media type](https://developer.github.com/v3/repos/contents/#custom-media-types) for retrieving the raw content or rendered HTML (when supported). All content types support [a custom media type](https://developer.github.com/v3/repos/contents/#custom-media-types) to ensure the content is returned in a consistent object format.\n\n**Note**:\n\n*   To get a repository's contents recursively, you can [recursively get the tree](https://developer.github.com/v3/git/trees/).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees API](https://developer.github.com/v3/git/trees/#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\nThe response will be an array of objects, one object for each item in the directory.\n\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value _should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW). In the next major version of the API, the type will be returned as \"submodule\".\n\nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the API responds with the content of the file (in the [format shown above](https://developer.github.com/v3/repos/contents/#response-if-content-is-a-file)).\n\nOtherwise, the API responds with an object describing the symlink itself:\n\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific commit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out the submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the github.com URLs (`html_url` and `_links[\"html\"]`) will have null values.",
    "idName": "get-contents",
    "documentationUrl": "https://developer.github.com/v3/repos/contents/#get-contents"
  },
  {
    "name": "Create or update a file",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/contents/:path",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "path",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "message",
        "type": "string",
        "description": "The commit message.",
        "required": true,
        "location": "body"
      },
      {
        "name": "content",
        "type": "string",
        "description": "The new file content, using Base64 encoding.",
        "required": true,
        "location": "body"
      },
      {
        "name": "sha",
        "type": "string",
        "description": "**Required if you are updating a file**. The blob SHA of the file being replaced.",
        "required": false,
        "location": "body"
      },
      {
        "name": "branch",
        "type": "string",
        "description": "The branch name.",
        "default": "the repository’s default branch (usually `master`)",
        "required": false,
        "location": "body"
      },
      {
        "name": "committer",
        "type": "object",
        "description": "The person that committed the file.",
        "default": "the authenticated user.",
        "required": false,
        "location": "body"
      },
      {
        "name": "committer.name",
        "type": "string",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "required": true,
        "location": "body"
      },
      {
        "name": "committer.email",
        "type": "string",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "required": true,
        "location": "body"
      },
      {
        "name": "author",
        "type": "object",
        "description": "The author of the file.",
        "default": "The `committer` or the authenticated user if you omit `committer`.",
        "required": false,
        "location": "body"
      },
      {
        "name": "author.name",
        "type": "string",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "required": true,
        "location": "body"
      },
      {
        "name": "author.email",
        "type": "string",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "required": true,
        "location": "body"
      }
    ],
    "requests": [
      {
        "message": "my commit message",
        "committer": {
          "name": "Monalisa Octocat",
          "email": "octocat@github.com"
        },
        "content": "bXkgbmV3IGZpbGUgY29udGVudHM="
      }
    ],
    "description": "Creates a new file or updates an existing file in a repository.",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "content": {
            "name": "hello.txt",
            "path": "notes/hello.txt",
            "sha": "95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
            "size": 9,
            "url": "https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt",
            "html_url": "https://github.com/octocat/Hello-World/blob/master/notes/hello.txt",
            "git_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
            "download_url": "https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt",
            "type": "file",
            "_links": {
              "self": "https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt",
              "git": "https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
              "html": "https://github.com/octocat/Hello-World/blob/master/notes/hello.txt"
            }
          },
          "commit": {
            "sha": "7638417db6d59f3c431d3e1f261cc637155684cd",
            "node_id": "MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==",
            "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd",
            "html_url": "https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd",
            "author": {
              "date": "2014-11-07T22:01:45Z",
              "name": "Monalisa Octocat",
              "email": "octocat@github.com"
            },
            "committer": {
              "date": "2014-11-07T22:01:45Z",
              "name": "Monalisa Octocat",
              "email": "octocat@github.com"
            },
            "message": "my commit message",
            "tree": {
              "url": "https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb",
              "sha": "691272480426f78a0138979dd3ce63b77f706feb"
            },
            "parents": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                "html_url": "https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                "sha": "1acc419d4d6a9ce985db7be48c6349a0475975b5"
              }
            ],
            "verification": {
              "verified": false,
              "reason": "unsigned",
              "signature": null,
              "payload": null
            }
          }
        }
      }
    ],
    "idName": "create-or-update-file",
    "documentationUrl": "https://developer.github.com/v3/repos/contents/#create-or-update-a-file"
  },
  {
    "name": "Create a file",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/contents/:path",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "path",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "message",
        "type": "string",
        "description": "The commit message.",
        "required": true,
        "location": "body"
      },
      {
        "name": "content",
        "type": "string",
        "description": "The new file content, using Base64 encoding.",
        "required": true,
        "location": "body"
      },
      {
        "name": "sha",
        "type": "string",
        "description": "**Required if you are updating a file**. The blob SHA of the file being replaced.",
        "required": false,
        "location": "body"
      },
      {
        "name": "branch",
        "type": "string",
        "description": "The branch name.",
        "default": "the repository’s default branch (usually `master`)",
        "required": false,
        "location": "body"
      },
      {
        "name": "committer",
        "type": "object",
        "description": "The person that committed the file.",
        "default": "the authenticated user.",
        "required": false,
        "location": "body"
      },
      {
        "name": "committer.name",
        "type": "string",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "required": true,
        "location": "body"
      },
      {
        "name": "committer.email",
        "type": "string",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "required": true,
        "location": "body"
      },
      {
        "name": "author",
        "type": "object",
        "description": "The author of the file.",
        "default": "The `committer` or the authenticated user if you omit `committer`.",
        "required": false,
        "location": "body"
      },
      {
        "name": "author.name",
        "type": "string",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "required": true,
        "location": "body"
      },
      {
        "name": "author.email",
        "type": "string",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "required": true,
        "location": "body"
      }
    ],
    "requests": [
      {
        "message": "my commit message",
        "committer": {
          "name": "Monalisa Octocat",
          "email": "octocat@github.com"
        },
        "content": "bXkgbmV3IGZpbGUgY29udGVudHM="
      }
    ],
    "description": "Creates a new file or updates an existing file in a repository.",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "content": {
            "name": "hello.txt",
            "path": "notes/hello.txt",
            "sha": "95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
            "size": 9,
            "url": "https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt",
            "html_url": "https://github.com/octocat/Hello-World/blob/master/notes/hello.txt",
            "git_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
            "download_url": "https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt",
            "type": "file",
            "_links": {
              "self": "https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt",
              "git": "https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
              "html": "https://github.com/octocat/Hello-World/blob/master/notes/hello.txt"
            }
          },
          "commit": {
            "sha": "7638417db6d59f3c431d3e1f261cc637155684cd",
            "node_id": "MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==",
            "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd",
            "html_url": "https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd",
            "author": {
              "date": "2014-11-07T22:01:45Z",
              "name": "Monalisa Octocat",
              "email": "octocat@github.com"
            },
            "committer": {
              "date": "2014-11-07T22:01:45Z",
              "name": "Monalisa Octocat",
              "email": "octocat@github.com"
            },
            "message": "my commit message",
            "tree": {
              "url": "https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb",
              "sha": "691272480426f78a0138979dd3ce63b77f706feb"
            },
            "parents": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                "html_url": "https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                "sha": "1acc419d4d6a9ce985db7be48c6349a0475975b5"
              }
            ],
            "verification": {
              "verified": false,
              "reason": "unsigned",
              "signature": null,
              "payload": null
            }
          }
        }
      }
    ],
    "idName": "create-file",
    "documentationUrl": "https://developer.github.com/v3/repos/contents/#create-or-update-a-file",
    "deprecated": {
      "date": "2019-06-07",
      "message": "\"Create a file\" replaced by \"Create or update a file\"",
      "before": {
        "idName": "create-file"
      },
      "after": {
        "idName": "create-or-update-file"
      }
    }
  },
  {
    "name": "Update a file",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/contents/:path",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "path",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "message",
        "type": "string",
        "description": "The commit message.",
        "required": true,
        "location": "body"
      },
      {
        "name": "content",
        "type": "string",
        "description": "The new file content, using Base64 encoding.",
        "required": true,
        "location": "body"
      },
      {
        "name": "sha",
        "type": "string",
        "description": "**Required if you are updating a file**. The blob SHA of the file being replaced.",
        "required": false,
        "location": "body"
      },
      {
        "name": "branch",
        "type": "string",
        "description": "The branch name.",
        "default": "the repository’s default branch (usually `master`)",
        "required": false,
        "location": "body"
      },
      {
        "name": "committer",
        "type": "object",
        "description": "The person that committed the file.",
        "default": "the authenticated user.",
        "required": false,
        "location": "body"
      },
      {
        "name": "committer.name",
        "type": "string",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "required": true,
        "location": "body"
      },
      {
        "name": "committer.email",
        "type": "string",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "required": true,
        "location": "body"
      },
      {
        "name": "author",
        "type": "object",
        "description": "The author of the file.",
        "default": "The `committer` or the authenticated user if you omit `committer`.",
        "required": false,
        "location": "body"
      },
      {
        "name": "author.name",
        "type": "string",
        "description": "The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "required": true,
        "location": "body"
      },
      {
        "name": "author.email",
        "type": "string",
        "description": "The email of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.",
        "required": true,
        "location": "body"
      }
    ],
    "requests": [
      {
        "message": "my commit message",
        "committer": {
          "name": "Monalisa Octocat",
          "email": "octocat@github.com"
        },
        "content": "bXkgbmV3IGZpbGUgY29udGVudHM="
      }
    ],
    "description": "Creates a new file or updates an existing file in a repository.",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "content": {
            "name": "hello.txt",
            "path": "notes/hello.txt",
            "sha": "95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
            "size": 9,
            "url": "https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt",
            "html_url": "https://github.com/octocat/Hello-World/blob/master/notes/hello.txt",
            "git_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
            "download_url": "https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt",
            "type": "file",
            "_links": {
              "self": "https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt",
              "git": "https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3",
              "html": "https://github.com/octocat/Hello-World/blob/master/notes/hello.txt"
            }
          },
          "commit": {
            "sha": "7638417db6d59f3c431d3e1f261cc637155684cd",
            "node_id": "MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==",
            "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd",
            "html_url": "https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd",
            "author": {
              "date": "2014-11-07T22:01:45Z",
              "name": "Monalisa Octocat",
              "email": "octocat@github.com"
            },
            "committer": {
              "date": "2014-11-07T22:01:45Z",
              "name": "Monalisa Octocat",
              "email": "octocat@github.com"
            },
            "message": "my commit message",
            "tree": {
              "url": "https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb",
              "sha": "691272480426f78a0138979dd3ce63b77f706feb"
            },
            "parents": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                "html_url": "https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                "sha": "1acc419d4d6a9ce985db7be48c6349a0475975b5"
              }
            ],
            "verification": {
              "verified": false,
              "reason": "unsigned",
              "signature": null,
              "payload": null
            }
          }
        }
      }
    ],
    "idName": "update-file",
    "documentationUrl": "https://developer.github.com/v3/repos/contents/#create-or-update-a-file",
    "deprecated": {
      "date": "2019-06-07",
      "message": "\"Update a file\" replaced by \"Create or update a file\"",
      "before": {
        "idName": "update-file"
      },
      "after": {
        "idName": "create-or-update-file"
      }
    }
  },
  {
    "name": "Delete a file",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/contents/:path",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "path",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "message",
        "type": "string",
        "description": "The commit message.",
        "required": true,
        "location": "body"
      },
      {
        "name": "sha",
        "type": "string",
        "description": "The blob SHA of the file being replaced.",
        "required": true,
        "location": "body"
      },
      {
        "name": "branch",
        "type": "string",
        "description": "The branch name.",
        "default": "the repository’s default branch (usually `master`)",
        "required": false,
        "location": "body"
      },
      {
        "name": "committer",
        "type": "object",
        "description": "object containing information about the committer.",
        "location": "body"
      },
      {
        "name": "committer.name",
        "type": "string",
        "description": "The name of the author (or committer) of the commit",
        "required": false,
        "location": "body"
      },
      {
        "name": "committer.email",
        "type": "string",
        "description": "The email of the author (or committer) of the commit",
        "required": false,
        "location": "body"
      },
      {
        "name": "author",
        "type": "object",
        "description": "object containing information about the author.",
        "location": "body"
      },
      {
        "name": "author.name",
        "type": "string",
        "description": "The name of the author (or committer) of the commit",
        "required": false,
        "location": "body"
      },
      {
        "name": "author.email",
        "type": "string",
        "description": "The email of the author (or committer) of the commit",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "message": "my commit message",
        "committer": {
          "name": "Monalisa Octocat",
          "email": "octocat@github.com"
        },
        "sha": "329688480d39049927147c162b9d2deaf885005f"
      }
    ],
    "description": "Deletes a file in a repository.\n\nYou can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.\n\nThe `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.\n\nYou must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "content": null,
          "commit": {
            "sha": "7638417db6d59f3c431d3e1f261cc637155684cd",
            "node_id": "MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==",
            "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd",
            "html_url": "https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd",
            "author": {
              "date": "2014-11-07T22:01:45Z",
              "name": "Monalisa Octocat",
              "email": "octocat@github.com"
            },
            "committer": {
              "date": "2014-11-07T22:01:45Z",
              "name": "Monalisa Octocat",
              "email": "octocat@github.com"
            },
            "message": "my commit message",
            "tree": {
              "url": "https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb",
              "sha": "691272480426f78a0138979dd3ce63b77f706feb"
            },
            "parents": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                "html_url": "https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5",
                "sha": "1acc419d4d6a9ce985db7be48c6349a0475975b5"
              }
            ],
            "verification": {
              "verified": false,
              "reason": "unsigned",
              "signature": null,
              "payload": null
            }
          }
        }
      }
    ],
    "idName": "delete-file",
    "documentationUrl": "https://developer.github.com/v3/repos/contents/#delete-a-file"
  },
  {
    "name": "Get archive link",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/:archive_format/:ref",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "archive_format",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "ref",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Gets a redirect URL to download an archive for a repository. The `:archive_format` can be either `tarball` or `zipball`. The `:ref` must be a valid Git reference. If you omit `:ref`, the repository’s default branch (usually `master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use the `Location` header to make a second `GET` request.\n\n_Note_: For private repositories, these links are temporary and expire after five minutes.\n\nTo follow redirects with curl, use the `-L` switch:\n\n",
    "responses": [
      {
        "headers": {
          "status": "302 Found",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "get-archive-link",
    "documentationUrl": "https://developer.github.com/v3/repos/contents/#get-archive-link"
  },
  {
    "name": "List deployments",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/deployments",
    "previews": [
      {
        "name": "ant-man",
        "description": "**Note:** The `transient_environment` and `production_environment` parameters are currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.ant-man-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "sha",
        "type": "string",
        "description": "The SHA recorded at creation time.",
        "default": "none",
        "required": false,
        "location": "query"
      },
      {
        "name": "ref",
        "type": "string",
        "description": "The name of the ref. This can be a branch, tag, or SHA.",
        "default": "none",
        "required": false,
        "location": "query"
      },
      {
        "name": "task",
        "type": "string",
        "description": "The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`).",
        "default": "none",
        "required": false,
        "location": "query"
      },
      {
        "name": "environment",
        "type": "string",
        "description": "The name of the environment that was deployed to (e.g., `staging` or `production`).",
        "default": "none",
        "required": false,
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Simple filtering of deployments is available via query parameters:",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "url": "https://api.github.com/repos/octocat/example/deployments/1",
            "id": 1,
            "node_id": "MDEwOkRlcGxveW1lbnQx",
            "sha": "a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d",
            "ref": "topic-branch",
            "task": "deploy",
            "payload": {
              "deploy": "migrate"
            },
            "original_environment": "staging",
            "environment": "production",
            "description": "Deploy request from hubot",
            "creator": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "created_at": "2012-07-20T01:19:13Z",
            "updated_at": "2012-07-20T01:19:13Z",
            "statuses_url": "https://api.github.com/repos/octocat/example/deployments/1/statuses",
            "repository_url": "https://api.github.com/repos/octocat/example",
            "transient_environment": false,
            "production_environment": true
          }
        ]
      }
    ],
    "idName": "list-deployments",
    "documentationUrl": "https://developer.github.com/v3/repos/deployments/#list-deployments"
  },
  {
    "name": "Get a single deployment",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/deployments/:deployment_id",
    "previews": [
      {
        "name": "machine-man",
        "description": "**Note:** If a deployment is created via a GitHub App, the response will include the `performed_via_github_app` object with information about the GitHub App. For more information, see the [related blog post](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\n\nTo receive the `performed_via_github_app` object is the response, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.machine-man-preview\n\n```",
        "required": false
      },
      {
        "name": "ant-man",
        "description": "**Note:** The `transient_environment` and `production_environment` parameters are currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.ant-man-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "deployment_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/example/deployments/1",
          "id": 1,
          "node_id": "MDEwOkRlcGxveW1lbnQx",
          "sha": "a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d",
          "ref": "topic-branch",
          "task": "deploy",
          "payload": {
            "deploy": "migrate"
          },
          "original_environment": "staging",
          "environment": "production",
          "description": "Deploy request from hubot",
          "creator": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "created_at": "2012-07-20T01:19:13Z",
          "updated_at": "2012-07-20T01:19:13Z",
          "statuses_url": "https://api.github.com/repos/octocat/example/deployments/1/statuses",
          "repository_url": "https://api.github.com/repos/octocat/example",
          "transient_environment": false,
          "production_environment": true
        }
      }
    ],
    "idName": "get-deployment",
    "documentationUrl": "https://developer.github.com/v3/repos/deployments/#get-a-single-deployment"
  },
  {
    "name": "Create a deployment",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/deployments",
    "previews": [
      {
        "name": "ant-man",
        "description": "**Note:** The `transient_environment` and `production_environment` parameters are currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.ant-man-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "ref",
        "type": "string",
        "description": "The ref to deploy. This can be a branch, tag, or SHA.",
        "required": true,
        "location": "body"
      },
      {
        "name": "task",
        "type": "string",
        "description": "Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).",
        "default": "deploy",
        "required": false,
        "location": "body"
      },
      {
        "name": "auto_merge",
        "type": "boolean",
        "description": "Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.",
        "default": true,
        "required": false,
        "location": "body"
      },
      {
        "name": "required_contexts",
        "type": "string[]",
        "description": "The [status](https://developer.github.com/v3/repos/statuses/) contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.",
        "required": false,
        "location": "body"
      },
      {
        "name": "payload",
        "type": "string",
        "description": "JSON payload with extra information about the deployment.",
        "default": "\"\"",
        "required": false,
        "location": "body"
      },
      {
        "name": "environment",
        "type": "string",
        "description": "Name for the target deployment environment (e.g., `production`, `staging`, `qa`).",
        "default": "production",
        "required": false,
        "location": "body"
      },
      {
        "name": "description",
        "type": "string",
        "description": "Short description of the deployment.",
        "default": "\"\"",
        "required": false,
        "location": "body"
      },
      {
        "name": "transient_environment",
        "type": "boolean",
        "description": "Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: `false`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type.",
        "default": false,
        "required": false,
        "location": "body"
      },
      {
        "name": "production_environment",
        "type": "boolean",
        "description": "Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `production` and `false` otherwise.  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type.  ",
        "default": "`true` when `environment` is `production` and `false` otherwise",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "ref": "topic-branch",
        "payload": {
          "deploy": "migrate"
        },
        "description": "Deploy request from hubot"
      }
    ],
    "description": "Deployments offer a few configurable parameters with sane defaults.\n\nThe `ref` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them before we merge a pull request.\n\nThe `environment` parameter allows deployments to be issued to different runtime environments. Teams often have multiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter makes it easier to track which environments have requested deployments. The default environment is `production`.\n\nThe `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If the ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds, the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will return a failure response.\n\nBy default, [commit statuses](https://developer.github.com/v3/repos/statuses) for every submitted context must be in a `success` state. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do not require any contexts or create any commit statuses, the deployment will always succeed.\n\nThe `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text field that will be passed on when a deployment event is dispatched.\n\nThe `task` parameter is used by the deployment system to allow different execution paths. In the web world this might be `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an application with debugging enabled.\n\nUsers with `repo` or `repo_deployment` scopes can create a deployment for a given ref:\n\nA simple example putting the user and room into the payload to notify back to chat networks.\n\nA more advanced example specifying required commit statuses and bypassing auto-merging.\n\nYou will see this response when GitHub automatically merges the base branch into the topic branch instead of creating a deployment. This auto-merge happens when:\n\n*   Auto-merge option is enabled in the repository\n*   Topic branch does not include the latest changes on the base branch, which is `master`in the response example\n*   There are no merge conflicts\n\nIf there are no new commits in the base branch, a new request to create a deployment should give a successful response.\n\nThis error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't be merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.\n\nThis error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success` status for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.",
    "idName": "create-deployment",
    "documentationUrl": "https://developer.github.com/v3/repos/deployments/#create-a-deployment"
  },
  {
    "name": "List deployment statuses",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/deployments/:deployment_id/statuses",
    "previews": [
      {
        "name": "flash",
        "description": "**Note:** New features in the Deployments API on GitHub are currently available during a public beta. Please see the [blog post](https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/) for full details.\n\nTo access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.flash-preview+json\n\n```",
        "required": false
      },
      {
        "name": "ant-man",
        "description": "**Note:** The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.ant-man-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "deployment_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Users with pull access can view deployment statuses for a deployment:",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "url": "https://api.github.com/repos/octocat/example/deployments/42/statuses/1",
            "id": 1,
            "node_id": "MDE2OkRlcGxveW1lbnRTdGF0dXMx",
            "state": "success",
            "creator": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "description": "Deployment finished successfully.",
            "environment": "production",
            "target_url": "https://example.com/deployment/42/output",
            "created_at": "2012-07-20T01:19:13Z",
            "updated_at": "2012-07-20T01:19:13Z",
            "deployment_url": "https://api.github.com/repos/octocat/example/deployments/42",
            "repository_url": "https://api.github.com/repos/octocat/example",
            "environment_url": "",
            "log_url": "https://example.com/deployment/42/output"
          }
        ]
      }
    ],
    "idName": "list-deployment-statuses",
    "documentationUrl": "https://developer.github.com/v3/repos/deployments/#list-deployment-statuses"
  },
  {
    "name": "Get a single deployment status",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/deployments/:deployment_id/statuses/:status_id",
    "previews": [
      {
        "name": "machine-man",
        "description": "**Note:** If a deployment is created via a GitHub App, the response will include the `performed_via_github_app` object with information about the GitHub App. For more information, see the [related blog post](https://developer.github.com/changes/2016-09-14-Integrations-Early-Access).\n\nTo receive the `performed_via_github_app` object is the response, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.machine-man-preview\n\n```",
        "required": false
      },
      {
        "name": "flash",
        "description": "**Note:** New features in the Deployments API on GitHub are currently available during a public beta. Please see the [blog post](https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/) for full details.\n\nTo access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.flash-preview+json\n\n```",
        "required": false
      },
      {
        "name": "ant-man",
        "description": "**Note:** The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.ant-man-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "deployment_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "status_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Users with pull access can view a deployment status for a deployment:",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/example/deployments/42/statuses/1",
          "id": 1,
          "node_id": "MDE2OkRlcGxveW1lbnRTdGF0dXMx",
          "state": "success",
          "creator": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "description": "Deployment finished successfully.",
          "environment": "production",
          "target_url": "https://example.com/deployment/42/output",
          "created_at": "2012-07-20T01:19:13Z",
          "updated_at": "2012-07-20T01:19:13Z",
          "deployment_url": "https://api.github.com/repos/octocat/example/deployments/42",
          "repository_url": "https://api.github.com/repos/octocat/example",
          "environment_url": "",
          "log_url": "https://example.com/deployment/42/output"
        }
      }
    ],
    "idName": "get-deployment-status",
    "documentationUrl": "https://developer.github.com/v3/repos/deployments/#get-a-single-deployment-status"
  },
  {
    "name": "Create a deployment status",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/deployments/:deployment_id/statuses",
    "previews": [
      {
        "name": "flash",
        "description": "**Note:** New features in the Deployments API on GitHub are currently available during a public beta. Please see the [blog post](https://developer.github.com/changes/2018-10-16-deployments-environments-states-and-auto-inactive-updates/) for full details.\n\nTo access the new `environment` parameter, the two new values for the `state` parameter (`in_progress` and `queued`), and use `auto_inactive` on production deployments during the public beta period, you must provide the following custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.flash-preview+json\n\n```",
        "required": false
      },
      {
        "name": "ant-man",
        "description": "**Note:** The `inactive` state and the `log_url`, `environment_url`, and `auto_inactive` parameters are currently available for developers to preview. Please see the [blog post](https://developer.github.com/changes/2016-04-06-deployment-and-deployment-status-enhancements) for full details.\n\nTo access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.ant-man-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "deployment_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "state",
        "type": "string",
        "description": "The state of the status. Can be one of `error`, `failure`, `inactive`, `in_progress`, `queued` `pending`, or `success`. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. To use the `in_progress` and `queued` states, you must provide the [`application/vnd.github.flash-preview+json`](https://developer.github.com/v3/previews/#deployment-statuses) custom media type.",
        "required": true,
        "enum": [
          "error",
          "failure",
          "inactive",
          "in_progress",
          "queued",
          "pending",
          "success"
        ],
        "location": "body"
      },
      {
        "name": "target_url",
        "type": "string",
        "description": "The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.",
        "default": "\"\"",
        "required": false,
        "location": "body"
      },
      {
        "name": "log_url",
        "type": "string",
        "description": "The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type.",
        "default": "\"\"",
        "required": false,
        "location": "body"
      },
      {
        "name": "description",
        "type": "string",
        "description": "A short description of the status. The maximum description length is 140 characters.",
        "default": "\"\"",
        "required": false,
        "location": "body"
      },
      {
        "name": "environment",
        "type": "string",
        "description": "Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`. **Note:** This parameter requires you to use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/v3/previews/#deployment-statuses) custom media type.",
        "required": false,
        "enum": [
          "production",
          "staging",
          "qa"
        ],
        "location": "body"
      },
      {
        "name": "environment_url",
        "type": "string",
        "description": "Sets the URL for accessing your environment. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type.",
        "default": "\"\"",
        "required": false,
        "location": "body"
      },
      {
        "name": "auto_inactive",
        "type": "boolean",
        "description": "Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`  \n**Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/v3/previews/#deployment-statuses) custom media type.  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://developer.github.com/v3/previews/#deployment-statuses) custom media type.  ",
        "default": true,
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "environment": "production",
        "state": "success",
        "log_url": "https://example.com/deployment/42/output",
        "description": "Deployment finished successfully."
      }
    ],
    "description": "Users with `push` access can create deployment statuses for a given deployment.\n\nGitHub Apps require `read & write` access to \"Deployments\" and `read-only` access to \"Repo contents\" (for private repos). OAuth Apps require the `repo_deployment` scope.",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/example/deployments/42/statuses/1",
          "id": 1,
          "node_id": "MDE2OkRlcGxveW1lbnRTdGF0dXMx",
          "state": "success",
          "creator": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "description": "Deployment finished successfully.",
          "environment": "production",
          "target_url": "https://example.com/deployment/42/output",
          "created_at": "2012-07-20T01:19:13Z",
          "updated_at": "2012-07-20T01:19:13Z",
          "deployment_url": "https://api.github.com/repos/octocat/example/deployments/42",
          "repository_url": "https://api.github.com/repos/octocat/example",
          "environment_url": "",
          "log_url": "https://example.com/deployment/42/output"
        }
      }
    ],
    "idName": "create-deployment-status",
    "documentationUrl": "https://developer.github.com/v3/repos/deployments/#create-a-deployment-status"
  },
  {
    "name": "List downloads for a repository",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/downloads",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "url": "https://api.github.com/repos/octocat/Hello-World/downloads/1",
            "html_url": "https://github.com/repos/octocat/Hello-World/downloads/new_file.jpg",
            "id": 1,
            "name": "new_file.jpg",
            "description": "Description of your download",
            "size": 1024,
            "download_count": 40,
            "content_type": ".jpg"
          }
        ]
      }
    ],
    "idName": "list-downloads",
    "documentationUrl": "https://developer.github.com/v3/repos/downloads/#list-downloads-for-a-repository"
  },
  {
    "name": "Get a single download",
    "enabledForApps": false,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/downloads/:download_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "download_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/downloads/1",
          "html_url": "https://github.com/repos/octocat/Hello-World/downloads/new_file.jpg",
          "id": 1,
          "name": "new_file.jpg",
          "description": "Description of your download",
          "size": 1024,
          "download_count": 40,
          "content_type": ".jpg"
        }
      }
    ],
    "idName": "get-download",
    "documentationUrl": "https://developer.github.com/v3/repos/downloads/#get-a-single-download"
  },
  {
    "name": "Delete a download",
    "enabledForApps": false,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/downloads/:download_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "download_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "delete-download",
    "documentationUrl": "https://developer.github.com/v3/repos/downloads/#delete-a-download"
  },
  {
    "name": "List forks",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/forks",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "sort",
        "type": "string",
        "description": "The sort order. Can be either `newest`, `oldest`, or `stargazers`.",
        "default": "newest",
        "required": false,
        "enum": [
          "newest",
          "oldest",
          "stargazers"
        ],
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": true,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": true,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "template_repository": null,
            "subscribers_count": 42,
            "network_count": 0,
            "license": {
              "key": "mit",
              "name": "MIT License",
              "spdx_id": "MIT",
              "url": "https://api.github.com/licenses/mit",
              "node_id": "MDc6TGljZW5zZW1pdA=="
            }
          }
        ]
      }
    ],
    "idName": "list-forks",
    "documentationUrl": "https://developer.github.com/v3/repos/forks/#list-forks"
  },
  {
    "name": "Create a fork",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/forks",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "organization",
        "type": "string",
        "description": "Optional parameter to specify the organization name if forking into an organization.",
        "required": false,
        "location": "body"
      }
    ],
    "description": "Create a fork for the authenticated user.\n\n**Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Support](https://github.com/contact).",
    "responses": [
      {
        "headers": {
          "status": "202 Accepted",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": true,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "language": null,
          "forks_count": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues_count": 0,
          "is_template": true,
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "admin": false,
            "push": false,
            "pull": true
          },
          "allow_rebase_merge": true,
          "template_repository": null,
          "allow_squash_merge": true,
          "allow_merge_commit": true,
          "subscribers_count": 42,
          "network_count": 0
        }
      }
    ],
    "idName": "create-fork",
    "documentationUrl": "https://developer.github.com/v3/repos/forks/#create-a-fork"
  },
  {
    "name": "List hooks",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/hooks",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "type": "Repository",
            "id": 12345678,
            "name": "web",
            "active": true,
            "events": [
              "push",
              "pull_request"
            ],
            "config": {
              "content_type": "json",
              "insecure_ssl": "0",
              "url": "https://example.com/webhook"
            },
            "updated_at": "2019-06-03T00:57:16Z",
            "created_at": "2019-06-03T00:57:16Z",
            "url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678",
            "test_url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test",
            "ping_url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings",
            "last_response": {
              "code": null,
              "status": "unused",
              "message": null
            }
          }
        ]
      }
    ],
    "idName": "list-hooks",
    "documentationUrl": "https://developer.github.com/v3/repos/hooks/#list-hooks"
  },
  {
    "name": "Get single hook",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/hooks/:hook_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "type": "Repository",
          "id": 12345678,
          "name": "web",
          "active": true,
          "events": [
            "push",
            "pull_request"
          ],
          "config": {
            "content_type": "json",
            "insecure_ssl": "0",
            "url": "https://example.com/webhook"
          },
          "updated_at": "2019-06-03T00:57:16Z",
          "created_at": "2019-06-03T00:57:16Z",
          "url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678",
          "test_url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test",
          "ping_url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings",
          "last_response": {
            "code": null,
            "status": "unused",
            "message": null
          }
        }
      }
    ],
    "idName": "get-hook",
    "documentationUrl": "https://developer.github.com/v3/repos/hooks/#get-single-hook"
  },
  {
    "name": "Create a hook",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/hooks",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "name",
        "type": "string",
        "description": "Use `web` to create a webhook. This parameter only accepts the value `web`.",
        "default": "web",
        "required": false,
        "location": "body"
      },
      {
        "name": "config",
        "type": "object",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/repos/hooks/#create-hook-config-params).",
        "required": true,
        "location": "body"
      },
      {
        "name": "config.url",
        "type": "string",
        "description": "The URL to which the payloads will be delivered.",
        "required": true,
        "location": "body"
      },
      {
        "name": "config.content_type",
        "type": "string",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "required": false,
        "location": "body"
      },
      {
        "name": "config.secret",
        "type": "string",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/webhooks/#delivery-headers) header.",
        "required": false,
        "location": "body"
      },
      {
        "name": "config.insecure_ssl",
        "type": "string",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "required": false,
        "location": "body"
      },
      {
        "name": "events",
        "type": "string[]",
        "description": "Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for.",
        "default": "[\"push\"]",
        "required": false,
        "location": "body"
      },
      {
        "name": "active",
        "type": "boolean",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "default": true,
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "name": "web",
        "active": true,
        "events": [
          "push",
          "pull_request"
        ],
        "config": {
          "url": "https://example.com/webhook",
          "content_type": "json",
          "insecure_ssl": "0"
        }
      }
    ],
    "description": "Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can share the same `config` as long as those webhooks do not have any `events` that overlap.\n\nHere's how you can create a hook that posts payloads in JSON format:",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "type": "Repository",
          "id": 12345678,
          "name": "web",
          "active": true,
          "events": [
            "push",
            "pull_request"
          ],
          "config": {
            "content_type": "json",
            "insecure_ssl": "0",
            "url": "https://example.com/webhook"
          },
          "updated_at": "2019-06-03T00:57:16Z",
          "created_at": "2019-06-03T00:57:16Z",
          "url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678",
          "test_url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test",
          "ping_url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings",
          "last_response": {
            "code": null,
            "status": "unused",
            "message": null
          }
        }
      }
    ],
    "idName": "create-hook",
    "documentationUrl": "https://developer.github.com/v3/repos/hooks/#create-a-hook"
  },
  {
    "name": "Edit a hook",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/hooks/:hook_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "config",
        "type": "object",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/repos/hooks/#create-hook-config-params).",
        "required": false,
        "location": "body"
      },
      {
        "name": "config.url",
        "type": "string",
        "description": "The URL to which the payloads will be delivered.",
        "required": true,
        "location": "body"
      },
      {
        "name": "config.content_type",
        "type": "string",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "required": false,
        "location": "body"
      },
      {
        "name": "config.secret",
        "type": "string",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/webhooks/#delivery-headers) header.",
        "required": false,
        "location": "body"
      },
      {
        "name": "config.insecure_ssl",
        "type": "string",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "required": false,
        "location": "body"
      },
      {
        "name": "events",
        "type": "string[]",
        "description": "Determines what [events](https://developer.github.com/v3/activity/events/types/) the hook is triggered for. This replaces the entire array of events.",
        "default": "[\"push\"]",
        "required": false,
        "location": "body"
      },
      {
        "name": "add_events",
        "type": "string[]",
        "description": "Determines a list of events to be added to the list of events that the Hook triggers for.",
        "required": false,
        "location": "body"
      },
      {
        "name": "remove_events",
        "type": "string[]",
        "description": "Determines a list of events to be removed from the list of events that the Hook triggers for.",
        "required": false,
        "location": "body"
      },
      {
        "name": "active",
        "type": "boolean",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "default": true,
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "active": true,
        "add_events": [
          "pull_request"
        ]
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "type": "Repository",
          "id": 12345678,
          "name": "web",
          "active": true,
          "events": [
            "push",
            "pull_request"
          ],
          "config": {
            "content_type": "json",
            "insecure_ssl": "0",
            "url": "https://example.com/webhook"
          },
          "updated_at": "2019-06-03T00:57:16Z",
          "created_at": "2019-06-03T00:57:16Z",
          "url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678",
          "test_url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test",
          "ping_url": "https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings",
          "last_response": {
            "code": null,
            "status": "unused",
            "message": null
          }
        }
      }
    ],
    "idName": "update-hook",
    "documentationUrl": "https://developer.github.com/v3/repos/hooks/#edit-a-hook"
  },
  {
    "name": "Test a push hook",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/hooks/:hook_id/tests",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.\n\n**Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "test-push-hook",
    "documentationUrl": "https://developer.github.com/v3/repos/hooks/#test-a-push-hook"
  },
  {
    "name": "Ping a hook",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/hooks/:hook_id/pings",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "This will trigger a [ping event](https://developer.github.com/webhooks/#ping-event) to be sent to the hook.",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "ping-hook",
    "documentationUrl": "https://developer.github.com/v3/repos/hooks/#ping-a-hook"
  },
  {
    "name": "Delete a hook",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/hooks/:hook_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "delete-hook",
    "documentationUrl": "https://developer.github.com/v3/repos/hooks/#delete-a-hook"
  },
  {
    "name": "List invitations for a repository",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/invitations",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.\n\n",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "id": 1,
            "repository": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
            },
            "invitee": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "inviter": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "permissions": "write",
            "created_at": "2016-06-13T14:52:50-05:00",
            "url": "https://api.github.com/user/repository_invitations/1296269",
            "html_url": "https://github.com/octocat/Hello-World/invitations"
          }
        ]
      }
    ],
    "idName": "list-invitations",
    "documentationUrl": "https://developer.github.com/v3/repos/invitations/#list-invitations-for-a-repository"
  },
  {
    "name": "Delete a repository invitation",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/invitations/:invitation_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "invitation_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "delete-invitation",
    "documentationUrl": "https://developer.github.com/v3/repos/invitations/#delete-a-repository-invitation"
  },
  {
    "name": "Update a repository invitation",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/invitations/:invitation_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "invitation_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "permissions",
        "type": "string",
        "description": "The permissions that the associated user will have on the repository. Valid values are `read`, `write`, and `admin`.",
        "required": false,
        "enum": [
          "read",
          "write",
          "admin"
        ],
        "location": "body"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1,
          "repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "invitee": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "inviter": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "permissions": "write",
          "created_at": "2016-06-13T14:52:50-05:00",
          "url": "https://api.github.com/user/repository_invitations/1296269",
          "html_url": "https://github.com/octocat/Hello-World/invitations"
        }
      }
    ],
    "idName": "update-invitation",
    "documentationUrl": "https://developer.github.com/v3/repos/invitations/#update-a-repository-invitation"
  },
  {
    "name": "List a user's repository invitations",
    "enabledForApps": false,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/user/repository_invitations",
    "previews": [],
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "When authenticating as a user, this endpoint will list all currently open repository invitations for that user.\n\n",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "id": 1,
            "repository": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
            },
            "invitee": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "inviter": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "permissions": "write",
            "created_at": "2016-06-13T14:52:50-05:00",
            "url": "https://api.github.com/user/repository_invitations/1296269",
            "html_url": "https://github.com/octocat/Hello-World/invitations"
          }
        ]
      }
    ],
    "idName": "list-invitations-for-authenticated-user",
    "documentationUrl": "https://developer.github.com/v3/repos/invitations/#list-a-users-repository-invitations"
  },
  {
    "name": "Accept a repository invitation",
    "enabledForApps": false,
    "githubCloudOnly": false,
    "method": "PATCH",
    "path": "/user/repository_invitations/:invitation_id",
    "previews": [],
    "params": [
      {
        "name": "invitation_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "accept-invitation",
    "documentationUrl": "https://developer.github.com/v3/repos/invitations/#accept-a-repository-invitation"
  },
  {
    "name": "Decline a repository invitation",
    "enabledForApps": false,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/user/repository_invitations/:invitation_id",
    "previews": [],
    "params": [
      {
        "name": "invitation_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "decline-invitation",
    "documentationUrl": "https://developer.github.com/v3/repos/invitations/#decline-a-repository-invitation"
  },
  {
    "name": "List deploy keys",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/keys",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "id": 1,
            "key": "ssh-rsa AAA...",
            "url": "https://api.github.com/repos/octocat/Hello-World/keys/1",
            "title": "octocat@octomac",
            "verified": true,
            "created_at": "2014-12-10T15:53:42Z",
            "read_only": true
          }
        ]
      }
    ],
    "idName": "list-deploy-keys",
    "documentationUrl": "https://developer.github.com/v3/repos/keys/#list-deploy-keys"
  },
  {
    "name": "Get a deploy key",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/keys/:key_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "key_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1,
          "key": "ssh-rsa AAA...",
          "url": "https://api.github.com/repos/octocat/Hello-World/keys/1",
          "title": "octocat@octomac",
          "verified": true,
          "created_at": "2014-12-10T15:53:42Z",
          "read_only": true
        }
      }
    ],
    "idName": "get-deploy-key",
    "documentationUrl": "https://developer.github.com/v3/repos/keys/#get-a-deploy-key"
  },
  {
    "name": "Add a new deploy key",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/keys",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "title",
        "type": "string",
        "description": "A name for the key.",
        "required": false,
        "location": "body"
      },
      {
        "name": "key",
        "type": "string",
        "description": "The contents of the key.",
        "required": true,
        "location": "body"
      },
      {
        "name": "read_only",
        "type": "boolean",
        "description": "If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.  \n  \nDeploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"[Repository permission levels for an organization](https://help.github.com/articles/repository-permission-levels-for-an-organization/)\" and \"[Permission levels for a user account repository](https://help.github.com/articles/permission-levels-for-a-user-account-repository/).\"",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "title": "octocat@octomac",
        "key": "ssh-rsa AAA...",
        "read_only": true
      }
    ],
    "description": "Here's how you can create a read-only deploy key:\n\n",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1,
          "key": "ssh-rsa AAA...",
          "url": "https://api.github.com/repos/octocat/Hello-World/keys/1",
          "title": "octocat@octomac",
          "verified": true,
          "created_at": "2014-12-10T15:53:42Z",
          "read_only": true
        }
      }
    ],
    "idName": "add-deploy-key",
    "documentationUrl": "https://developer.github.com/v3/repos/keys/#add-a-new-deploy-key"
  },
  {
    "name": "Remove a deploy key",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/keys/:key_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "key_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "remove-deploy-key",
    "documentationUrl": "https://developer.github.com/v3/repos/keys/#remove-a-deploy-key"
  },
  {
    "name": "Perform a merge",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/merges",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "base",
        "type": "string",
        "description": "The name of the base branch that the head will be merged into.",
        "required": true,
        "location": "body"
      },
      {
        "name": "head",
        "type": "string",
        "description": "The head to merge. This can be a branch name or a commit SHA1.",
        "required": true,
        "location": "body"
      },
      {
        "name": "commit_message",
        "type": "string",
        "description": "Commit message to use for the merge commit. If omitted, a default message will be used.",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "base": "master",
        "head": "cool_feature",
        "commit_message": "Shipped cool_feature!"
      }
    ],
    "description": "",
    "idName": "merge",
    "documentationUrl": "https://developer.github.com/v3/repos/merging/#perform-a-merge"
  },
  {
    "name": "Get information about a Pages site",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/pages",
    "previews": [
      {
        "name": "mister-fantastic",
        "description": "**Note:** The GitHub Pages API contains two additional fields in responses, which developers can preview: `html_url` and `source`. To see these two new fields, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mister-fantastic-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/github/developer.github.com/pages",
          "status": "built",
          "cname": "developer.github.com",
          "custom_404": false,
          "html_url": "https://developer.github.com",
          "source": {
            "branch": "master",
            "directory": "/"
          }
        }
      }
    ],
    "idName": "get-pages",
    "documentationUrl": "https://developer.github.com/v3/repos/pages/#get-information-about-a-pages-site"
  },
  {
    "name": "Enable a Pages site",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/pages",
    "previews": [
      {
        "name": "switcheroo",
        "description": "**Note:** Enabling and disabling Pages in the Pages API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-03-14-enabling-disabling-pages/) preview for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.switcheroo-preview+json\n\n```",
        "required": true
      },
      {
        "name": "mister-fantastic",
        "description": "**Note:** The GitHub Pages API contains two additional fields in responses, which developers can preview: `html_url` and `source`. To see these two new fields, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mister-fantastic-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "source",
        "type": "object",
        "description": "",
        "required": false,
        "location": "body"
      },
      {
        "name": "source.branch",
        "type": "string",
        "description": "The repository branch used to publish your [site's source files](https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/). Can be either `master` or `gh-pages`.",
        "required": false,
        "enum": [
          "master",
          "gh-pages"
        ],
        "location": "body"
      },
      {
        "name": "source.path",
        "type": "string",
        "description": "The repository directory that includes the source files for the Pages site. When `branch` is `master`, you can change `path` to `/docs`. When `branch` is `gh-pages`, you are unable to specify a `path` other than `/`.",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "source": {
          "branch": "master",
          "path": "/docs"
        }
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/github/developer.github.com/pages",
          "status": "built",
          "cname": "developer.github.com",
          "custom_404": false,
          "html_url": "https://developer.github.com",
          "source": {
            "branch": "master",
            "directory": "/"
          }
        }
      }
    ],
    "idName": "enable-pages-site",
    "documentationUrl": "https://developer.github.com/v3/repos/pages/#enable-a-pages-site"
  },
  {
    "name": "Disable a Pages site",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/pages",
    "previews": [
      {
        "name": "switcheroo",
        "description": "**Note:** Enabling and disabling Pages in the Pages API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2019-03-14-enabling-disabling-pages/) preview for more details. To access the new endpoints during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.switcheroo-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "disable-pages-site",
    "documentationUrl": "https://developer.github.com/v3/repos/pages/#disable-a-pages-site"
  },
  {
    "name": "Update information about a Pages site",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/pages",
    "previews": [
      {
        "name": "mister-fantastic",
        "description": "**Note:** The GitHub Pages API contains two additional fields in responses, which developers can preview: `html_url` and `source`. To see these two new fields, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.mister-fantastic-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "cname",
        "type": "string",
        "description": "Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom domains, see \"[Using a custom domain with GitHub Pages](https://help.github.com/articles/using-a-custom-domain-with-github-pages/).\"",
        "required": false,
        "location": "body"
      },
      {
        "name": "source",
        "type": "string",
        "description": "Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`. Possible values are `\"gh-pages\"`, `\"master\"`, and `\"master /docs\"`.",
        "required": false,
        "enum": [
          "\"gh-pages\"",
          "\"master\"",
          "\"master /docs\""
        ],
        "location": "body"
      }
    ],
    "requests": [
      {
        "cname": "octocatblog.com",
        "source": "master /docs"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "update-information-about-pages-site",
    "documentationUrl": "https://developer.github.com/v3/repos/pages/#update-information-about-a-pages-site"
  },
  {
    "name": "Request a page build",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/pages/builds",
    "previews": [
      {
        "name": "mister-fantastic",
        "description": "**Note:** This endpoint is currently available for developers to preview. During the preview period, the API may change without advance notice. To access this endpoint during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n\n```\n  application/vnd.github.mister-fantastic-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.\n\nBuild requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/github/developer.github.com/pages/builds/latest",
          "status": "queued"
        }
      }
    ],
    "idName": "request-page-build",
    "documentationUrl": "https://developer.github.com/v3/repos/pages/#request-a-page-build"
  },
  {
    "name": "List Pages builds",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/pages/builds",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "url": "https://api.github.com/repos/github/developer.github.com/pages/builds/5472601",
            "status": "built",
            "error": {
              "message": null
            },
            "pusher": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "commit": "351391cdcb88ffae71ec3028c91f375a8036a26b",
            "duration": 2104,
            "created_at": "2014-02-10T19:00:49Z",
            "updated_at": "2014-02-10T19:00:51Z"
          }
        ]
      }
    ],
    "idName": "list-pages-builds",
    "documentationUrl": "https://developer.github.com/v3/repos/pages/#list-pages-builds"
  },
  {
    "name": "Get latest Pages build",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/pages/builds/latest",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/github/developer.github.com/pages/builds/5472601",
          "status": "built",
          "error": {
            "message": null
          },
          "pusher": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "commit": "351391cdcb88ffae71ec3028c91f375a8036a26b",
          "duration": 2104,
          "created_at": "2014-02-10T19:00:49Z",
          "updated_at": "2014-02-10T19:00:51Z"
        }
      }
    ],
    "idName": "get-latest-pages-build",
    "documentationUrl": "https://developer.github.com/v3/repos/pages/#get-latest-pages-build"
  },
  {
    "name": "Get a specific Pages build",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/pages/builds/:build_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "build_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/github/developer.github.com/pages/builds/5472601",
          "status": "built",
          "error": {
            "message": null
          },
          "pusher": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "commit": "351391cdcb88ffae71ec3028c91f375a8036a26b",
          "duration": 2104,
          "created_at": "2014-02-10T19:00:49Z",
          "updated_at": "2014-02-10T19:00:51Z"
        }
      }
    ],
    "idName": "get-pages-build",
    "documentationUrl": "https://developer.github.com/v3/repos/pages/#get-a-specific-pages-build"
  },
  {
    "name": "List releases for a repository",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/releases",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://developer.github.com/v3/repos/#list-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "url": "https://api.github.com/repos/octocat/Hello-World/releases/1",
            "html_url": "https://github.com/octocat/Hello-World/releases/v1.0.0",
            "assets_url": "https://api.github.com/repos/octocat/Hello-World/releases/1/assets",
            "upload_url": "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}",
            "tarball_url": "https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0",
            "zipball_url": "https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0",
            "id": 1,
            "node_id": "MDc6UmVsZWFzZTE=",
            "tag_name": "v1.0.0",
            "target_commitish": "master",
            "name": "v1.0.0",
            "body": "Description of the release",
            "draft": false,
            "prerelease": false,
            "created_at": "2013-02-27T19:35:32Z",
            "published_at": "2013-02-27T19:35:32Z",
            "author": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "assets": [
              {
                "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
                "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
                "id": 1,
                "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
                "name": "example.zip",
                "label": "short description",
                "state": "uploaded",
                "content_type": "application/zip",
                "size": 1024,
                "download_count": 42,
                "created_at": "2013-02-27T19:35:32Z",
                "updated_at": "2013-02-27T19:35:32Z",
                "uploader": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                }
              }
            ]
          }
        ]
      }
    ],
    "idName": "list-releases",
    "documentationUrl": "https://developer.github.com/v3/repos/releases/#list-releases-for-a-repository"
  },
  {
    "name": "Get a single release",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/releases/:release_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "release_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://developer.github.com/v3/#hypermedia).",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/releases/1",
          "html_url": "https://github.com/octocat/Hello-World/releases/v1.0.0",
          "assets_url": "https://api.github.com/repos/octocat/Hello-World/releases/1/assets",
          "upload_url": "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}",
          "tarball_url": "https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0",
          "zipball_url": "https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0",
          "id": 1,
          "node_id": "MDc6UmVsZWFzZTE=",
          "tag_name": "v1.0.0",
          "target_commitish": "master",
          "name": "v1.0.0",
          "body": "Description of the release",
          "draft": false,
          "prerelease": false,
          "created_at": "2013-02-27T19:35:32Z",
          "published_at": "2013-02-27T19:35:32Z",
          "author": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "assets": [
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
              "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
              "id": 1,
              "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
              "name": "example.zip",
              "label": "short description",
              "state": "uploaded",
              "content_type": "application/zip",
              "size": 1024,
              "download_count": 42,
              "created_at": "2013-02-27T19:35:32Z",
              "updated_at": "2013-02-27T19:35:32Z",
              "uploader": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          ]
        },
        "description": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://developer.github.com/v3/#hypermedia)."
      }
    ],
    "idName": "get-release",
    "documentationUrl": "https://developer.github.com/v3/repos/releases/#get-a-single-release"
  },
  {
    "name": "Get the latest release",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/releases/latest",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "View the latest published full release for the repository.\n\nThe latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/releases/1",
          "html_url": "https://github.com/octocat/Hello-World/releases/v1.0.0",
          "assets_url": "https://api.github.com/repos/octocat/Hello-World/releases/1/assets",
          "upload_url": "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}",
          "tarball_url": "https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0",
          "zipball_url": "https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0",
          "id": 1,
          "node_id": "MDc6UmVsZWFzZTE=",
          "tag_name": "v1.0.0",
          "target_commitish": "master",
          "name": "v1.0.0",
          "body": "Description of the release",
          "draft": false,
          "prerelease": false,
          "created_at": "2013-02-27T19:35:32Z",
          "published_at": "2013-02-27T19:35:32Z",
          "author": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "assets": [
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
              "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
              "id": 1,
              "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
              "name": "example.zip",
              "label": "short description",
              "state": "uploaded",
              "content_type": "application/zip",
              "size": 1024,
              "download_count": 42,
              "created_at": "2013-02-27T19:35:32Z",
              "updated_at": "2013-02-27T19:35:32Z",
              "uploader": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          ]
        }
      }
    ],
    "idName": "get-latest-release",
    "documentationUrl": "https://developer.github.com/v3/repos/releases/#get-the-latest-release"
  },
  {
    "name": "Get a release by tag name",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/releases/tags/:tag",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "tag",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Get a published release with the specified tag.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/releases/1",
          "html_url": "https://github.com/octocat/Hello-World/releases/v1.0.0",
          "assets_url": "https://api.github.com/repos/octocat/Hello-World/releases/1/assets",
          "upload_url": "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}",
          "tarball_url": "https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0",
          "zipball_url": "https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0",
          "id": 1,
          "node_id": "MDc6UmVsZWFzZTE=",
          "tag_name": "v1.0.0",
          "target_commitish": "master",
          "name": "v1.0.0",
          "body": "Description of the release",
          "draft": false,
          "prerelease": false,
          "created_at": "2013-02-27T19:35:32Z",
          "published_at": "2013-02-27T19:35:32Z",
          "author": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "assets": [
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
              "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
              "id": 1,
              "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
              "name": "example.zip",
              "label": "short description",
              "state": "uploaded",
              "content_type": "application/zip",
              "size": 1024,
              "download_count": 42,
              "created_at": "2013-02-27T19:35:32Z",
              "updated_at": "2013-02-27T19:35:32Z",
              "uploader": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          ]
        }
      }
    ],
    "idName": "get-release-by-tag",
    "documentationUrl": "https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name"
  },
  {
    "name": "Create a release",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/releases",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "tag_name",
        "type": "string",
        "description": "The name of the tag.",
        "required": true,
        "location": "body"
      },
      {
        "name": "target_commitish",
        "type": "string",
        "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists.",
        "default": "the repository's default branch (usually `master`).",
        "required": false,
        "location": "body"
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the release.",
        "required": false,
        "location": "body"
      },
      {
        "name": "body",
        "type": "string",
        "description": "Text describing the contents of the tag.",
        "required": false,
        "location": "body"
      },
      {
        "name": "draft",
        "type": "boolean",
        "description": "`true` to create a draft (unpublished) release, `false` to create a published one.",
        "default": false,
        "required": false,
        "location": "body"
      },
      {
        "name": "prerelease",
        "type": "boolean",
        "description": "`true` to identify the release as a prerelease. `false` to identify the release as a full release.",
        "default": false,
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "tag_name": "v1.0.0",
        "target_commitish": "master",
        "name": "v1.0.0",
        "body": "Description of the release",
        "draft": false,
        "prerelease": false
      }
    ],
    "description": "Users with push access to the repository can create a release.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/releases/1",
          "html_url": "https://github.com/octocat/Hello-World/releases/v1.0.0",
          "assets_url": "https://api.github.com/repos/octocat/Hello-World/releases/1/assets",
          "upload_url": "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}",
          "tarball_url": "https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0",
          "zipball_url": "https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0",
          "id": 1,
          "node_id": "MDc6UmVsZWFzZTE=",
          "tag_name": "v1.0.0",
          "target_commitish": "master",
          "name": "v1.0.0",
          "body": "Description of the release",
          "draft": false,
          "prerelease": false,
          "created_at": "2013-02-27T19:35:32Z",
          "published_at": "2013-02-27T19:35:32Z",
          "author": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "assets": []
        }
      }
    ],
    "triggersNotification": true,
    "idName": "create-release",
    "documentationUrl": "https://developer.github.com/v3/repos/releases/#create-a-release"
  },
  {
    "name": "Edit a release",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/releases/:release_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "release_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "tag_name",
        "type": "string",
        "description": "The name of the tag.",
        "required": false,
        "location": "body"
      },
      {
        "name": "target_commitish",
        "type": "string",
        "description": "Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists.",
        "default": "the repository's default branch (usually `master`).",
        "required": false,
        "location": "body"
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the release.",
        "required": false,
        "location": "body"
      },
      {
        "name": "body",
        "type": "string",
        "description": "Text describing the contents of the tag.",
        "required": false,
        "location": "body"
      },
      {
        "name": "draft",
        "type": "boolean",
        "description": "`true` makes the release a draft, and `false` publishes the release.",
        "required": false,
        "location": "body"
      },
      {
        "name": "prerelease",
        "type": "boolean",
        "description": "`true` to identify the release as a prerelease, `false` to identify the release as a full release.",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "tag_name": "v1.0.0",
        "target_commitish": "master",
        "name": "v1.0.0",
        "body": "Description of the release",
        "draft": false,
        "prerelease": false
      }
    ],
    "description": "Users with push access to the repository can edit a release.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/releases/1",
          "html_url": "https://github.com/octocat/Hello-World/releases/v1.0.0",
          "assets_url": "https://api.github.com/repos/octocat/Hello-World/releases/1/assets",
          "upload_url": "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}",
          "tarball_url": "https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0",
          "zipball_url": "https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0",
          "id": 1,
          "node_id": "MDc6UmVsZWFzZTE=",
          "tag_name": "v1.0.0",
          "target_commitish": "master",
          "name": "v1.0.0",
          "body": "Description of the release",
          "draft": false,
          "prerelease": false,
          "created_at": "2013-02-27T19:35:32Z",
          "published_at": "2013-02-27T19:35:32Z",
          "author": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "assets": [
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
              "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
              "id": 1,
              "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
              "name": "example.zip",
              "label": "short description",
              "state": "uploaded",
              "content_type": "application/zip",
              "size": 1024,
              "download_count": 42,
              "created_at": "2013-02-27T19:35:32Z",
              "updated_at": "2013-02-27T19:35:32Z",
              "uploader": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              }
            }
          ]
        }
      }
    ],
    "idName": "update-release",
    "documentationUrl": "https://developer.github.com/v3/repos/releases/#edit-a-release"
  },
  {
    "name": "Delete a release",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/releases/:release_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "release_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Users with push access to the repository can delete a release.",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "delete-release",
    "documentationUrl": "https://developer.github.com/v3/repos/releases/#delete-a-release"
  },
  {
    "name": "List assets for a release",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/releases/:release_id/assets",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "release_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
            "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
            "id": 1,
            "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
            "name": "example.zip",
            "label": "short description",
            "state": "uploaded",
            "content_type": "application/zip",
            "size": 1024,
            "download_count": 42,
            "created_at": "2013-02-27T19:35:32Z",
            "updated_at": "2013-02-27T19:35:32Z",
            "uploader": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            }
          }
        ]
      }
    ],
    "idName": "list-assets-for-release",
    "documentationUrl": "https://developer.github.com/v3/repos/releases/#list-assets-for-a-release"
  },
  {
    "name": "Upload a release asset",
    "enabledForApps": true,
    "method": "POST",
    "path": ":url",
    "previews": [],
    "params": [
      {
        "name": "url",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "headers",
        "location": "headers",
        "required": true,
        "type": "object",
        "description": "Request headers containing `content-type` and `content-length`"
      },
      {
        "name": "headers.content-length",
        "type": "integer",
        "description": "The content size of the asset in bytes",
        "required": true,
        "location": "headers"
      },
      {
        "name": "headers.content-type",
        "type": "string",
        "description": "The content type of the asset. This should be set in the Header. Example: `\"application/zip\"`. For a list of acceptable types, refer this list of [media types](https://www.iana.org/assignments/media-types/media-types.xhtml).",
        "required": true,
        "location": "headers"
      },
      {
        "name": "name",
        "type": "string",
        "description": "The file name of the asset. This should be set in a URI query parameter.",
        "required": true,
        "location": "query"
      },
      {
        "name": "label",
        "type": "string",
        "description": "An alternate short description of the asset. Used in place of the filename. This should be set in a URI query parameter.",
        "required": false,
        "location": "query"
      },
      {
        "name": "file",
        "type": "string | object",
        "description": "",
        "required": true,
        "location": "body",
        "mapTo": "input"
      }
    ],
    "description": "This endpoint makes use of [a Hypermedia relation](https://developer.github.com/v3/#hypermedia) to determine which URL to access. This endpoint is provided by a URI template in [the release's API response](https://developer.github.com/v3/repos/releases/#get-a-single-release). You need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.\n\nThe asset data is expected in its raw binary form, rather than JSON. Everything else about the endpoint is the same as the rest of the API. For example, you'll still need to pass your authentication to be able to upload an asset.\n\nSend the raw binary content of the asset as the request body.\n\nThis may leave an empty asset with a state of `\"new\"`. It can be safely deleted.",
    "idName": "upload-release-asset",
    "documentationUrl": "https://developer.github.com/v3/repos/releases/#upload-a-release-asset",
    "isOverride": true
  },
  {
    "name": "Get a single release asset",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/releases/assets/:asset_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "asset_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://developer.github.com/v3/media/#media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
          "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
          "id": 1,
          "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
          "name": "example.zip",
          "label": "short description",
          "state": "uploaded",
          "content_type": "application/zip",
          "size": 1024,
          "download_count": 42,
          "created_at": "2013-02-27T19:35:32Z",
          "updated_at": "2013-02-27T19:35:32Z",
          "uploader": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          }
        },
        "description": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://developer.github.com/v3/media/#media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response."
      }
    ],
    "idName": "get-release-asset",
    "documentationUrl": "https://developer.github.com/v3/repos/releases/#get-a-single-release-asset"
  },
  {
    "name": "Edit a release asset",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/releases/assets/:asset_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "asset_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "name",
        "type": "string",
        "description": "The file name of the asset.",
        "required": false,
        "location": "body"
      },
      {
        "name": "label",
        "type": "string",
        "description": "An alternate short description of the asset. Used in place of the filename.",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "name": "foo-1.0.0-osx.zip",
        "label": "Mac binary"
      }
    ],
    "description": "Users with push access to the repository can edit a release asset.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/releases/assets/1",
          "browser_download_url": "https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip",
          "id": 1,
          "node_id": "MDEyOlJlbGVhc2VBc3NldDE=",
          "name": "example.zip",
          "label": "short description",
          "state": "uploaded",
          "content_type": "application/zip",
          "size": 1024,
          "download_count": 42,
          "created_at": "2013-02-27T19:35:32Z",
          "updated_at": "2013-02-27T19:35:32Z",
          "uploader": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          }
        }
      }
    ],
    "idName": "update-release-asset",
    "documentationUrl": "https://developer.github.com/v3/repos/releases/#edit-a-release-asset"
  },
  {
    "name": "Delete a release asset",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/releases/assets/:asset_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "asset_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "delete-release-asset",
    "documentationUrl": "https://developer.github.com/v3/repos/releases/#delete-a-release-asset"
  },
  {
    "name": "Get contributors list with additions, deletions, and commit counts",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/stats/contributors",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "*   `total` - The Total number of commits authored by the contributor.\n\nWeekly Hash (`weeks` array):\n\n*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits\n\n",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "author": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "total": 135,
            "weeks": [
              {
                "w": "1367712000",
                "a": 6898,
                "d": 77,
                "c": 10
              }
            ]
          }
        ],
        "description": "*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits"
      }
    ],
    "idName": "get-contributors-stats",
    "documentationUrl": "https://developer.github.com/v3/repos/statistics/#get-contributors-list-with-additions-deletions-and-commit-counts"
  },
  {
    "name": "Get the last year of commit activity data",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/stats/commit_activity",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `Sunday`.\n\n",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "days": [
              0,
              3,
              26,
              20,
              39,
              1,
              0
            ],
            "total": 89,
            "week": 1336280400
          }
        ]
      }
    ],
    "idName": "get-commit-activity-stats",
    "documentationUrl": "https://developer.github.com/v3/repos/statistics/#get-the-last-year-of-commit-activity-data"
  },
  {
    "name": "Get the number of additions and deletions per week",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/stats/code_frequency",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository.\n\n",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          [
            1302998400,
            1124,
            -435
          ]
        ],
        "description": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository."
      }
    ],
    "idName": "get-code-frequency-stats",
    "documentationUrl": "https://developer.github.com/v3/repos/statistics/#get-the-number-of-additions-and-deletions-per-week"
  },
  {
    "name": "Get the weekly commit count for the repository owner and everyone else",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/stats/participation",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract `owner` from `all`.\n\nThe array order is oldest week (index 0) to most recent week.\n\n",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "all": [
            11,
            21,
            15,
            2,
            8,
            1,
            8,
            23,
            17,
            21,
            11,
            10,
            33,
            91,
            38,
            34,
            22,
            23,
            32,
            3,
            43,
            87,
            71,
            18,
            13,
            5,
            13,
            16,
            66,
            27,
            12,
            45,
            110,
            117,
            13,
            8,
            18,
            9,
            19,
            26,
            39,
            12,
            20,
            31,
            46,
            91,
            45,
            10,
            24,
            9,
            29,
            7
          ],
          "owner": [
            3,
            2,
            3,
            0,
            2,
            0,
            5,
            14,
            7,
            9,
            1,
            5,
            0,
            48,
            19,
            2,
            0,
            1,
            10,
            2,
            23,
            40,
            35,
            8,
            8,
            2,
            10,
            6,
            30,
            0,
            2,
            9,
            53,
            104,
            3,
            3,
            10,
            4,
            7,
            11,
            21,
            4,
            4,
            22,
            26,
            63,
            11,
            2,
            14,
            1,
            10,
            3
          ]
        },
        "description": "The array order is oldest week (index 0) to most recent week."
      }
    ],
    "idName": "get-participation-stats",
    "documentationUrl": "https://developer.github.com/v3/repos/statistics/#get-the-weekly-commit-count-for-the-repository-owner-and-everyone-else"
  },
  {
    "name": "Get the number of commits per hour in each day",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/stats/punch_card",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Each array contains the day number, hour number, and number of commits:\n\n*   `0-6`: Sunday - Saturday\n*   `0-23`: Hour of day\n*   Number of commits\n\nFor example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          [
            0,
            0,
            5
          ],
          [
            0,
            1,
            43
          ],
          [
            0,
            2,
            21
          ]
        ],
        "description": "For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits."
      }
    ],
    "idName": "get-punch-card-stats",
    "documentationUrl": "https://developer.github.com/v3/repos/statistics/#get-the-number-of-commits-per-hour-in-each-day"
  },
  {
    "name": "Create a status",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "POST",
    "path": "/repos/:owner/:repo/statuses/:sha",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "sha",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "state",
        "type": "string",
        "description": "The state of the status. Can be one of `error`, `failure`, `pending`, or `success`.",
        "required": true,
        "enum": [
          "error",
          "failure",
          "pending",
          "success"
        ],
        "location": "body"
      },
      {
        "name": "target_url",
        "type": "string",
        "description": "The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.  \nFor example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:  \n`http://ci.example.com/user/repo/build/sha`",
        "required": false,
        "location": "body"
      },
      {
        "name": "description",
        "type": "string",
        "description": "A short description of the status.",
        "required": false,
        "location": "body"
      },
      {
        "name": "context",
        "type": "string",
        "description": "A string label to differentiate this status from the status of other systems.",
        "default": "default",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "state": "success",
        "target_url": "https://example.com/build/status",
        "description": "The build succeeded!",
        "context": "continuous-integration/jenkins"
      }
    ],
    "description": "Users with push access in a repository can create commit statuses for a given SHA.\n\nNote: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "avatar_url": "https://github.com/images/error/hubot_happy.gif",
          "id": 1,
          "node_id": "MDY6U3RhdHVzMQ==",
          "state": "success",
          "description": "Build has completed successfully",
          "target_url": "https://ci.example.com/1000/output",
          "context": "continuous-integration/jenkins",
          "created_at": "2012-07-20T01:19:13Z",
          "updated_at": "2012-07-20T01:19:13Z",
          "creator": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          }
        }
      }
    ],
    "idName": "create-status",
    "documentationUrl": "https://developer.github.com/v3/repos/statuses/#create-a-status"
  },
  {
    "name": "List statuses for a specific ref",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/commits/:ref/statuses",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "ref",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.\n\nThis resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "avatar_url": "https://github.com/images/error/hubot_happy.gif",
            "id": 1,
            "node_id": "MDY6U3RhdHVzMQ==",
            "state": "success",
            "description": "Build has completed successfully",
            "target_url": "https://ci.example.com/1000/output",
            "context": "continuous-integration/jenkins",
            "created_at": "2012-07-20T01:19:13Z",
            "updated_at": "2012-07-20T01:19:13Z",
            "creator": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            }
          }
        ]
      }
    ],
    "idName": "list-statuses-for-ref",
    "documentationUrl": "https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref"
  },
  {
    "name": "Get the combined status for a specific ref",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/commits/:ref/status",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "ref",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://developer.github.com/v3/#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "state": "success",
          "statuses": [
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "avatar_url": "https://github.com/images/error/hubot_happy.gif",
              "id": 1,
              "node_id": "MDY6U3RhdHVzMQ==",
              "state": "success",
              "description": "Build has completed successfully",
              "target_url": "https://ci.example.com/1000/output",
              "context": "continuous-integration/jenkins",
              "created_at": "2012-07-20T01:19:13Z",
              "updated_at": "2012-07-20T01:19:13Z"
            },
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "avatar_url": "https://github.com/images/error/other_user_happy.gif",
              "id": 2,
              "node_id": "MDY6U3RhdHVzMg==",
              "state": "success",
              "description": "Testing has completed successfully",
              "target_url": "https://ci.example.com/2000/output",
              "context": "security/brakeman",
              "created_at": "2012-08-20T01:19:13Z",
              "updated_at": "2012-08-20T01:19:13Z"
            }
          ],
          "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "total_count": 2,
          "repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "http://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "http://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "http://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "http://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "http://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "http://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "http://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "http://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "http://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "http://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "http://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "commit_url": "https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "url": "https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status"
        }
      }
    ],
    "idName": "get-combined-status-for-ref",
    "documentationUrl": "https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref"
  },
  {
    "name": "List referrers",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/traffic/popular/referrers",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Get the top 10 referrers over the last 14 days.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "referrer": "Google",
            "count": 4,
            "uniques": 3
          },
          {
            "referrer": "stackoverflow.com",
            "count": 2,
            "uniques": 2
          },
          {
            "referrer": "eggsonbread.com",
            "count": 1,
            "uniques": 1
          },
          {
            "referrer": "yandex.ru",
            "count": 1,
            "uniques": 1
          }
        ]
      }
    ],
    "idName": "get-top-referrers",
    "documentationUrl": "https://developer.github.com/v3/repos/traffic/#list-referrers"
  },
  {
    "name": "List paths",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/traffic/popular/paths",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Get the top 10 popular contents over the last 14 days.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "path": "/github/hubot",
            "title": "github/hubot: A customizable life embetterment robot.",
            "count": 3542,
            "uniques": 2225
          },
          {
            "path": "/github/hubot/blob/master/docs/scripting.md",
            "title": "hubot/scripting.md at master · github/hubot · GitHub",
            "count": 1707,
            "uniques": 804
          },
          {
            "path": "/github/hubot/tree/master/docs",
            "title": "hubot/docs at master · github/hubot · GitHub",
            "count": 685,
            "uniques": 435
          },
          {
            "path": "/github/hubot/tree/master/src",
            "title": "hubot/src at master · github/hubot · GitHub",
            "count": 577,
            "uniques": 347
          },
          {
            "path": "/github/hubot/blob/master/docs/index.md",
            "title": "hubot/index.md at master · github/hubot · GitHub",
            "count": 379,
            "uniques": 259
          },
          {
            "path": "/github/hubot/blob/master/docs/adapters.md",
            "title": "hubot/adapters.md at master · github/hubot · GitHub",
            "count": 354,
            "uniques": 201
          },
          {
            "path": "/github/hubot/tree/master/examples",
            "title": "hubot/examples at master · github/hubot · GitHub",
            "count": 340,
            "uniques": 260
          },
          {
            "path": "/github/hubot/blob/master/docs/deploying/heroku.md",
            "title": "hubot/heroku.md at master · github/hubot · GitHub",
            "count": 324,
            "uniques": 217
          },
          {
            "path": "/github/hubot/blob/master/src/robot.coffee",
            "title": "hubot/robot.coffee at master · github/hubot · GitHub",
            "count": 293,
            "uniques": 191
          },
          {
            "path": "/github/hubot/blob/master/LICENSE.md",
            "title": "hubot/LICENSE.md at master · github/hubot · GitHub",
            "count": 281,
            "uniques": 222
          }
        ]
      }
    ],
    "idName": "get-top-paths",
    "documentationUrl": "https://developer.github.com/v3/repos/traffic/#list-paths"
  },
  {
    "name": "Views",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/traffic/views",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per",
        "type": "string",
        "description": "Must be one of: `day`, `week`.",
        "default": "day",
        "required": false,
        "enum": [
          "day",
          "week"
        ],
        "location": "query"
      }
    ],
    "description": "Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "count": 14850,
          "uniques": 3782,
          "views": [
            {
              "timestamp": "2016-10-10T00:00:00Z",
              "count": 440,
              "uniques": 143
            },
            {
              "timestamp": "2016-10-11T00:00:00Z",
              "count": 1308,
              "uniques": 414
            },
            {
              "timestamp": "2016-10-12T00:00:00Z",
              "count": 1486,
              "uniques": 452
            },
            {
              "timestamp": "2016-10-13T00:00:00Z",
              "count": 1170,
              "uniques": 401
            },
            {
              "timestamp": "2016-10-14T00:00:00Z",
              "count": 868,
              "uniques": 266
            },
            {
              "timestamp": "2016-10-15T00:00:00Z",
              "count": 495,
              "uniques": 157
            },
            {
              "timestamp": "2016-10-16T00:00:00Z",
              "count": 524,
              "uniques": 175
            },
            {
              "timestamp": "2016-10-17T00:00:00Z",
              "count": 1263,
              "uniques": 412
            },
            {
              "timestamp": "2016-10-18T00:00:00Z",
              "count": 1402,
              "uniques": 417
            },
            {
              "timestamp": "2016-10-19T00:00:00Z",
              "count": 1394,
              "uniques": 424
            },
            {
              "timestamp": "2016-10-20T00:00:00Z",
              "count": 1492,
              "uniques": 448
            },
            {
              "timestamp": "2016-10-21T00:00:00Z",
              "count": 1153,
              "uniques": 332
            },
            {
              "timestamp": "2016-10-22T00:00:00Z",
              "count": 566,
              "uniques": 168
            },
            {
              "timestamp": "2016-10-23T00:00:00Z",
              "count": 675,
              "uniques": 184
            },
            {
              "timestamp": "2016-10-24T00:00:00Z",
              "count": 614,
              "uniques": 237
            }
          ]
        }
      }
    ],
    "idName": "get-views",
    "documentationUrl": "https://developer.github.com/v3/repos/traffic/#views"
  },
  {
    "name": "Clones",
    "enabledForApps": true,
    "githubCloudOnly": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/traffic/clones",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per",
        "type": "string",
        "description": "Must be one of: `day`, `week`.",
        "default": "day",
        "required": false,
        "enum": [
          "day",
          "week"
        ],
        "location": "query"
      }
    ],
    "description": "Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "count": 173,
          "uniques": 128,
          "clones": [
            {
              "timestamp": "2016-10-10T00:00:00Z",
              "count": 2,
              "uniques": 1
            },
            {
              "timestamp": "2016-10-11T00:00:00Z",
              "count": 17,
              "uniques": 16
            },
            {
              "timestamp": "2016-10-12T00:00:00Z",
              "count": 21,
              "uniques": 15
            },
            {
              "timestamp": "2016-10-13T00:00:00Z",
              "count": 8,
              "uniques": 7
            },
            {
              "timestamp": "2016-10-14T00:00:00Z",
              "count": 5,
              "uniques": 5
            },
            {
              "timestamp": "2016-10-15T00:00:00Z",
              "count": 2,
              "uniques": 2
            },
            {
              "timestamp": "2016-10-16T00:00:00Z",
              "count": 8,
              "uniques": 7
            },
            {
              "timestamp": "2016-10-17T00:00:00Z",
              "count": 26,
              "uniques": 15
            },
            {
              "timestamp": "2016-10-18T00:00:00Z",
              "count": 19,
              "uniques": 17
            },
            {
              "timestamp": "2016-10-19T00:00:00Z",
              "count": 19,
              "uniques": 14
            },
            {
              "timestamp": "2016-10-20T00:00:00Z",
              "count": 19,
              "uniques": 15
            },
            {
              "timestamp": "2016-10-21T00:00:00Z",
              "count": 9,
              "uniques": 7
            },
            {
              "timestamp": "2016-10-22T00:00:00Z",
              "count": 5,
              "uniques": 5
            },
            {
              "timestamp": "2016-10-23T00:00:00Z",
              "count": 6,
              "uniques": 5
            },
            {
              "timestamp": "2016-10-24T00:00:00Z",
              "count": 7,
              "uniques": 5
            }
          ]
        }
      }
    ],
    "idName": "get-clones",
    "documentationUrl": "https://developer.github.com/v3/repos/traffic/#clones"
  }
]
