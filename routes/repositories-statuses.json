[
  {
    "name": "Create a status",
    "enabledForApps": true,
    "method": "POST",
    "path": "/repos/:owner/:repo/statuses/:sha",
    "params": [
      {
        "name": "state",
        "type": "enum",
        "options": [
          "error",
          "failure",
          "pending",
          "success"
        ],
        "description": "The state of the status. Can be one of `error`, `failure`, `pending`, or `success`.",
        "required": true
      },
      {
        "name": "target_url",
        "type": "string",
        "description": "The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.  \nFor example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:  \n`http://ci.example.com/user/repo/build/sha`",
        "required": false
      },
      {
        "name": "description",
        "type": "string",
        "description": "A short description of the status.",
        "required": false
      },
      {
        "name": "context",
        "type": "string",
        "description": "A string label to differentiate this status from the status of other systems.",
        "default": "default",
        "required": false
      }
    ],
    "description": "Users with push access can create commit statuses for a given ref:\n\nNote: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.",
    "documentationUrl": "https://developer.github.com/v3/repos/statuses/#create-a-status"
  },
  {
    "name": "List statuses for a specific ref",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/commits/:ref/statuses",
    "params": [
      {
        "name": "ref",
        "type": "string",
        "description": "Ref to list the statuses from. It can be a SHA, a branch name, or a tag name.",
        "required": true
      }
    ],
    "description": "Users with pull access can view commit statuses for a given ref:\n\nThis resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.\n\nStatuses are returned in reverse chronological order. The first status in the list will be the latest one.",
    "documentationUrl": "https://developer.github.com/v3/repos/statuses/#list-statuses-for-a-specific-ref"
  },
  {
    "name": "Get the combined status for a specific ref",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/commits/:ref/status",
    "params": [
      {
        "name": "ref",
        "type": "string",
        "description": "Ref to fetch the status for. It can be a SHA, a branch name, or a tag name.",
        "required": true
      }
    ],
    "description": "Users with pull access can access a combined view of commit statuses for a given ref.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](/v3/#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`",
    "documentationUrl": "https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref"
  }
]