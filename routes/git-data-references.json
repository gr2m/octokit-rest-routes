[
  {
    "name": "Get a Reference",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/git/refs/:ref",
    "description": "Returns a branch or tag reference. Other than the [REST API](https://developer.github.com/v3/git/refs/#get-a-reference) it always returns a single reference. If the REST API returns with an array then the method responds with an error.",
    "params": [
      {
        "name": "ref",
        "type": "string",
        "description": "Must be formatted as `heads/branch`, not just `branch`",
        "required": true
      }
    ],
    "isOverride": true,
    "documentationUrl": "https://developer.github.com/v3/git/refs/#get-a-reference"
  },
  {
    "name": "Get all References",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/git/refs/:namespace",
    "description": "This will return an array of all the references on the system, including things like notes and stashes if they exist on the server",
    "params": [
      {
        "name": "namespace",
        "type": "string",
        "description": "Filter by sub-namespace (reference prefix). Most commen examples would be `'heads/'` and `'tags/'` to retrieve branches or tags",
        "required": false
      }
    ],
    "isOverride": true,
    "documentationUrl": "https://developer.github.com/v3/git/refs/#get-all-references"
  },
  {
    "name": "Create a Reference",
    "enabledForApps": true,
    "method": "POST",
    "path": "/repos/:owner/:repo/git/refs",
    "params": [
      {
        "name": "ref",
        "type": "type",
        "description": "The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.",
        "required": true
      },
      {
        "name": "sha",
        "type": "type",
        "description": "The SHA1 value to set this reference to",
        "required": true
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/git/refs/#create-a-reference"
  },
  {
    "name": "Update a Reference",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/git/refs/:ref",
    "params": [
      {
        "name": "sha",
        "type": "type",
        "description": "The SHA1 value to set this reference to",
        "required": true
      },
      {
        "name": "force",
        "type": "boolean",
        "description": "Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to `false` will make sure you're not overwriting work.",
        "default": false,
        "required": false
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/git/refs/#update-a-reference"
  },
  {
    "name": "Delete a Reference",
    "enabledForApps": true,
    "params": [],
    "description": "Example: Deleting a branch:\n\n```\nDELETE /repos/octocat/Hello-World/git/refs/heads/feature-a\n```\n\nExample: Deleting a tag:\n\n```\nDELETE /repos/octocat/Hello-World/git/refs/tags/v1.0\n```",
    "documentationUrl": "https://developer.github.com/v3/git/refs/#delete-a-reference"
  }
]