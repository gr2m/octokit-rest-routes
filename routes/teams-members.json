[
  {
    "name": "List team members",
    "method": "GET",
    "path": "/teams/:id/members",
    "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.hellcat-preview+json\n    \n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nIf you pass the `hellcat-preview` media type, team members will include the members of child teams.\n\nTo list members in a team, the team must be visible to the authenticated user.\n\n    GET /teams/:id/members\n    \n\nName\n\nType\n\nDescription\n\n`role`\n\n`string`\n\nFilters members returned by their role in the team. Can be one of:  \n\\* `member` \\- normal members of the team.  \n\\* `maintainer` \\- team maintainers.  \n\\* `all` \\- all members of the team.  \nDefault: `all`\n\n### [](#response)Response\n\n    Status: 200 OK\n    Link: <https://api.github.com/resource?page=2>; rel=\"next\",\n          <https://api.github.com/resource?page=5>; rel=\"last\"\n    \n\n    [\n      {\n        \"login\": \"octocat\",\n        \"id\": 1,\n        \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n        \"gravatar_id\": \"\",\n        \"url\": \"https://api.github.com/users/octocat\",\n        \"html_url\": \"https://github.com/octocat\",\n        \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n        \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n        \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n        \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n        \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n        \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n        \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n        \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n        \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n        \"type\": \"User\",\n        \"site_admin\": false\n      }\n    ]\n    \n\n[](#get-team-member)Get team member[](/apps/ \"Enabled for GitHub Apps\")\n-----------------------------------------------------------------------\n\n### [](#deprecation-notice)Deprecation notice\n\nThe \"Get team member\" API (described below) is deprecated.\n\nWe recommend using the [Get team membership API](/v3/teams/members/#get-team-membership) instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user.\n\n    GET /teams/:id/members/:username\n    \n\n### [](#response-if-user-is-a-member)Response if user is a member\n\n    Status: 204 No Content\n    \n\n### [](#response-if-user-is-not-a-member)Response if user is not a member\n\n    Status: 404 Not Found\n    \n\n[](#add-team-member)Add team member\n-----------------------------------\n\n### [](#deprecation-notice-1)Deprecation notice\n\nThe \"Add team member\" API (described below) is deprecated.\n\nWe recommend using the [Add team membership API](/v3/teams/members/#add-or-update-team-membership) instead. It allows you to invite new organization members to your teams.\n\nTo add a user to a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with, and the user being added must already be a member of at least one other team on the same organization.\n\n    PUT /teams/:id/members/:username\n    \n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](/v3/#http-verbs).\"\n\n### [](#response-1)Response\n\n    Status: 204 No Content\n    \n\nIf you attempt to add an organization to a team, you will get this:\n\n    Status: 422 Unprocessable Entity\n    \n\n    {\n      \"message\": \"Cannot add an organization as a member.\",\n      \"errors\": [\n        {\n          \"code\": \"org\",\n          \"field\": \"user\",\n          \"resource\": \"TeamMember\"\n        }\n      ]\n    }\n    \n\nIf you attempt to add a user to a team and that user is not a member of at least one other team on the same organization, you will get this:\n\n    Status: 422 Unprocessable Entity\n    \n\n    {\n      \"message\": \"User isn't a member of this organization. Please invite them first.\",\n      \"errors\": [\n        {\n          \"code\": \"unaffiliated\",\n          \"field\": \"user\",\n          \"resource\": \"TeamMember\"\n        }\n      ]\n    }\n    \n\n[](#remove-team-member)Remove team member\n-----------------------------------------\n\n### [](#deprecation-notice-2)Deprecation notice\n\nThe \"Remove team member\" API (described below) is deprecated.\n\nWe recommend using the [Remove team membership API](/v3/teams/members/#remove-team-membership) instead. It allows you to remove both active and pending memberships.\n\nTo remove a user from a team, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. NOTE: This does not delete the user, it just removes them from the team.\n\n    DELETE /teams/:id/members/:username\n    \n\n### [](#response-2)Response\n\n    Status: 204 No Content\n    \n\n[](#get-team-membership)Get team membership[](/apps/ \"Enabled for GitHub Apps\")\n-------------------------------------------------------------------------------\n\n**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.hellcat-preview+json\n    \n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nIf you pass the `hellcat-preview` media type, team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n    GET /teams/:id/memberships/:username\n    \n\n**Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create team](/v3/teams#create-team).\n\n### [](#response-if-user-has-an-active-membership-with-team)Response if user has an active membership with team\n\n    Status: 200 OK\n    \n\n    {\n      \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n      \"role\": \"member\",\n      \"state\": \"active\"\n    }\n    \n\n### [](#response-if-user-is-a-team-maintainer)Response if user is a team maintainer\n\n    Status: 200 OK\n    \n\n    {\n      \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n      \"role\": \"maintainer\",\n      \"state\": \"active\"\n    }\n    \n\n### [](#response-if-user-has-a-pending-membership-with-team)Response if user has a pending membership with team\n\n    Status: 200 OK\n    \n\n    {\n      \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n      \"role\": \"member\",\n      \"state\": \"pending\"\n    }\n    \n\n### [](#no-membership-response)No membership response\n\n    Status: 404 Not Found\n    \n\n[](#add-or-update-team-membership)Add or update team membership[](/apps/ \"Enabled for GitHub Apps\")\n---------------------------------------------------------------------------------------------------\n\nIf the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a maintainer of the team.\n\nIf the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a maintainer of the team.\n\n    PUT /teams/:id/memberships/:username\n    \n\n### [](#parameters)Parameters\n\nName\n\nType\n\nDescription\n\n`role`\n\n`string`\n\nThe role that this user should have in the team. Can be one of:  \n\\* `member` \\- a normal member of the team.  \n\\* `maintainer` \\- a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.  \nDefault: `member`\n\n### [](#response-if-users-membership-with-team-is-now-active)Response if user's membership with team is now active\n\n    Status: 200 OK\n    \n\n    {\n      \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n      \"role\": \"member\",\n      \"state\": \"active\"\n    }\n    \n\n### [](#response-if-users-membership-with-team-is-now-pending)Response if user's membership with team is now pending\n\n    Status: 200 OK\n    \n\n    {\n      \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n      \"role\": \"member\",\n      \"state\": \"pending\"\n    }\n    \n\nIf you attempt to add an organization to a team, you will get this:\n\n    Status: 422 Unprocessable Entity\n    \n\n    {\n      \"message\": \"Cannot add an organization as a member.\",\n      \"errors\": [\n        {\n          \"code\": \"org\",\n          \"field\": \"user\",\n          \"resource\": \"TeamMember\"\n        }\n      ]\n    }\n    \n\n[](#remove-team-membership)Remove team membership[](/apps/ \"Enabled for GitHub Apps\")\n-------------------------------------------------------------------------------------\n\nTo remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. NOTE: This does not delete the user, it just removes their membership from the team.\n\n    DELETE /teams/:id/memberships/:username\n    \n\n### [](#response-3)Response\n\n    Status: 204 No Content\n    \n\n[](#list-pending-team-invitations)List pending team invitations[](/apps/ \"Enabled for GitHub Apps\")\n---------------------------------------------------------------------------------------------------\n\n**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.dazzler-preview+json\n    \n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nThe return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.\n\n    GET /teams/:id/invitations\n    \n\n### [](#response-4)Response\n\n    Status: 200 OK\n    Link: <https://api.github.com/resource?page=2>; rel=\"next\",\n          <https://api.github.com/resource?page=5>; rel=\"last\"\n    \n\n    [\n      {\n        \"id\": 1,\n        \"login\": \"monalisa\",\n        \"email\": \"octocat@github.com\",\n        \"role\": \"direct_member\",\n        \"created_at\": \"2016-11-30T06:46:10-08:00\",\n        \"inviter\": {\n          \"login\": \"other_user\",\n          \"id\": 1,\n          \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n          \"gravatar_id\": \"\",\n          \"url\": \"https://api.github.com/users/other_user\",\n          \"html_url\": \"https://github.com/other_user\",\n          \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n          \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n          \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n          \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n          \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n          \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n          \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n          \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n          \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n          \"type\": \"User\",\n          \"site_admin\": false\n        },\n        \"team_count\": 2,\n        \"invitation_team_url\": \"https://api.github.com/organizations/2/invitations/1/teams\"\n      }\n    ]",
    "params": [
      {
        "name": "role",
        "type": "string",
        "description": "Filters members returned by their role in the team. Can be one of:  \n\\* `member` \\- normal members of the team.  \n\\* `maintainer` \\- team maintainers.  \n\\* `all` \\- all members of the team.  \nDefault: `all`"
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/teams/members/#list-team-members"
  },
  {
    "name": "Get team member",
    "method": "GET",
    "path": "/teams/:id/members/:username",
    "description": "### [](#deprecation-notice)Deprecation notice\n\nThe \"Get team member\" API (described below) is deprecated.\n\nWe recommend using the [Get team membership API](/v3/teams/members/#get-team-membership) instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user.",
    "params": [],
    "documentationUrl": "https://developer.github.com/v3/teams/members/#get-team-member"
  },
  {
    "name": "Add team member",
    "method": "PUT",
    "path": "/teams/:id/members/:username",
    "description": "### [](#deprecation-notice-1)Deprecation notice\n\nThe \"Add team member\" API (described below) is deprecated.\n\nWe recommend using the [Add team membership API](/v3/teams/members/#add-or-update-team-membership) instead. It allows you to invite new organization members to your teams.\n\nTo add a user to a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with, and the user being added must already be a member of at least one other team on the same organization.",
    "params": [],
    "documentationUrl": "https://developer.github.com/v3/teams/members/#add-team-member"
  },
  {
    "name": "Remove team member",
    "method": "DELETE",
    "path": "/teams/:id/members/:username",
    "description": "### [](#deprecation-notice-2)Deprecation notice\n\nThe \"Remove team member\" API (described below) is deprecated.\n\nWe recommend using the [Remove team membership API](/v3/teams/members/#remove-team-membership) instead. It allows you to remove both active and pending memberships.\n\nTo remove a user from a team, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. NOTE: This does not delete the user, it just removes them from the team.",
    "params": [],
    "documentationUrl": "https://developer.github.com/v3/teams/members/#remove-team-member"
  },
  {
    "name": "Get team membership",
    "method": "GET",
    "path": "/teams/:id/memberships/:username",
    "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.hellcat-preview+json\n    \n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nIf you pass the `hellcat-preview` media type, team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n    GET /teams/:id/memberships/:username\n    \n\n**Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create team](/v3/teams#create-team).\n\n### [](#response-if-user-has-an-active-membership-with-team)Response if user has an active membership with team\n\n    Status: 200 OK\n    \n\n    {\n      \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n      \"role\": \"member\",\n      \"state\": \"active\"\n    }\n    \n\n### [](#response-if-user-is-a-team-maintainer)Response if user is a team maintainer\n\n    Status: 200 OK\n    \n\n    {\n      \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n      \"role\": \"maintainer\",\n      \"state\": \"active\"\n    }\n    \n\n### [](#response-if-user-has-a-pending-membership-with-team)Response if user has a pending membership with team\n\n    Status: 200 OK\n    \n\n    {\n      \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n      \"role\": \"member\",\n      \"state\": \"pending\"\n    }\n    \n\n### [](#no-membership-response)No membership response\n\n    Status: 404 Not Found\n    \n\n[](#add-or-update-team-membership)Add or update team membership[](/apps/ \"Enabled for GitHub Apps\")\n---------------------------------------------------------------------------------------------------\n\nIf the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a maintainer of the team.\n\nIf the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a maintainer of the team.\n\n    PUT /teams/:id/memberships/:username\n    \n\n### [](#parameters)Parameters\n\nName\n\nType\n\nDescription\n\n`role`\n\n`string`\n\nThe role that this user should have in the team. Can be one of:  \n\\* `member` \\- a normal member of the team.  \n\\* `maintainer` \\- a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.  \nDefault: `member`\n\n### [](#response-if-users-membership-with-team-is-now-active)Response if user's membership with team is now active\n\n    Status: 200 OK\n    \n\n    {\n      \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n      \"role\": \"member\",\n      \"state\": \"active\"\n    }\n    \n\n### [](#response-if-users-membership-with-team-is-now-pending)Response if user's membership with team is now pending\n\n    Status: 200 OK\n    \n\n    {\n      \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n      \"role\": \"member\",\n      \"state\": \"pending\"\n    }\n    \n\nIf you attempt to add an organization to a team, you will get this:\n\n    Status: 422 Unprocessable Entity\n    \n\n    {\n      \"message\": \"Cannot add an organization as a member.\",\n      \"errors\": [\n        {\n          \"code\": \"org\",\n          \"field\": \"user\",\n          \"resource\": \"TeamMember\"\n        }\n      ]\n    }\n    \n\n[](#remove-team-membership)Remove team membership[](/apps/ \"Enabled for GitHub Apps\")\n-------------------------------------------------------------------------------------\n\nTo remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. NOTE: This does not delete the user, it just removes their membership from the team.\n\n    DELETE /teams/:id/memberships/:username\n    \n\n### [](#response-3)Response\n\n    Status: 204 No Content\n    \n\n[](#list-pending-team-invitations)List pending team invitations[](/apps/ \"Enabled for GitHub Apps\")\n---------------------------------------------------------------------------------------------------\n\n**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.dazzler-preview+json\n    \n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nThe return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.\n\n    GET /teams/:id/invitations\n    \n\n### [](#response-4)Response\n\n    Status: 200 OK\n    Link: <https://api.github.com/resource?page=2>; rel=\"next\",\n          <https://api.github.com/resource?page=5>; rel=\"last\"\n    \n\n    [\n      {\n        \"id\": 1,\n        \"login\": \"monalisa\",\n        \"email\": \"octocat@github.com\",\n        \"role\": \"direct_member\",\n        \"created_at\": \"2016-11-30T06:46:10-08:00\",\n        \"inviter\": {\n          \"login\": \"other_user\",\n          \"id\": 1,\n          \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n          \"gravatar_id\": \"\",\n          \"url\": \"https://api.github.com/users/other_user\",\n          \"html_url\": \"https://github.com/other_user\",\n          \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n          \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n          \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n          \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n          \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n          \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n          \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n          \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n          \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n          \"type\": \"User\",\n          \"site_admin\": false\n        },\n        \"team_count\": 2,\n        \"invitation_team_url\": \"https://api.github.com/organizations/2/invitations/1/teams\"\n      }\n    ]",
    "params": [],
    "documentationUrl": "https://developer.github.com/v3/teams/members/#get-team-membership"
  },
  {
    "name": "Add or update team membership",
    "method": "PUT",
    "path": "/teams/:id/memberships/:username",
    "description": "If the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a maintainer of the team.\n\nIf the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a maintainer of the team.",
    "params": [
      {
        "name": "role",
        "type": "string",
        "description": "The role that this user should have in the team. Can be one of:  \n\\* `member` \\- a normal member of the team.  \n\\* `maintainer` \\- a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.  \nDefault: `member`"
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/teams/members/#add-or-update-team-membership"
  },
  {
    "name": "Remove team membership",
    "method": "DELETE",
    "path": "/teams/:id/memberships/:username",
    "description": "To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. NOTE: This does not delete the user, it just removes their membership from the team.",
    "params": [],
    "documentationUrl": "https://developer.github.com/v3/teams/members/#remove-team-membership"
  },
  {
    "name": "List pending team invitations",
    "method": "GET",
    "path": "/teams/:id/invitations",
    "description": "**Note:** You can now use the API to invite users to a GitHub organization. This feature is currently available for developers to preview. See the [blog post](/changes/2018-01-25-organization-invitation-api-preview) for full details. To access this feature, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.dazzler-preview+json\n    \n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nThe return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.\n\n    GET /teams/:id/invitations\n    \n\n### [](#response-4)Response\n\n    Status: 200 OK\n    Link: <https://api.github.com/resource?page=2>; rel=\"next\",\n          <https://api.github.com/resource?page=5>; rel=\"last\"\n    \n\n    [\n      {\n        \"id\": 1,\n        \"login\": \"monalisa\",\n        \"email\": \"octocat@github.com\",\n        \"role\": \"direct_member\",\n        \"created_at\": \"2016-11-30T06:46:10-08:00\",\n        \"inviter\": {\n          \"login\": \"other_user\",\n          \"id\": 1,\n          \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n          \"gravatar_id\": \"\",\n          \"url\": \"https://api.github.com/users/other_user\",\n          \"html_url\": \"https://github.com/other_user\",\n          \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n          \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n          \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n          \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n          \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n          \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n          \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n          \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n          \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n          \"type\": \"User\",\n          \"site_admin\": false\n        },\n        \"team_count\": 2,\n        \"invitation_team_url\": \"https://api.github.com/organizations/2/invitations/1/teams\"\n      }\n    ]",
    "params": [],
    "documentationUrl": "https://developer.github.com/v3/teams/members/#list-pending-team-invitations"
  }
]