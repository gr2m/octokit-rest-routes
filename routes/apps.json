[
  {
    "name": "Get a single GitHub App",
    "enabledForApps": true,
    "method": "GET",
    "path": "/apps/:app_slug",
    "params": [
      {
        "name": "app_slug",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).",
    "idName": "get-by-slug",
    "documentationUrl": "https://developer.github.com/v3/apps/#get-a-single-github-app"
  },
  {
    "name": "Get the authenticated GitHub App",
    "enabledForApps": true,
    "method": "GET",
    "path": "/app",
    "params": [],
    "description": "Returns the GitHub App associated with the [authentication credentials](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps#authenticating-as-a-github-app) used.",
    "idName": "get-authenticated",
    "documentationUrl": "https://developer.github.com/v3/apps/#get-the-authenticated-github-app"
  },
  {
    "name": "Find installations",
    "enabledForApps": true,
    "method": "GET",
    "path": "/app/installations",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "The permissions the installation has are included under the `permissions` key.",
    "idName": "list-installations",
    "documentationUrl": "https://developer.github.com/v3/apps/#find-installations"
  },
  {
    "name": "Get a single installation",
    "enabledForApps": true,
    "method": "GET",
    "path": "/app/installations/:installation_id",
    "params": [
      {
        "name": "installation_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "idName": "get-installation",
    "documentationUrl": "https://developer.github.com/v3/apps/#get-a-single-installation"
  },
  {
    "name": "List installations for user",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/installations",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists installations in a repository that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nThe permissions the installation has are included under the `permissions` key.",
    "idName": "list-installations-for-authenticated-user",
    "documentationUrl": "https://developer.github.com/v3/apps/#list-installations-for-user"
  },
  {
    "name": "Create a new installation token",
    "enabledForApps": true,
    "method": "POST",
    "path": "/installations/:installation_id/access_tokens",
    "params": [
      {
        "name": "installation_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Creates an access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token.",
    "idName": "create-installation-token",
    "documentationUrl": "https://developer.github.com/v3/apps/#create-a-new-installation-token"
  },
  {
    "name": "List repositories",
    "enabledForApps": true,
    "method": "GET",
    "path": "/installation/repositories",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.",
    "idName": "list-repos",
    "documentationUrl": "https://developer.github.com/v3/apps/installations/#list-repositories"
  },
  {
    "name": "List repositories accessible to the user for an installation",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/installations/:installation_id/repositories",
    "params": [
      {
        "name": "installation_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe access the user has to each repository is included in the hash under the `permissions` key.",
    "idName": "list-installation-repos-for-authenticated-user",
    "documentationUrl": "https://developer.github.com/v3/apps/installations/#list-repositories-accessible-to-the-user-for-an-installation"
  },
  {
    "name": "Add repository to installation",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/user/installations/:installation_id/repositories/:repository_id",
    "params": [
      {
        "name": "installation_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repository_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Add a single repository to an installation.\n\nThe authenticated user must have admin access to the repository.",
    "idName": "add-repo-to-installation",
    "documentationUrl": "https://developer.github.com/v3/apps/installations/#add-repository-to-installation"
  },
  {
    "name": "Remove repository from installation",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/user/installations/:installation_id/repositories/:repository_id",
    "params": [
      {
        "name": "installation_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repository_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Remove a single repository from an installation.\n\nThe authenticated user must have admin access to the repository.",
    "idName": "remove-repo-from-installation",
    "documentationUrl": "https://developer.github.com/v3/apps/installations/#remove-repository-from-installation"
  },
  {
    "name": "List all plans for your Marketplace listing",
    "enabledForApps": false,
    "method": "GET",
    "path": "/marketplace_listing/plans",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "idName": "list-plans",
    "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#list-all-plans-for-your-marketplace-listing"
  },
  {
    "name": "List all plans for your Marketplace listing (stubbed)",
    "enabledForApps": false,
    "method": "GET",
    "path": "/marketplace_listing/stubbed/plans",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "idName": "list-plans-stubbed",
    "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#list-all-plans-for-your-marketplace-listing"
  },
  {
    "name": "List all GitHub accounts (user or organization) on a specific plan",
    "enabledForApps": false,
    "method": "GET",
    "path": "/marketplace_listing/plans/:plan_id/accounts",
    "params": [
      {
        "name": "plan_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "sort",
        "type": "string",
        "description": "Sorts the GitHub accounts by the date they were created or last updated. Can be one of `created` or `updated`.",
        "default": "created",
        "required": false,
        "enum": [
          "created",
          "updated"
        ],
        "location": "query"
      },
      {
        "name": "direction",
        "type": "string",
        "description": "To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter.",
        "required": false,
        "enum": [
          "asc",
          "desc"
        ],
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Returns any accounts associated with a plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased.",
    "idName": "list-accounts-user-or-org-on-plan",
    "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#list-all-github-accounts-user-or-organization-on-a-specific-plan"
  },
  {
    "name": "List all GitHub accounts (user or organization) on a specific plan (stubbed)",
    "enabledForApps": false,
    "method": "GET",
    "path": "/marketplace_listing/stubbed/plans/:plan_id/accounts",
    "params": [
      {
        "name": "plan_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "sort",
        "type": "string",
        "description": "Sorts the GitHub accounts by the date they were created or last updated. Can be one of `created` or `updated`.",
        "default": "created",
        "required": false,
        "enum": [
          "created",
          "updated"
        ],
        "location": "query"
      },
      {
        "name": "direction",
        "type": "string",
        "description": "To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter.",
        "required": false,
        "enum": [
          "asc",
          "desc"
        ],
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Returns any accounts associated with a plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased.",
    "idName": "list-accounts-user-or-org-on-plan-stubbed",
    "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#list-all-github-accounts-user-or-organization-on-a-specific-plan"
  },
  {
    "name": "Check if a GitHub account is associated with any Marketplace listing",
    "enabledForApps": false,
    "method": "GET",
    "path": "/marketplace_listing/accounts/:account_id",
    "params": [
      {
        "name": "account_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Checks whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App.",
    "idName": "check-account-is-associated-with-any",
    "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#check-if-a-github-account-is-associated-with-any-marketplace-listing"
  },
  {
    "name": "Check if a GitHub account is associated with any Marketplace listing (stubbed)",
    "enabledForApps": false,
    "method": "GET",
    "path": "/marketplace_listing/stubbed/accounts/:account_id",
    "params": [
      {
        "name": "account_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Checks whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App.",
    "idName": "check-account-is-associated-with-any-stubbed",
    "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#check-if-a-github-account-is-associated-with-any-marketplace-listing"
  },
  {
    "name": "Get a user's Marketplace purchases",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/marketplace_purchases",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Returns only active subscriptions. You need to authenticate this call with the user's OAuth token.",
    "idName": "list-marketplace-purchases-for-authenticated-user",
    "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#get-a-users-marketplace-purchases"
  },
  {
    "name": "Get a user's Marketplace purchases (stubbed)",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/marketplace_purchases/stubbed",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Returns only active subscriptions. You need to authenticate this call with the user's OAuth token.",
    "idName": "list-marketplace-purchases-for-authenticated-user-stubbed",
    "documentationUrl": "https://developer.github.com/v3/apps/marketplace/#get-a-users-marketplace-purchases"
  }
]
