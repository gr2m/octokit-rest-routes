[
  {
    "name": "Search repositories",
    "method": "GET",
    "path": "/search/repositories",
    "description": "Find repositories via various criteria. This method returns up to 100 results [per page](/v3/#pagination).",
    "params": [
      {
        "name": "q",
        "type": "string",
        "description": "The search keywords, as well as any qualifiers."
      },
      {
        "name": "sort",
        "type": "string",
        "description": "The sort field. One of `stars`, `forks`, or `updated`.",
        "default": "results are sorted by best match."
      },
      {
        "name": "order",
        "type": "string",
        "description": "The sort order if `sort` parameter is provided. One of `asc` or `desc`.",
        "default": "desc"
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/search/#search-repositories"
  },
  {
    "name": "Search commits",
    "method": "GET",
    "path": "/search/commits",
    "description": "The Commit Search API is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](/changes/2017-01-05-commit-search-api/) for full details.\n\nTo access the API you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n      application/vnd.github.cloak-preview\n    \n\nFind commits via various criteria. This method returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/commits\n    \n\n### [](#considerations-for-commit-search)Considerations for commit search\n\nOnly the _default branch_ is considered. In most cases, this will be the `master` branch.\n\n### [](#parameters-1)Parameters\n\nName\n\nType\n\nDescription\n\n`q`\n\n`string`\n\nThe search terms.\n\n`sort`\n\n`string`\n\nThe sort field. Can be `author-date` or `committer-date`. Default: results are sorted by best match.\n\n`order`\n\n`string`\n\nThe sort order if `sort` parameter is provided. One of `asc` or `desc`. Default: `desc`\n\nThe `q` search term can also contain any combination of the supported commit search qualifiers as described by the in-browser [commit search documentation](https://help.github.com/articles/searching-commits/) and [search syntax documentation](https://help.github.com/articles/search-syntax/):\n\n*   [`author`](https://help.github.com/articles/searching-commits#search-by-author-or-committer) Matches commits authored by a user (based on email settings).\n*   [`committer`](https://help.github.com/articles/searching-commits#search-by-author-or-committer) Matches commits committed by a user (based on email settings).\n*   [`author-name`](https://help.github.com/articles/searching-commits#search-by-author-or-committer) Matches commits by author name.\n*   [`committer-name`](https://help.github.com/articles/searching-commits#search-by-author-or-committer) Matches commits by committer name.\n*   [`author-email`](https://help.github.com/articles/searching-commits#search-by-author-or-committer) Matches commits by author email.\n*   [`committer-email`](https://help.github.com/articles/searching-commits#search-by-author-or-committer) Matches commits by committer email.\n*   [`author-date`](https://help.github.com/articles/searching-commits#search-by-authored-or-committed-date) Matches commits by author date range.\n*   [`committer-date`](https://help.github.com/articles/searching-commits/#search-by-authored-or-committed-date) Matches commits by committer date range.\n*   [`merge`](https://help.github.com/articles/searching-commits#filter-merge-commits) `true` filters to merge commits, `false` filters out merge commits.\n*   [`hash`](https://help.github.com/articles/searching-commits#search-by-hash) Matches commits by hash.\n*   [`parent`](https://help.github.com/articles/searching-commits#search-by-parent) Matches commits that have a particular parent.\n*   [`tree`](https://help.github.com/articles/searching-commits#search-by-tree) Matches commits by tree hash.\n*   [`is`](https://help.github.com/articles/searching-commits#filter-to-public-or-private-repositories) Matches `public` or `private` repositories.\n*   [`user`, `org`, or `repo`](https://help.github.com/articles/searching-commits#search-within-a-users-or-organizations-repositories) Limits searches to a specific user, organization, or repository.\n\n#### [](#example-1)Example\n\nSuppose you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:\n\n    https://api.github.com/search/commits?q=repo:octocat/Spoon-Knife+css\n    \n\n    Status: 200 OK\n    Link: <https://api.github.com/resource?page=2>; rel=\"next\",\n          <https://api.github.com/resource?page=5>; rel=\"last\"\n    X-RateLimit-Limit: 20\n    X-RateLimit-Remaining: 19\n    \n\n    {\n      \"total_count\": 1,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"url\": \"https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f\",\n          \"sha\": \"bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f\",\n          \"html_url\": \"https://github.com/octocat/Spoon-Knife/commit/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f\",\n          \"comments_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f/comments\",\n          \"commit\": {\n            \"url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f\",\n            \"author\": {\n              \"date\": \"2014-02-04T14:38:36-08:00\",\n              \"name\": \"The Octocat\",\n              \"email\": \"octocat@nowhere.com\"\n            },\n            \"committer\": {\n              \"date\": \"2014-02-12T15:18:55-08:00\",\n              \"name\": \"The Octocat\",\n              \"email\": \"octocat@nowhere.com\"\n            },\n            \"message\": \"Create styles.css and updated README\",\n            \"tree\": {\n              \"url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/trees/a639e96f9038797fba6e0469f94a4b0cc459fa68\",\n              \"sha\": \"a639e96f9038797fba6e0469f94a4b0cc459fa68\"\n            },\n            \"comment_count\": 8\n          },\n          \"author\": {\n            \"login\": \"octocat\",\n            \"id\": 583231,\n            \"avatar_url\": \"https://avatars.githubusercontent.com/u/583231?v=3\",\n            \"gravatar_id\": \"\",\n            \"url\": \"https://api.github.com/users/octocat\",\n            \"html_url\": \"https://github.com/octocat\",\n            \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n            \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n            \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n            \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n            \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n            \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n            \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n            \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n            \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n            \"type\": \"User\",\n            \"site_admin\": false\n          },\n          \"committer\": {\n            \"login\": \"octocat\",\n            \"id\": 583231,\n            \"avatar_url\": \"https://avatars.githubusercontent.com/u/583231?v=3\",\n            \"gravatar_id\": \"\",\n            \"url\": \"https://api.github.com/users/octocat\",\n            \"html_url\": \"https://github.com/octocat\",\n            \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n            \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n            \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n            \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n            \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n            \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n            \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n            \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n            \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n            \"type\": \"User\",\n            \"site_admin\": false\n          },\n          \"parents\": [\n            {\n              \"url\": \"https://api.github.com/repos/octocat/Spoon-Knife/commits/a30c19e3f13765a3b48829788bc1cb8b4e95cee4\",\n              \"html_url\": \"https://github.com/octocat/Spoon-Knife/commit/a30c19e3f13765a3b48829788bc1cb8b4e95cee4\",\n              \"sha\": \"a30c19e3f13765a3b48829788bc1cb8b4e95cee4\"\n            }\n          ],\n          \"repository\": {\n            \"id\": 1300192,\n            \"name\": \"Spoon-Knife\",\n            \"full_name\": \"octocat/Spoon-Knife\",\n            \"owner\": {\n              \"login\": \"octocat\",\n              \"id\": 583231,\n              \"avatar_url\": \"https://avatars.githubusercontent.com/u/583231?v=3\",\n              \"gravatar_id\": \"\",\n              \"url\": \"https://api.github.com/users/octocat\",\n              \"html_url\": \"https://github.com/octocat\",\n              \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n              \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n              \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n              \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n              \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n              \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n              \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n              \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n              \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n              \"type\": \"User\",\n              \"site_admin\": false\n            },\n            \"private\": false,\n            \"html_url\": \"https://github.com/octocat/Spoon-Knife\",\n            \"description\": \"This repo is for demonstration purposes only.\",\n            \"fork\": false,\n            \"url\": \"https://api.github.com/repos/octocat/Spoon-Knife\",\n            \"forks_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/forks\",\n            \"keys_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/keys{/key_id}\",\n            \"collaborators_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/collaborators{/collaborator}\",\n            \"teams_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/teams\",\n            \"hooks_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/hooks\",\n            \"issue_events_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/issues/events{/number}\",\n            \"events_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/events\",\n            \"assignees_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/assignees{/user}\",\n            \"branches_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/branches{/branch}\",\n            \"tags_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/tags\",\n            \"blobs_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/blobs{/sha}\",\n            \"git_tags_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/tags{/sha}\",\n            \"git_refs_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/refs{/sha}\",\n            \"trees_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/trees{/sha}\",\n            \"statuses_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/statuses/{sha}\",\n            \"languages_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/languages\",\n            \"stargazers_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/stargazers\",\n            \"contributors_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/contributors\",\n            \"subscribers_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/subscribers\",\n            \"subscription_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/subscription\",\n            \"commits_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/commits{/sha}\",\n            \"git_commits_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/commits{/sha}\",\n            \"comments_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/comments{/number}\",\n            \"issue_comment_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/issues/comments{/number}\",\n            \"contents_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/contents/{+path}\",\n            \"compare_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/compare/{base}...{head}\",\n            \"merges_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/merges\",\n            \"archive_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/{archive_format}{/ref}\",\n            \"downloads_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/downloads\",\n            \"issues_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/issues{/number}\",\n            \"pulls_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/pulls{/number}\",\n            \"milestones_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/milestones{/number}\",\n            \"notifications_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/notifications{?since,all,participating}\",\n            \"labels_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/labels{/name}\",\n            \"releases_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/releases{/id}\",\n            \"deployments_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/deployments\"\n          },\n          \"score\": 4.9971514\n        }\n      ]\n    }\n    \n\n### [](#highlighting-code-search-results)Highlighting code search results\n\nWhen searching for commits, you can get text match metadata for the **message** field. See the section on [text match metadata](#text-match-metadata) for full details.\n\n[](#search-code)Search code[](/apps/ \"Enabled for GitHub Apps\")\n---------------------------------------------------------------\n\nFind file contents via various criteria. This method returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/code\n    \n\n**Note:** You must [authenticate](/v3/#authentication) to search for code across all public repositories.\n\n### [](#considerations-for-code-search)Considerations for code search\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing language:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.\n\n### [](#parameters-2)Parameters\n\nName\n\nType\n\nDescription\n\n`q`\n\n`string`\n\nThe search terms.\n\n`sort`\n\n`string`\n\nThe sort field. Can only be `indexed`, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: results are sorted by best match.\n\n`order`\n\n`string`\n\nThe sort order if `sort` parameter is provided. One of `asc` or `desc`. Default: `desc`\n\nThe `q` search term can also contain any combination of the supported code search qualifiers as described by the in-browser [code search documentation](https://help.github.com/articles/searching-code/) and [search syntax documentation](https://help.github.com/articles/search-syntax/):\n\n*   [`in`](https://help.github.com/articles/searching-code#scope-the-search-fields) Qualifies which fields are searched. With this qualifier you can restrict the search to the file contents (`file`), the file path (`path`), or both.\n*   [`language`](https://help.github.com/articles/searching-code#search-by-language) Searches code based on the language it's written in.\n*   [`fork`](https://help.github.com/articles/searching-code#search-by-the-number-of-forks-the-parent-repository-has) Specifies that code from forked repositories should be searched (`true`). Repository forks will not be searchable unless the fork has more stars than the parent repository.\n*   [`size`](https://help.github.com/articles/searching-code#search-by-the-size-of-the-parent-repository) Finds files that match a certain size (in bytes).\n*   [`path`](https://help.github.com/articles/searching-code#search-by-the-location-of-a-file-within-the-repository) Specifies the path prefix that the resulting file must be under.\n*   [`filename`](https://help.github.com/articles/searching-code#search-by-filename) Matches files by a substring of the filename.\n*   [`extension`](https://help.github.com/articles/searching-code#search-by-the-file-extension) Matches files with a certain extension after a dot.\n*   [`user` or `repo`](https://help.github.com/articles/searching-code#search-within-a-users-or-organizations-repositories) Limits searches to a specific user or repository.\n\n#### [](#example-2)Example\n\nSuppose you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery). Your query would look something like this:\n\n    https://api.github.com/search/code?q=addClass+in:file+language:js+repo:jquery/jquery\n    \n\nHere, we're searching for the keyword `addClass` within a file's contents. We're making sure that we're only looking in files where the language is JavaScript. And we're scoping the search to the `repo:jquery/jquery` repository.\n\n    Status: 200 OK\n    Link: <https://api.github.com/resource?page=2>; rel=\"next\",\n          <https://api.github.com/resource?page=5>; rel=\"last\"\n    X-RateLimit-Limit: 20\n    X-RateLimit-Remaining: 19\n    \n\n    {\n      \"total_count\": 7,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"name\": \"classes.js\",\n          \"path\": \"src/attributes/classes.js\",\n          \"sha\": \"d7212f9dee2dcc18f084d7df8f417b80846ded5a\",\n          \"url\": \"https://api.github.com/repositories/167174/contents/src/attributes/classes.js?ref=825ac3773694e0cd23ee74895fd5aeb535b27da4\",\n          \"git_url\": \"https://api.github.com/repositories/167174/git/blobs/d7212f9dee2dcc18f084d7df8f417b80846ded5a\",\n          \"html_url\": \"https://github.com/jquery/jquery/blob/825ac3773694e0cd23ee74895fd5aeb535b27da4/src/attributes/classes.js\",\n          \"repository\": {\n            \"id\": 167174,\n            \"name\": \"jquery\",\n            \"full_name\": \"jquery/jquery\",\n            \"owner\": {\n              \"login\": \"jquery\",\n              \"id\": 70142,\n              \"avatar_url\": \"https://0.gravatar.com/avatar/6906f317a4733f4379b06c32229ef02f?d=https%3A%2F%2Fidenticons.github.com%2Ff426f04f2f9813718fb806b30e0093de.png\",\n              \"gravatar_id\": \"\",\n              \"url\": \"https://api.github.com/users/jquery\",\n              \"html_url\": \"https://github.com/jquery\",\n              \"followers_url\": \"https://api.github.com/users/jquery/followers\",\n              \"following_url\": \"https://api.github.com/users/jquery/following{/other_user}\",\n              \"gists_url\": \"https://api.github.com/users/jquery/gists{/gist_id}\",\n              \"starred_url\": \"https://api.github.com/users/jquery/starred{/owner}{/repo}\",\n              \"subscriptions_url\": \"https://api.github.com/users/jquery/subscriptions\",\n              \"organizations_url\": \"https://api.github.com/users/jquery/orgs\",\n              \"repos_url\": \"https://api.github.com/users/jquery/repos\",\n              \"events_url\": \"https://api.github.com/users/jquery/events{/privacy}\",\n              \"received_events_url\": \"https://api.github.com/users/jquery/received_events\",\n              \"type\": \"Organization\",\n              \"site_admin\": false\n            },\n            \"private\": false,\n            \"html_url\": \"https://github.com/jquery/jquery\",\n            \"description\": \"jQuery JavaScript Library\",\n            \"fork\": false,\n            \"url\": \"https://api.github.com/repos/jquery/jquery\",\n            \"forks_url\": \"https://api.github.com/repos/jquery/jquery/forks\",\n            \"keys_url\": \"https://api.github.com/repos/jquery/jquery/keys{/key_id}\",\n            \"collaborators_url\": \"https://api.github.com/repos/jquery/jquery/collaborators{/collaborator}\",\n            \"teams_url\": \"https://api.github.com/repos/jquery/jquery/teams\",\n            \"hooks_url\": \"https://api.github.com/repos/jquery/jquery/hooks\",\n            \"issue_events_url\": \"https://api.github.com/repos/jquery/jquery/issues/events{/number}\",\n            \"events_url\": \"https://api.github.com/repos/jquery/jquery/events\",\n            \"assignees_url\": \"https://api.github.com/repos/jquery/jquery/assignees{/user}\",\n            \"branches_url\": \"https://api.github.com/repos/jquery/jquery/branches{/branch}\",\n            \"tags_url\": \"https://api.github.com/repos/jquery/jquery/tags\",\n            \"blobs_url\": \"https://api.github.com/repos/jquery/jquery/git/blobs{/sha}\",\n            \"git_tags_url\": \"https://api.github.com/repos/jquery/jquery/git/tags{/sha}\",\n            \"git_refs_url\": \"https://api.github.com/repos/jquery/jquery/git/refs{/sha}\",\n            \"trees_url\": \"https://api.github.com/repos/jquery/jquery/git/trees{/sha}\",\n            \"statuses_url\": \"https://api.github.com/repos/jquery/jquery/statuses/{sha}\",\n            \"languages_url\": \"https://api.github.com/repos/jquery/jquery/languages\",\n            \"stargazers_url\": \"https://api.github.com/repos/jquery/jquery/stargazers\",\n            \"contributors_url\": \"https://api.github.com/repos/jquery/jquery/contributors\",\n            \"subscribers_url\": \"https://api.github.com/repos/jquery/jquery/subscribers\",\n            \"subscription_url\": \"https://api.github.com/repos/jquery/jquery/subscription\",\n            \"commits_url\": \"https://api.github.com/repos/jquery/jquery/commits{/sha}\",\n            \"git_commits_url\": \"https://api.github.com/repos/jquery/jquery/git/commits{/sha}\",\n            \"comments_url\": \"https://api.github.com/repos/jquery/jquery/comments{/number}\",\n            \"issue_comment_url\": \"https://api.github.com/repos/jquery/jquery/issues/comments/{number}\",\n            \"contents_url\": \"https://api.github.com/repos/jquery/jquery/contents/{+path}\",\n            \"compare_url\": \"https://api.github.com/repos/jquery/jquery/compare/{base}...{head}\",\n            \"merges_url\": \"https://api.github.com/repos/jquery/jquery/merges\",\n            \"archive_url\": \"https://api.github.com/repos/jquery/jquery/{archive_format}{/ref}\",\n            \"downloads_url\": \"https://api.github.com/repos/jquery/jquery/downloads\",\n            \"issues_url\": \"https://api.github.com/repos/jquery/jquery/issues{/number}\",\n            \"pulls_url\": \"https://api.github.com/repos/jquery/jquery/pulls{/number}\",\n            \"milestones_url\": \"https://api.github.com/repos/jquery/jquery/milestones{/number}\",\n            \"notifications_url\": \"https://api.github.com/repos/jquery/jquery/notifications{?since,all,participating}\",\n            \"labels_url\": \"https://api.github.com/repos/jquery/jquery/labels{/name}\"\n          },\n          \"score\": 0.5269679\n        }\n      ]\n    }\n    \n\n### [](#highlighting-code-search-results-1)Highlighting code search results\n\nYou might want to highlight the matching search terms when displaying search results. The API offers additional metadata to support this use case. To get this metadata in your search results, specify the `text-match` media type in your `Accept` header. For example, via cURL, the above query would look like this:\n\ncurl -H 'Accept: application/vnd.github.v3.text-match+json' \\\n  https://api.github.com/search/code?q=addClass+in:file+language:js+repo:jquery/jquery\n\nThis produces the same JSON payload as above, with an extra key called `text_matches`, an array of objects. These objects provide information such as the position of your search terms within the text, as well as the `property` that included the search term.\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields. For details on the attributes present in the `text_matches` array, see [text match metadata](#text-match-metadata).\n\nHere's an example response:\n\n    {\n      \"text_matches\": [\n        {\n          \"object_url\": \"https://api.github.com/repositories/167174/contents/src/attributes/classes.js?ref=825ac3773694e0cd23ee74895fd5aeb535b27da4\",\n          \"object_type\": \"FileContent\",\n          \"property\": \"content\",\n          \"fragment\": \";\\n\\njQuery.fn.extend({\\n\\taddClass: function( value ) {\\n\\t\\tvar classes, elem, cur, clazz, j, finalValue\",\n          \"matches\": [\n            {\n              \"text\": \"addClass\",\n              \"indices\": [\n                23,\n                31\n              ]\n            }\n          ]\n        },\n        {\n          \"object_url\": \"https://api.github.com/repositories/167174/contents/src/attributes/classes.js?ref=825ac3773694e0cd23ee74895fd5aeb535b27da4\",\n          \"object_type\": \"FileContent\",\n          \"property\": \"content\",\n          \"fragment\": \".isFunction( value ) ) {\\n\\t\\t\\treturn this.each(function( j ) {\\n\\t\\t\\t\\tjQuery( this ).addClass( value.call( this\",\n          \"matches\": [\n            {\n              \"text\": \"addClass\",\n              \"indices\": [\n                80,\n                88\n              ]\n            }\n          ]\n        }\n      ]\n    }\n    \n\n[](#search-issues)Search issues[](/apps/ \"Enabled for GitHub Apps\")\n-------------------------------------------------------------------\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.symmetra-preview+json\n    \n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nFind issues by state and keyword. This method returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/issues\n    \n\n### [](#parameters-3)Parameters\n\nName\n\nType\n\nDescription\n\n`q`\n\n`string`\n\nThe search terms.\n\n`sort`\n\n`string`\n\nThe sort field. Can be `comments`, `created`, or `updated`. Default: results are sorted by best match.\n\n`order`\n\n`string`\n\nThe sort order if `sort` parameter is provided. One of `asc` or `desc`. Default: `desc`\n\nThe `q` search term can also contain any combination of the supported issue search qualifiers as described by the in-browser [issue search documentation](https://help.github.com/articles/searching-issues/) and [search syntax documentation](https://help.github.com/articles/search-syntax/):\n\n*   [`type`](https://help.github.com/articles/searching-issues#search-issues-or-pull-requests) With this qualifier you can restrict the search to issues (`issue`) or pull request (`pr`) only.\n*   [`in`](https://help.github.com/articles/searching-issues#scope-the-search-fields) Qualifies which fields are searched. With this qualifier you can restrict the search to just the title (`title`), body (`body`), comments (`comments`), or any combination of these.\n*   [`author`](https://help.github.com/articles/searching-issues#search-by-the-author-of-an-issue-or-pull-request) Finds issues or pull requests created by a certain user.\n*   [`assignee`](https://help.github.com/articles/searching-issues#search-by-the-assignee-of-an-issue-or-pull-request) Finds issues or pull requests that are assigned to a certain user.\n*   [`mentions`](https://help.github.com/articles/searching-issues#search-by-a-mentioned-user-within-an-issue-or-pull-request) Finds issues or pull requests that mention a certain user.\n*   [`commenter`](https://help.github.com/articles/searching-issues#search-by-a-commenter-within-an-issue-or-pull-request) Finds issues or pull requests that a certain user commented on.\n*   [`involves`](https://help.github.com/articles/searching-issues#search-by-a-user-thats-involved-within-an-issue-or-pull-request) Finds issues or pull requests that were either created by a certain user, assigned to that user, mention that user, or were commented on by that user.\n*   [`team`](https://help.github.com/articles/searching-issues/#search-by-a-team-thats-mentioned-within-an-issue-or-pull-request) For organizations you're a member of, finds issues or pull requests that @mention a team within the organization.\n*   [`state`](https://help.github.com/articles/searching-issues#search-based-on-whether-an-issue-or-pull-request-is-open) Filter issues or pull requests based on whether they're open or closed.\n*   [`labels`](https://help.github.com/articles/searching-issues#search-by-the-labels-on-an-issue) Filters issues or pull requests based on their labels.\n*   [`no`](https://help.github.com/articles/searching-issues#search-by-missing-metadata-on-an-issue-or-pull-request) Filters items missing certain metadata, such as `label`, `milestone`, or `assignee`\n*   [`language`](https://help.github.com/articles/searching-issues#search-by-the-main-language-of-a-repository) Searches for issues or pull requests within repositories that match a certain language.\n*   [`is`](https://help.github.com/articles/searching-issues#search-based-on-the-state-of-an-issue-or-pull-request) Searches for items within repositories that match a certain state, such as `open`, `closed`, or `merged`\n*   [`created` or `updated`](https://help.github.com/articles/searching-issues#search-based-on-when-an-issue-or-pull-request-was-created-or-last-updated) Filters issues or pull requests based on date of creation, or when they were last updated.\n*   [`merged`](https://help.github.com/articles/searching-issues#search-based-on-when-a-pull-request-was-merged) Filters pull requests based on the date when they were merged.\n*   [`status`](https://help.github.com/articles/searching-issues#search-based-on-commit-status) Filters pull requests based on the commit status.\n*   [`head` or `base`](https://help.github.com/articles/searching-issues#search-based-on-branch-names) Filters pull requests based on the branch that they came from or that they are modifying.\n*   [`closed`](https://help.github.com/articles/searching-issues#search-based-on-when-an-issue-or-pull-request-was-closed) Filters issues or pull requests based on the date when they were closed.\n*   [`comments`](https://help.github.com/articles/searching-issues#search-by-the-number-of-comments-an-issue-or-pull-request-has) Filters issues or pull requests based on the quantity of comments.\n*   [`user` or `repo`](https://help.github.com/articles/searching-issues#search-within-a-users-or-organizations-repositories) Limits searches to a specific user or repository.\n*   [`project`](https://help.github.com/articles/searching-issues/#search-by-project-board) Limits searches to a specific project board in a repository or organization.\n*   [`archived`](https://help.github.com/articles/searching-issues/#search-within-archived-repositories) Filters issues or pull requests based on whether they are in an archived repository.\n\nIf you know the specific SHA hash of a commit, you can use also [use it to search for pull requests](https://help.github.com/articles/searching-issues#search-by-the-commit-shas-within-a-pull-request) that contain that SHA. Note that the SHA syntax must be at least seven characters.\n\n#### [](#example-3)Example\n\nLet's say you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\n    https://api.github.com/search/issues?q=windows+label:bug+language:python+state:open&sort=created&order=asc\n    \n\nIn this query, we're searching for the keyword `windows`, within any open issue that's labeled as `bug`. The search runs across repositories whose primary language is Python. We’re sorting by creation date in ascending order, so that the oldest issues appear first in the search results.\n\n    Status: 200 OK\n    Link: <https://api.github.com/resource?page=2>; rel=\"next\",\n          <https://api.github.com/resource?page=5>; rel=\"last\"\n    X-RateLimit-Limit: 20\n    X-RateLimit-Remaining: 19\n    \n\n    {\n      \"total_count\": 280,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132\",\n          \"repository_url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit\",\n          \"labels_url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/labels{/name}\",\n          \"comments_url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/comments\",\n          \"events_url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/events\",\n          \"html_url\": \"https://github.com/batterseapower/pinyin-toolkit/issues/132\",\n          \"id\": 35802,\n          \"number\": 132,\n          \"title\": \"Line Number Indexes Beyond 20 Not Displayed\",\n          \"user\": {\n            \"login\": \"Nick3C\",\n            \"id\": 90254,\n            \"avatar_url\": \"https://secure.gravatar.com/avatar/934442aadfe3b2f4630510de416c5718?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png\",\n            \"gravatar_id\": \"\",\n            \"url\": \"https://api.github.com/users/Nick3C\",\n            \"html_url\": \"https://github.com/Nick3C\",\n            \"followers_url\": \"https://api.github.com/users/Nick3C/followers\",\n            \"following_url\": \"https://api.github.com/users/Nick3C/following{/other_user}\",\n            \"gists_url\": \"https://api.github.com/users/Nick3C/gists{/gist_id}\",\n            \"starred_url\": \"https://api.github.com/users/Nick3C/starred{/owner}{/repo}\",\n            \"subscriptions_url\": \"https://api.github.com/users/Nick3C/subscriptions\",\n            \"organizations_url\": \"https://api.github.com/users/Nick3C/orgs\",\n            \"repos_url\": \"https://api.github.com/users/Nick3C/repos\",\n            \"events_url\": \"https://api.github.com/users/Nick3C/events{/privacy}\",\n            \"received_events_url\": \"https://api.github.com/users/Nick3C/received_events\",\n            \"type\": \"User\"\n          },\n          \"labels\": [\n            {\n              \"url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/labels/bug\",\n              \"name\": \"bug\",\n              \"color\": \"ff0000\"\n            }\n          ],\n          \"state\": \"open\",\n          \"assignee\": null,\n          \"milestone\": null,\n          \"comments\": 15,\n          \"created_at\": \"2009-07-12T20:10:41Z\",\n          \"updated_at\": \"2009-07-19T09:23:43Z\",\n          \"closed_at\": null,\n          \"pull_request\": {\n            \"html_url\": null,\n            \"diff_url\": null,\n            \"patch_url\": null\n          },\n          \"body\": \"...\",\n          \"score\": 1.3859273\n        }\n      ]\n    }\n    \n\n### [](#highlighting-issue-search-results)Highlighting issue search results\n\nYou might want to highlight the matching search terms when displaying search results. The API offers additional metadata to support this use case. To get this metadata in your search results, specify the `text-match` media type in your `Accept` header. For example, via cURL, the above query would look like this:\n\ncurl -H 'Accept: application/vnd.github.v3.text-match+json' \\\n  'https://api.github.com/search/issues?q=windows+label:bug+language:python+state:open&sort=created&order=asc'\n\nThis produces the same JSON payload as above, with an extra key called `text_matches`, an array of objects. These objects provide information such as the position of your search terms within the text, as well as the `property` that included the search term.\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields. For details on the attributes present in the `text_matches` array, see [text match metadata](#text-match-metadata).\n\nHere's an example response:\n\n    {\n      \"text_matches\": [\n        {\n          \"object_url\": \"https://api.github.com/repositories/215335/issues/132\",\n          \"object_type\": \"Issue\",\n          \"property\": \"body\",\n          \"fragment\": \"comprehensive windows font I know of).\\n\\nIf we can find a commonly distributed windows font that supports them then no problem (we can use html font tags) but otherwise the '(21)' style is probably better.\\n\",\n          \"matches\": [\n            {\n              \"text\": \"windows\",\n              \"indices\": [\n                14,\n                21\n              ]\n            },\n            {\n              \"text\": \"windows\",\n              \"indices\": [\n                78,\n                85\n              ]\n            }\n          ]\n        },\n        {\n          \"object_url\": \"https://api.github.com/repositories/215335/issues/comments/25688\",\n          \"object_type\": \"IssueComment\",\n          \"property\": \"body\",\n          \"fragment\": \" right after that are a bit broken IMHO :). I suppose we could have some hack that maxes out at whatever the font does...\\n\\nI'll check what the state of play is on Windows.\\n\",\n          \"matches\": [\n            {\n              \"text\": \"Windows\",\n              \"indices\": [\n                163,\n                170\n              ]\n            }\n          ]\n        }\n      ]\n    }\n    \n\n[](#search-users)Search users[](/apps/ \"Enabled for GitHub Apps\")\n-----------------------------------------------------------------\n\nFind users via various criteria. This method returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/users\n    \n\n### [](#parameters-4)Parameters\n\nName\n\nType\n\nDescription\n\n`q`\n\n`string`\n\nThe search terms.\n\n`sort`\n\n`string`\n\nThe sort field. Can be `followers`, `repositories`, or `joined`. Default: results are sorted by best match.\n\n`order`\n\n`string`\n\nThe sort order if `sort` parameter is provided. One of `asc` or `desc`. Default: `desc`\n\nThe `q` search term can also contain any combination of the supported user search qualifiers as described by the in-browser [user search documentation](https://help.github.com/articles/searching-users/) and [search syntax documentation](https://help.github.com/articles/search-syntax/):\n\n*   [`type`](https://help.github.com/articles/searching-users#search-for-users-or-organizations) With this qualifier you can restrict the search to just personal accounts (`user`) or just organization accounts (`org`).\n*   [`in`](https://help.github.com/articles/searching-users#scope-the-search-fields) Qualifies which fields are searched. With this qualifier you can restrict the search to just the username (`login`), public email (`email`), full name (`fullname`), or any combination of these.\n*   [`repos`](https://help.github.com/articles/searching-users#search-based-on-the-number-of-repositories-a-user-has) Filters users based on the number of repositories they have.\n*   [`location`](https://help.github.com/articles/searching-users#search-based-on-the-location-where-a-user-resides) Filter users by the location indicated in their profile.\n*   [`language`](https://help.github.com/articles/searching-users#search-based-on-the-languages-of-a-users-repositories) Search for users that have repositories that match a certain language.\n*   [`created`](https://help.github.com/articles/searching-users#search-based-on-when-a-user-joined-github) Filter users based on when they joined.\n*   [`followers`](https://help.github.com/articles/searching-users#search-based-on-the-number-of-followers-a-user-has) Filter users based on the number of followers they have.\n\n#### [](#example-4)Example\n\nImagine you're looking for a list of popular users. You might try out this query:\n\n    https://api.github.com/search/users?q=tom+repos:%3E42+followers:%3E1000\n    \n\nHere, we're looking at users with the name Tom. We're only interested in those with more than 42 repositories, and only if they have over 1,000 followers.\n\n    Status: 200 OK\n    Link: <https://api.github.com/resource?page=2>; rel=\"next\",\n          <https://api.github.com/resource?page=5>; rel=\"last\"\n    X-RateLimit-Limit: 20\n    X-RateLimit-Remaining: 19\n    \n\n    {\n      \"total_count\": 12,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"login\": \"mojombo\",\n          \"id\": 1,\n          \"avatar_url\": \"https://secure.gravatar.com/avatar/25c7c18223fb42a4c6ae1c8db6f50f9b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png\",\n          \"gravatar_id\": \"\",\n          \"url\": \"https://api.github.com/users/mojombo\",\n          \"html_url\": \"https://github.com/mojombo\",\n          \"followers_url\": \"https://api.github.com/users/mojombo/followers\",\n          \"subscriptions_url\": \"https://api.github.com/users/mojombo/subscriptions\",\n          \"organizations_url\": \"https://api.github.com/users/mojombo/orgs\",\n          \"repos_url\": \"https://api.github.com/users/mojombo/repos\",\n          \"received_events_url\": \"https://api.github.com/users/mojombo/received_events\",\n          \"type\": \"User\",\n          \"score\": 105.47857\n        }\n      ]\n    }\n    \n\n### [](#highlighting-user-search-results)Highlighting user search results\n\nYou might want to highlight the matching search terms when displaying search results. The API offers additional metadata to support this use case. To get this metadata in your search results, specify the `text-match` media type in your `Accept` header. For example, via cURL, the above query would look like this:\n\ncurl -H 'Accept: application/vnd.github.v3.text-match+json' \\\n  https://api.github.com/search/users?q=tom+repos:%3E42+followers:%3E1000\n\nThis produces the same JSON payload as above, with an extra key called `text_matches`, an array of objects. These objects provide information such as the position of your search terms within the text, as well as the `property` that included the search term.\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields. For details on the attributes present in the `text_matches` array, see [text match metadata](#text-match-metadata).\n\n    {\n      \"text_matches\": [\n        {\n          \"object_url\": \"https://api.github.com/users/mojombo\",\n          \"object_type\": \"User\",\n          \"property\": \"email\",\n          \"fragment\": \"tom@github.com\",\n          \"matches\": [\n            {\n              \"text\": \"tom\",\n              \"indices\": [\n                0,\n                3\n              ]\n            }\n          ]\n        },\n        {\n          \"object_url\": \"https://api.github.com/users/mojombo\",\n          \"object_type\": \"User\",\n          \"property\": \"name\",\n          \"fragment\": \"Tom Preston-Werner\",\n          \"matches\": [\n            {\n              \"text\": \"Tom\",\n              \"indices\": [\n                0,\n                3\n              ]\n            }\n          ]\n        }\n      ]\n    }\n    \n\n[](#search-topics)Search topics[](/apps/ \"Enabled for GitHub Apps\")\n-------------------------------------------------------------------\n\n**Note:** The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.mercy-preview+json\n    \n\nFind topics via various criteria. This method returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/topics\n    \n\n### [](#parameters-5)Parameters\n\nName\n\nType\n\nDescription\n\n`q`\n\n`string`\n\nThe search terms.\n\nResults are sorted by best match by default.\n\nThe `q` search term can also contain any combination of the supported topic search qualifiers as described by the in-browser [topic search documentation](https://help.github.com/articles/searching-topics/) and [search syntax documentation](https://help.github.com/articles/search-syntax/):\n\n*   `is:curated` Finds topics that have extra information, e.g., a description, display name, or logo, because they have an entry in the [`github/explore` repository](https://github.com/github/explore).\n*   `is:featured` Finds topics listed on [https://github.com/topics](https://github.com/topics). Any featured topic will also be curated.\n*   `is:not-featured` Finds topics not listed on [https://github.com/topics](https://github.com/topics).\n*   `is:not-curated` Finds topics that have no extra information because they haven't been added to the [`github/explore` repository](https://github.com/github/explore).\n*   `repositories:` Finds topics with some number of repositories using them, e.g., `repositories:>1000`.\n\n#### [](#example-5)Example\n\nSuppose you want to search for topics related to Ruby that are featured on [https://github.com/topics](https://github.com/topics). Your query might look like this:\n\ncurl -H 'Accept: application/vnd.github.mercy-preview+json' \\\n  'https://api.github.com/search/topics?q=ruby+is:featured'\n\nIn this request, we're searching for topics with the keyword `ruby`, and we're limiting the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.\n\n**Note:** A search for featured Ruby topics only has 6 total results, so a [Link header](/v3/#link-header) indicating pagination is not included in the response.\n\n    Status: 200 OK\n    X-RateLimit-Limit: 20\n    X-RateLimit-Remaining: 19\n    \n\n    {\n      \"total_count\": 6,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"name\": \"ruby\",\n          \"display_name\": \"Ruby\",\n          \"short_description\": \"Ruby is a scripting language designed for simplified object-oriented programming.\",\n          \"description\": \"Ruby was developed by Yukihiro \\\"Matz\\\" Matsumoto in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python.\",\n          \"created_by\": \"Yukihiro Matsumoto\",\n          \"released\": \"December 21, 1995\",\n          \"created_at\": \"2016-11-28T22:03:59Z\",\n          \"updated_at\": \"2017-10-30T18:16:32Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 1750.5872\n        },\n        {\n          \"name\": \"rails\",\n          \"display_name\": \"Rails\",\n          \"short_description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby.\",\n          \"description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby. It is meant to help simplify the building of complex websites.\",\n          \"created_by\": \"David Heinemeier Hansson\",\n          \"released\": \"December 13 2005\",\n          \"created_at\": \"2016-12-09T17:03:50Z\",\n          \"updated_at\": \"2017-10-30T16:20:19Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 192.49863\n        },\n        {\n          \"name\": \"python\",\n          \"display_name\": \"Python\",\n          \"short_description\": \"Python is a dynamically typed programming language.\",\n          \"description\": \"Python is a dynamically typed programming language designed by Guido Van Rossum. Much like the programming language Ruby, Python was designed to be easily read by programmers. Because of its large following and many libraries, Python can be implemented and used to do anything from webpages to scientific research.\",\n          \"created_by\": \"Guido van Rossum\",\n          \"released\": \"February 20, 1991\",\n          \"created_at\": \"2016-12-07T00:07:02Z\",\n          \"updated_at\": \"2017-10-27T22:45:43Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 111.92691\n        },\n        {\n          \"name\": \"jekyll\",\n          \"display_name\": \"Jekyll\",\n          \"short_description\": \"Jekyll is a simple, blog-aware static site generator.\",\n          \"description\": \"Jekyll is a blog-aware, site generator written in Ruby. It takes raw text files, runs it through a renderer and produces a publishable static website.\",\n          \"created_by\": \"Tom Preston-Werner\",\n          \"released\": \"2008\",\n          \"created_at\": \"2016-12-16T21:53:08Z\",\n          \"updated_at\": \"2017-10-27T19:00:24Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 45.06729\n        },\n        {\n          \"name\": \"sass\",\n          \"display_name\": \"Sass\",\n          \"short_description\": \"Sass is a stable extension to classic CSS.\",\n          \"description\": \"Sass is a stylesheet language with a main implementation in Ruby. It is an extension of CSS that makes improvements to the old stylesheet format, such as being able to declare variables and using a cleaner nesting syntax.\",\n          \"created_by\": \"Hampton Catlin, Natalie Weizenbaum, Chris Eppstein\",\n          \"released\": \"November 28, 2006\",\n          \"created_at\": \"2016-12-16T21:53:45Z\",\n          \"updated_at\": \"2018-01-16T16:30:40Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 42.455986\n        },\n        {\n          \"name\": \"homebrew\",\n          \"display_name\": \"Homebrew\",\n          \"short_description\": \"Homebrew is a package manager for macOS.\",\n          \"description\": \"Homebrew is a package manager for Apple's macOS operating system. It simplifies the installation of software and is popular in the Ruby on Rails community.\",\n          \"created_by\": \"Max Howell\",\n          \"released\": \"2009\",\n          \"created_at\": \"2016-12-17T20:30:44Z\",\n          \"updated_at\": \"2018-02-06T16:14:56Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 19.194168\n        }\n      ]\n    }\n    \n\n### [](#highlighting-topic-search-results)Highlighting topic search results\n\nYou might want to highlight the matching search terms when displaying search results. The API offers additional metadata to support this use case. To get this metadata in your search results, specify the `text-match` media type in your Accept header. For example, via cURL, the above query would look like this:\n\ncurl -H 'Accept: application/vnd.github.v3.text-match+json, application/vnd.github.mercy-preview' \\\n  'https://api.github.com/search/topics?q=ruby+is:featured'\n\nThis produces the same JSON payload as above, with an extra key called `text_matches`, which is an array of objects. These objects provide information such as the position of your search terms within the text, as well as the `property` that included the search term.\n\nWhen searching for topics, you can get text match metadata for the topic's **short_description**, **description**, **name**, or **display_name** field. For details on the attributes present in the `text_matches` array, see [text match metadata](#text-match-metadata).\n\n    {\n      \"total_count\": 6,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"name\": \"ruby\",\n          \"display_name\": \"Ruby\",\n          \"short_description\": \"Ruby is a scripting language designed for simplified object-oriented programming.\",\n          \"description\": \"Ruby was developed by Yukihiro \\\"Matz\\\" Matsumoto in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python.\",\n          \"created_by\": \"Yukihiro Matsumoto\",\n          \"released\": \"December 21, 1995\",\n          \"created_at\": \"2016-11-28T22:03:59Z\",\n          \"updated_at\": \"2017-10-30T18:16:32Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 1750.5697,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:ruby\",\n              \"object_type\": \"Topic\",\n              \"property\": \"short_description\",\n              \"fragment\": \"Ruby is a scripting language designed for simplified object-oriented programming.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                }\n              ]\n            },\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:ruby\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Ruby was developed by Yukihiro \\\"Matz\\\" Matsumoto in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                },\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    201,\n                    205\n                  ]\n                }\n              ]\n            },\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:ruby\",\n              \"object_type\": \"Topic\",\n              \"property\": \"display_name\",\n              \"fragment\": \"Ruby\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                }\n              ]\n            },\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:ruby\",\n              \"object_type\": \"Topic\",\n              \"property\": \"name\",\n              \"fragment\": \"ruby\",\n              \"matches\": [\n                {\n                  \"text\": \"ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"rails\",\n          \"display_name\": \"Rails\",\n          \"short_description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby.\",\n          \"description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby. It is meant to help simplify the building of complex websites.\",\n          \"created_by\": \"David Heinemeier Hansson\",\n          \"released\": \"December 13 2005\",\n          \"created_at\": \"2016-12-09T17:03:50Z\",\n          \"updated_at\": \"2017-10-30T16:20:19Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 192.49652,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:rails\",\n              \"object_type\": \"Topic\",\n              \"property\": \"short_description\",\n              \"fragment\": \"Ruby on Rails (Rails) is a web application framework written in Ruby.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                },\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    64,\n                    68\n                  ]\n                }\n              ]\n            },\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:rails\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Ruby on Rails (Rails) is a web application framework written in Ruby. It is meant to help simplify the building of complex websites.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                },\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    64,\n                    68\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"python\",\n          \"display_name\": \"Python\",\n          \"short_description\": \"Python is a dynamically typed programming language.\",\n          \"description\": \"Python is a dynamically typed programming language designed by Guido Van Rossum. Much like the programming language Ruby, Python was designed to be easily read by programmers. Because of its large following and many libraries, Python can be implemented and used to do anything from webpages to scientific research.\",\n          \"created_by\": \"Guido van Rossum\",\n          \"released\": \"February 20, 1991\",\n          \"created_at\": \"2016-12-07T00:07:02Z\",\n          \"updated_at\": \"2017-10-27T22:45:43Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 112.94006,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:python\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Python is a dynamically typed programming language designed by Guido Van Rossum. Much like the programming language Ruby, Python was designed to be easily read by programmers. Because of its large\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    116,\n                    120\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"jekyll\",\n          \"display_name\": \"Jekyll\",\n          \"short_description\": \"Jekyll is a simple, blog-aware static site generator.\",\n          \"description\": \"Jekyll is a blog-aware, site generator written in Ruby. It takes raw text files, runs it through a renderer and produces a publishable static website.\",\n          \"created_by\": \"Tom Preston-Werner\",\n          \"released\": \"2008\",\n          \"created_at\": \"2016-12-16T21:53:08Z\",\n          \"updated_at\": \"2017-10-27T19:00:24Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 45.475624,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:jekyll\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Jekyll is a blog-aware, site generator written in Ruby. It takes raw text files, runs it through a renderer and produces a publishable static website.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    50,\n                    54\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"sass\",\n          \"display_name\": \"Sass\",\n          \"short_description\": \"Sass is a stable extension to classic CSS.\",\n          \"description\": \"Sass is a stylesheet language with a main implementation in Ruby. It is an extension of CSS that makes improvements to the old stylesheet format, such as being able to declare variables and using a cleaner nesting syntax.\",\n          \"created_by\": \"Hampton Catlin, Natalie Weizenbaum, Chris Eppstein\",\n          \"released\": \"November 28, 2006\",\n          \"created_at\": \"2016-12-16T21:53:45Z\",\n          \"updated_at\": \"2018-01-16T16:30:40Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 42.83278,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:sass\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Sass is a stylesheet language with a main implementation in Ruby. It is an extension of CSS that makes improvements to the old stylesheet format, such as being able to declare variables and using a cleaner nesting syntax.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    60,\n                    64\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"homebrew\",\n          \"display_name\": \"Homebrew\",\n          \"short_description\": \"Homebrew is a package manager for macOS.\",\n          \"description\": \"Homebrew is a package manager for Apple's macOS operating system. It simplifies the installation of software and is popular in the Ruby on Rails community.\",\n          \"created_by\": \"Max Howell\",\n          \"released\": \"2009\",\n          \"created_at\": \"2016-12-17T20:30:44Z\",\n          \"updated_at\": \"2018-02-06T16:14:56Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 19.368078,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:homebrew\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Homebrew is a package manager for Apple's macOS operating system. It simplifies the installation of software and is popular in the Ruby on Rails community.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    131,\n                    135\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n    \n\n[](#search-labels)Search labels[](/apps/ \"Enabled for GitHub Apps\")\n-------------------------------------------------------------------\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.symmetra-preview+json\n    \n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nFind labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/labels\n    \n\n### [](#parameters-6)Parameters\n\nName\n\nType\n\nDescription\n\n`repository_id`\n\n`integer`\n\nThe id of the repository.\n\n`q`\n\n`string`\n\nThe search keywords.\n\n`sort`\n\n`string`\n\nThe sort field. Can be one of `created` or `updated`. Default: results are sorted by best match.\n\n`order`\n\n`string`\n\nThe sort order if the sort parameter is provided. Can be one of `asc` or `desc`. Default: `desc`\n\n#### [](#example-6)Example\n\nSuppose you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\ncurl -H 'Accept: application/vnd.github.symmetra-preview+json' \\\n  'https://api.github.com/search/labels?repository_id=64778136&q=bug+defect+enhancement'\n\nThe labels that best match for the query appear first in the search results.\n\n    Status: 200 OK\n    \n\n    {\n      \"total_count\": 2,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"id\": 418327088,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n          \"name\": \"enhancement\",\n          \"color\": \"84b6eb\",\n          \"default\": true,\n          \"description\": \"New feature or request.\",\n          \"score\": 0.1193385\n        },\n        {\n          \"id\": 418327086,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n          \"name\": \"bug\",\n          \"color\": \"ee0701\",\n          \"default\": true,\n          \"description\": \"Something isn't working.\",\n          \"score\": 0.11928606\n        }\n      ]\n    }\n    \n\n### [](#highlighting-label-search-results)Highlighting label search results\n\nYou might want to highlight the matching search terms when displaying search results. The API offers additional metadata to support this use case. To get this metadata in your search results, specify the `text-match` media type in your `Accept` header. For example, via cURL, the above query would look like this:\n\ncurl -H 'Accept: application/vnd.github.symmetra-preview+json, \\\n application/vnd.github.v3.text-match+json' \\\n  'https://api.github.com/search/labels?repository_id=64778136&q=bug+defect+enhancement'\n\nThis produces the same JSON payload as above, with an extra key called `text_matches`, an array of objects. These objects provide information such as the position of your search terms within the text, as well as the `property` that included the search term.\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields. For details on the attributes present in the `text_matches` array, see [text match metadata](#text-match-metadata).\n\n    {\n      \"total_count\": 2,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"id\": 418327088,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n          \"name\": \"enhancement\",\n          \"color\": \"84b6eb\",\n          \"default\": true,\n          \"description\": \"New feature or request.\",\n          \"score\": 0.119338505,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n              \"object_type\": \"Label\",\n              \"property\": \"name\",\n              \"fragment\": \"enhancement\",\n              \"matches\": [\n                {\n                  \"text\": \"enhancement\",\n                  \"indices\": [\n                    0,\n                    11\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"id\": 418327086,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n          \"name\": \"bug\",\n          \"color\": \"ee0701\",\n          \"default\": true,\n          \"description\": \"Something isn't working.\",\n          \"score\": 0.119286075,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n              \"object_type\": \"Label\",\n              \"property\": \"name\",\n              \"fragment\": \"bug\",\n              \"matches\": [\n                {\n                  \"text\": \"bug\",\n                  \"indices\": [\n                    0,\n                    3\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n    \n\n[](#text-match-metadata)Text match metadata\n-------------------------------------------\n\nOn github.com, we enjoy the context provided by code snippets and highlights in search results.\n\n[![code-snippet-highlighting](https://f.cloud.github.com/assets/865/819651/959a4826-efb5-11e2-8af8-46c4a3857cdf.png)](https://f.cloud.github.com/assets/865/819651/959a4826-efb5-11e2-8af8-46c4a3857cdf.png)\n\nAPI consumers have access to that information as well. Requests can opt to receive those text fragments in the response, and every fragment is accompanied by numeric offsets identifying the exact location of each matching search term.\n\nTo get this metadata in your search results, specify the `text-match` media type in your `Accept` header.\n\n    application/vnd.github.v3.text-match+json\n    \n\nThe results will provide the same JSON payloads as shown above, with an extra key called `text_matches`. Inside the `text_matches` array, each object includes the following attributes:\n\nName\n\nDescription\n\n`object_url`\n\nThe URL for the resource that contains a string property matching one of the search terms.\n\n`object_type`\n\nThe name for the type of resource that exists at the given `object_url`.\n\n`property`\n\nThe name of a property of the resource that exists at `object_url`. That property is a string that matches one of the search terms. (In the JSON returned from `object_url`, the full content for the `fragment` will be found in the property with this name.)\n\n`fragment`\n\nA subset of the value of `property`. This is the text fragment that matches one or more of the search terms.\n\n`matches`\n\nAn array of one or more search terms that are present in `fragment`. The indices (i.e., \"offsets\") are relative to the fragment. (They are not relative to the _full_ content of `property`.)\n\n### [](#example-7)Example\n\nUsing cURL, and the [example issue search](#search-issues) above, our API request would look like this:\n\ncurl -H 'Accept: application/vnd.github.v3.text-match+json' \\\n  'https://api.github.com/search/issues?q=windows+label:bug+language:python+state:open&sort=created&order=asc'\n\nThe response will include a `text_matches` array for each search result. In the JSON below, we have two objects in the `text_matches` array.\n\nThe first text match occurred in the `body` property of the issue. We see a fragment of text from the issue body. The search term (`windows`) appears twice within that fragment, and we have the indices for each occurrence.\n\nThe second text match occurred in the `body` property of one of the issue's comments. We have the URL for the issue comment. And of course, we see a fragment of text from the comment body. The search term (`windows`) appears once within that fragment.\n\n    {\n      \"text_matches\": [\n        {\n          \"object_url\": \"https://api.github.com/repositories/215335/issues/132\",\n          \"object_type\": \"Issue\",\n          \"property\": \"body\",\n          \"fragment\": \"comprehensive windows font I know of).\\n\\nIf we can find a commonly distributed windows font that supports them then no problem (we can use html font tags) but otherwise the '(21)' style is probably better.\\n\",\n          \"matches\": [\n            {\n              \"text\": \"windows\",\n              \"indices\": [\n                14,\n                21\n              ]\n            },\n            {\n              \"text\": \"windows\",\n              \"indices\": [\n                78,\n                85\n              ]\n            }\n          ]\n        },\n        {\n          \"object_url\": \"https://api.github.com/repositories/215335/issues/comments/25688\",\n          \"object_type\": \"IssueComment\",\n          \"property\": \"body\",\n          \"fragment\": \" right after that are a bit broken IMHO :). I suppose we could have some hack that maxes out at whatever the font does...\\n\\nI'll check what the state of play is on Windows.\\n\",\n          \"matches\": [\n            {\n              \"text\": \"Windows\",\n              \"indices\": [\n                163,\n                170\n              ]\n            }\n          ]\n        }\n      ]\n    }",
    "params": [
      {
        "name": "q",
        "type": "string",
        "description": "The search terms."
      },
      {
        "name": "sort",
        "type": "string",
        "description": "The sort field. Can be `author-date` or `committer-date`.",
        "default": "results are sorted by best match."
      },
      {
        "name": "order",
        "type": "string",
        "description": "The sort order if `sort` parameter is provided. One of `asc` or `desc`.",
        "default": "desc"
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/search/#search-commits"
  },
  {
    "name": "Search code",
    "method": "GET",
    "path": "/search/code",
    "description": "Find file contents via various criteria. This method returns up to 100 results [per page](/v3/#pagination).",
    "params": [
      {
        "name": "q",
        "type": "string",
        "description": "The search terms."
      },
      {
        "name": "sort",
        "type": "string",
        "description": "The sort field. Can only be `indexed`, which indicates how recently a file has been indexed by the GitHub search infrastructure.",
        "default": "results are sorted by best match."
      },
      {
        "name": "order",
        "type": "string",
        "description": "The sort order if `sort` parameter is provided. One of `asc` or `desc`.",
        "default": "desc"
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/search/#search-code"
  },
  {
    "name": "Search issues",
    "method": "GET",
    "path": "/search/issues",
    "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.symmetra-preview+json\n    \n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nFind issues by state and keyword. This method returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/issues\n    \n\n### [](#parameters-3)Parameters\n\nName\n\nType\n\nDescription\n\n`q`\n\n`string`\n\nThe search terms.\n\n`sort`\n\n`string`\n\nThe sort field. Can be `comments`, `created`, or `updated`. Default: results are sorted by best match.\n\n`order`\n\n`string`\n\nThe sort order if `sort` parameter is provided. One of `asc` or `desc`. Default: `desc`\n\nThe `q` search term can also contain any combination of the supported issue search qualifiers as described by the in-browser [issue search documentation](https://help.github.com/articles/searching-issues/) and [search syntax documentation](https://help.github.com/articles/search-syntax/):\n\n*   [`type`](https://help.github.com/articles/searching-issues#search-issues-or-pull-requests) With this qualifier you can restrict the search to issues (`issue`) or pull request (`pr`) only.\n*   [`in`](https://help.github.com/articles/searching-issues#scope-the-search-fields) Qualifies which fields are searched. With this qualifier you can restrict the search to just the title (`title`), body (`body`), comments (`comments`), or any combination of these.\n*   [`author`](https://help.github.com/articles/searching-issues#search-by-the-author-of-an-issue-or-pull-request) Finds issues or pull requests created by a certain user.\n*   [`assignee`](https://help.github.com/articles/searching-issues#search-by-the-assignee-of-an-issue-or-pull-request) Finds issues or pull requests that are assigned to a certain user.\n*   [`mentions`](https://help.github.com/articles/searching-issues#search-by-a-mentioned-user-within-an-issue-or-pull-request) Finds issues or pull requests that mention a certain user.\n*   [`commenter`](https://help.github.com/articles/searching-issues#search-by-a-commenter-within-an-issue-or-pull-request) Finds issues or pull requests that a certain user commented on.\n*   [`involves`](https://help.github.com/articles/searching-issues#search-by-a-user-thats-involved-within-an-issue-or-pull-request) Finds issues or pull requests that were either created by a certain user, assigned to that user, mention that user, or were commented on by that user.\n*   [`team`](https://help.github.com/articles/searching-issues/#search-by-a-team-thats-mentioned-within-an-issue-or-pull-request) For organizations you're a member of, finds issues or pull requests that @mention a team within the organization.\n*   [`state`](https://help.github.com/articles/searching-issues#search-based-on-whether-an-issue-or-pull-request-is-open) Filter issues or pull requests based on whether they're open or closed.\n*   [`labels`](https://help.github.com/articles/searching-issues#search-by-the-labels-on-an-issue) Filters issues or pull requests based on their labels.\n*   [`no`](https://help.github.com/articles/searching-issues#search-by-missing-metadata-on-an-issue-or-pull-request) Filters items missing certain metadata, such as `label`, `milestone`, or `assignee`\n*   [`language`](https://help.github.com/articles/searching-issues#search-by-the-main-language-of-a-repository) Searches for issues or pull requests within repositories that match a certain language.\n*   [`is`](https://help.github.com/articles/searching-issues#search-based-on-the-state-of-an-issue-or-pull-request) Searches for items within repositories that match a certain state, such as `open`, `closed`, or `merged`\n*   [`created` or `updated`](https://help.github.com/articles/searching-issues#search-based-on-when-an-issue-or-pull-request-was-created-or-last-updated) Filters issues or pull requests based on date of creation, or when they were last updated.\n*   [`merged`](https://help.github.com/articles/searching-issues#search-based-on-when-a-pull-request-was-merged) Filters pull requests based on the date when they were merged.\n*   [`status`](https://help.github.com/articles/searching-issues#search-based-on-commit-status) Filters pull requests based on the commit status.\n*   [`head` or `base`](https://help.github.com/articles/searching-issues#search-based-on-branch-names) Filters pull requests based on the branch that they came from or that they are modifying.\n*   [`closed`](https://help.github.com/articles/searching-issues#search-based-on-when-an-issue-or-pull-request-was-closed) Filters issues or pull requests based on the date when they were closed.\n*   [`comments`](https://help.github.com/articles/searching-issues#search-by-the-number-of-comments-an-issue-or-pull-request-has) Filters issues or pull requests based on the quantity of comments.\n*   [`user` or `repo`](https://help.github.com/articles/searching-issues#search-within-a-users-or-organizations-repositories) Limits searches to a specific user or repository.\n*   [`project`](https://help.github.com/articles/searching-issues/#search-by-project-board) Limits searches to a specific project board in a repository or organization.\n*   [`archived`](https://help.github.com/articles/searching-issues/#search-within-archived-repositories) Filters issues or pull requests based on whether they are in an archived repository.\n\nIf you know the specific SHA hash of a commit, you can use also [use it to search for pull requests](https://help.github.com/articles/searching-issues#search-by-the-commit-shas-within-a-pull-request) that contain that SHA. Note that the SHA syntax must be at least seven characters.\n\n#### [](#example-3)Example\n\nLet's say you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\n    https://api.github.com/search/issues?q=windows+label:bug+language:python+state:open&sort=created&order=asc\n    \n\nIn this query, we're searching for the keyword `windows`, within any open issue that's labeled as `bug`. The search runs across repositories whose primary language is Python. We’re sorting by creation date in ascending order, so that the oldest issues appear first in the search results.\n\n    Status: 200 OK\n    Link: <https://api.github.com/resource?page=2>; rel=\"next\",\n          <https://api.github.com/resource?page=5>; rel=\"last\"\n    X-RateLimit-Limit: 20\n    X-RateLimit-Remaining: 19\n    \n\n    {\n      \"total_count\": 280,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132\",\n          \"repository_url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit\",\n          \"labels_url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/labels{/name}\",\n          \"comments_url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/comments\",\n          \"events_url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/events\",\n          \"html_url\": \"https://github.com/batterseapower/pinyin-toolkit/issues/132\",\n          \"id\": 35802,\n          \"number\": 132,\n          \"title\": \"Line Number Indexes Beyond 20 Not Displayed\",\n          \"user\": {\n            \"login\": \"Nick3C\",\n            \"id\": 90254,\n            \"avatar_url\": \"https://secure.gravatar.com/avatar/934442aadfe3b2f4630510de416c5718?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png\",\n            \"gravatar_id\": \"\",\n            \"url\": \"https://api.github.com/users/Nick3C\",\n            \"html_url\": \"https://github.com/Nick3C\",\n            \"followers_url\": \"https://api.github.com/users/Nick3C/followers\",\n            \"following_url\": \"https://api.github.com/users/Nick3C/following{/other_user}\",\n            \"gists_url\": \"https://api.github.com/users/Nick3C/gists{/gist_id}\",\n            \"starred_url\": \"https://api.github.com/users/Nick3C/starred{/owner}{/repo}\",\n            \"subscriptions_url\": \"https://api.github.com/users/Nick3C/subscriptions\",\n            \"organizations_url\": \"https://api.github.com/users/Nick3C/orgs\",\n            \"repos_url\": \"https://api.github.com/users/Nick3C/repos\",\n            \"events_url\": \"https://api.github.com/users/Nick3C/events{/privacy}\",\n            \"received_events_url\": \"https://api.github.com/users/Nick3C/received_events\",\n            \"type\": \"User\"\n          },\n          \"labels\": [\n            {\n              \"url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/labels/bug\",\n              \"name\": \"bug\",\n              \"color\": \"ff0000\"\n            }\n          ],\n          \"state\": \"open\",\n          \"assignee\": null,\n          \"milestone\": null,\n          \"comments\": 15,\n          \"created_at\": \"2009-07-12T20:10:41Z\",\n          \"updated_at\": \"2009-07-19T09:23:43Z\",\n          \"closed_at\": null,\n          \"pull_request\": {\n            \"html_url\": null,\n            \"diff_url\": null,\n            \"patch_url\": null\n          },\n          \"body\": \"...\",\n          \"score\": 1.3859273\n        }\n      ]\n    }\n    \n\n### [](#highlighting-issue-search-results)Highlighting issue search results\n\nYou might want to highlight the matching search terms when displaying search results. The API offers additional metadata to support this use case. To get this metadata in your search results, specify the `text-match` media type in your `Accept` header. For example, via cURL, the above query would look like this:\n\ncurl -H 'Accept: application/vnd.github.v3.text-match+json' \\\n  'https://api.github.com/search/issues?q=windows+label:bug+language:python+state:open&sort=created&order=asc'\n\nThis produces the same JSON payload as above, with an extra key called `text_matches`, an array of objects. These objects provide information such as the position of your search terms within the text, as well as the `property` that included the search term.\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields. For details on the attributes present in the `text_matches` array, see [text match metadata](#text-match-metadata).\n\nHere's an example response:\n\n    {\n      \"text_matches\": [\n        {\n          \"object_url\": \"https://api.github.com/repositories/215335/issues/132\",\n          \"object_type\": \"Issue\",\n          \"property\": \"body\",\n          \"fragment\": \"comprehensive windows font I know of).\\n\\nIf we can find a commonly distributed windows font that supports them then no problem (we can use html font tags) but otherwise the '(21)' style is probably better.\\n\",\n          \"matches\": [\n            {\n              \"text\": \"windows\",\n              \"indices\": [\n                14,\n                21\n              ]\n            },\n            {\n              \"text\": \"windows\",\n              \"indices\": [\n                78,\n                85\n              ]\n            }\n          ]\n        },\n        {\n          \"object_url\": \"https://api.github.com/repositories/215335/issues/comments/25688\",\n          \"object_type\": \"IssueComment\",\n          \"property\": \"body\",\n          \"fragment\": \" right after that are a bit broken IMHO :). I suppose we could have some hack that maxes out at whatever the font does...\\n\\nI'll check what the state of play is on Windows.\\n\",\n          \"matches\": [\n            {\n              \"text\": \"Windows\",\n              \"indices\": [\n                163,\n                170\n              ]\n            }\n          ]\n        }\n      ]\n    }\n    \n\n[](#search-users)Search users[](/apps/ \"Enabled for GitHub Apps\")\n-----------------------------------------------------------------\n\nFind users via various criteria. This method returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/users\n    \n\n### [](#parameters-4)Parameters\n\nName\n\nType\n\nDescription\n\n`q`\n\n`string`\n\nThe search terms.\n\n`sort`\n\n`string`\n\nThe sort field. Can be `followers`, `repositories`, or `joined`. Default: results are sorted by best match.\n\n`order`\n\n`string`\n\nThe sort order if `sort` parameter is provided. One of `asc` or `desc`. Default: `desc`\n\nThe `q` search term can also contain any combination of the supported user search qualifiers as described by the in-browser [user search documentation](https://help.github.com/articles/searching-users/) and [search syntax documentation](https://help.github.com/articles/search-syntax/):\n\n*   [`type`](https://help.github.com/articles/searching-users#search-for-users-or-organizations) With this qualifier you can restrict the search to just personal accounts (`user`) or just organization accounts (`org`).\n*   [`in`](https://help.github.com/articles/searching-users#scope-the-search-fields) Qualifies which fields are searched. With this qualifier you can restrict the search to just the username (`login`), public email (`email`), full name (`fullname`), or any combination of these.\n*   [`repos`](https://help.github.com/articles/searching-users#search-based-on-the-number-of-repositories-a-user-has) Filters users based on the number of repositories they have.\n*   [`location`](https://help.github.com/articles/searching-users#search-based-on-the-location-where-a-user-resides) Filter users by the location indicated in their profile.\n*   [`language`](https://help.github.com/articles/searching-users#search-based-on-the-languages-of-a-users-repositories) Search for users that have repositories that match a certain language.\n*   [`created`](https://help.github.com/articles/searching-users#search-based-on-when-a-user-joined-github) Filter users based on when they joined.\n*   [`followers`](https://help.github.com/articles/searching-users#search-based-on-the-number-of-followers-a-user-has) Filter users based on the number of followers they have.\n\n#### [](#example-4)Example\n\nImagine you're looking for a list of popular users. You might try out this query:\n\n    https://api.github.com/search/users?q=tom+repos:%3E42+followers:%3E1000\n    \n\nHere, we're looking at users with the name Tom. We're only interested in those with more than 42 repositories, and only if they have over 1,000 followers.\n\n    Status: 200 OK\n    Link: <https://api.github.com/resource?page=2>; rel=\"next\",\n          <https://api.github.com/resource?page=5>; rel=\"last\"\n    X-RateLimit-Limit: 20\n    X-RateLimit-Remaining: 19\n    \n\n    {\n      \"total_count\": 12,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"login\": \"mojombo\",\n          \"id\": 1,\n          \"avatar_url\": \"https://secure.gravatar.com/avatar/25c7c18223fb42a4c6ae1c8db6f50f9b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png\",\n          \"gravatar_id\": \"\",\n          \"url\": \"https://api.github.com/users/mojombo\",\n          \"html_url\": \"https://github.com/mojombo\",\n          \"followers_url\": \"https://api.github.com/users/mojombo/followers\",\n          \"subscriptions_url\": \"https://api.github.com/users/mojombo/subscriptions\",\n          \"organizations_url\": \"https://api.github.com/users/mojombo/orgs\",\n          \"repos_url\": \"https://api.github.com/users/mojombo/repos\",\n          \"received_events_url\": \"https://api.github.com/users/mojombo/received_events\",\n          \"type\": \"User\",\n          \"score\": 105.47857\n        }\n      ]\n    }\n    \n\n### [](#highlighting-user-search-results)Highlighting user search results\n\nYou might want to highlight the matching search terms when displaying search results. The API offers additional metadata to support this use case. To get this metadata in your search results, specify the `text-match` media type in your `Accept` header. For example, via cURL, the above query would look like this:\n\ncurl -H 'Accept: application/vnd.github.v3.text-match+json' \\\n  https://api.github.com/search/users?q=tom+repos:%3E42+followers:%3E1000\n\nThis produces the same JSON payload as above, with an extra key called `text_matches`, an array of objects. These objects provide information such as the position of your search terms within the text, as well as the `property` that included the search term.\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields. For details on the attributes present in the `text_matches` array, see [text match metadata](#text-match-metadata).\n\n    {\n      \"text_matches\": [\n        {\n          \"object_url\": \"https://api.github.com/users/mojombo\",\n          \"object_type\": \"User\",\n          \"property\": \"email\",\n          \"fragment\": \"tom@github.com\",\n          \"matches\": [\n            {\n              \"text\": \"tom\",\n              \"indices\": [\n                0,\n                3\n              ]\n            }\n          ]\n        },\n        {\n          \"object_url\": \"https://api.github.com/users/mojombo\",\n          \"object_type\": \"User\",\n          \"property\": \"name\",\n          \"fragment\": \"Tom Preston-Werner\",\n          \"matches\": [\n            {\n              \"text\": \"Tom\",\n              \"indices\": [\n                0,\n                3\n              ]\n            }\n          ]\n        }\n      ]\n    }\n    \n\n[](#search-topics)Search topics[](/apps/ \"Enabled for GitHub Apps\")\n-------------------------------------------------------------------\n\n**Note:** The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.mercy-preview+json\n    \n\nFind topics via various criteria. This method returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/topics\n    \n\n### [](#parameters-5)Parameters\n\nName\n\nType\n\nDescription\n\n`q`\n\n`string`\n\nThe search terms.\n\nResults are sorted by best match by default.\n\nThe `q` search term can also contain any combination of the supported topic search qualifiers as described by the in-browser [topic search documentation](https://help.github.com/articles/searching-topics/) and [search syntax documentation](https://help.github.com/articles/search-syntax/):\n\n*   `is:curated` Finds topics that have extra information, e.g., a description, display name, or logo, because they have an entry in the [`github/explore` repository](https://github.com/github/explore).\n*   `is:featured` Finds topics listed on [https://github.com/topics](https://github.com/topics). Any featured topic will also be curated.\n*   `is:not-featured` Finds topics not listed on [https://github.com/topics](https://github.com/topics).\n*   `is:not-curated` Finds topics that have no extra information because they haven't been added to the [`github/explore` repository](https://github.com/github/explore).\n*   `repositories:` Finds topics with some number of repositories using them, e.g., `repositories:>1000`.\n\n#### [](#example-5)Example\n\nSuppose you want to search for topics related to Ruby that are featured on [https://github.com/topics](https://github.com/topics). Your query might look like this:\n\ncurl -H 'Accept: application/vnd.github.mercy-preview+json' \\\n  'https://api.github.com/search/topics?q=ruby+is:featured'\n\nIn this request, we're searching for topics with the keyword `ruby`, and we're limiting the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.\n\n**Note:** A search for featured Ruby topics only has 6 total results, so a [Link header](/v3/#link-header) indicating pagination is not included in the response.\n\n    Status: 200 OK\n    X-RateLimit-Limit: 20\n    X-RateLimit-Remaining: 19\n    \n\n    {\n      \"total_count\": 6,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"name\": \"ruby\",\n          \"display_name\": \"Ruby\",\n          \"short_description\": \"Ruby is a scripting language designed for simplified object-oriented programming.\",\n          \"description\": \"Ruby was developed by Yukihiro \\\"Matz\\\" Matsumoto in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python.\",\n          \"created_by\": \"Yukihiro Matsumoto\",\n          \"released\": \"December 21, 1995\",\n          \"created_at\": \"2016-11-28T22:03:59Z\",\n          \"updated_at\": \"2017-10-30T18:16:32Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 1750.5872\n        },\n        {\n          \"name\": \"rails\",\n          \"display_name\": \"Rails\",\n          \"short_description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby.\",\n          \"description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby. It is meant to help simplify the building of complex websites.\",\n          \"created_by\": \"David Heinemeier Hansson\",\n          \"released\": \"December 13 2005\",\n          \"created_at\": \"2016-12-09T17:03:50Z\",\n          \"updated_at\": \"2017-10-30T16:20:19Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 192.49863\n        },\n        {\n          \"name\": \"python\",\n          \"display_name\": \"Python\",\n          \"short_description\": \"Python is a dynamically typed programming language.\",\n          \"description\": \"Python is a dynamically typed programming language designed by Guido Van Rossum. Much like the programming language Ruby, Python was designed to be easily read by programmers. Because of its large following and many libraries, Python can be implemented and used to do anything from webpages to scientific research.\",\n          \"created_by\": \"Guido van Rossum\",\n          \"released\": \"February 20, 1991\",\n          \"created_at\": \"2016-12-07T00:07:02Z\",\n          \"updated_at\": \"2017-10-27T22:45:43Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 111.92691\n        },\n        {\n          \"name\": \"jekyll\",\n          \"display_name\": \"Jekyll\",\n          \"short_description\": \"Jekyll is a simple, blog-aware static site generator.\",\n          \"description\": \"Jekyll is a blog-aware, site generator written in Ruby. It takes raw text files, runs it through a renderer and produces a publishable static website.\",\n          \"created_by\": \"Tom Preston-Werner\",\n          \"released\": \"2008\",\n          \"created_at\": \"2016-12-16T21:53:08Z\",\n          \"updated_at\": \"2017-10-27T19:00:24Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 45.06729\n        },\n        {\n          \"name\": \"sass\",\n          \"display_name\": \"Sass\",\n          \"short_description\": \"Sass is a stable extension to classic CSS.\",\n          \"description\": \"Sass is a stylesheet language with a main implementation in Ruby. It is an extension of CSS that makes improvements to the old stylesheet format, such as being able to declare variables and using a cleaner nesting syntax.\",\n          \"created_by\": \"Hampton Catlin, Natalie Weizenbaum, Chris Eppstein\",\n          \"released\": \"November 28, 2006\",\n          \"created_at\": \"2016-12-16T21:53:45Z\",\n          \"updated_at\": \"2018-01-16T16:30:40Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 42.455986\n        },\n        {\n          \"name\": \"homebrew\",\n          \"display_name\": \"Homebrew\",\n          \"short_description\": \"Homebrew is a package manager for macOS.\",\n          \"description\": \"Homebrew is a package manager for Apple's macOS operating system. It simplifies the installation of software and is popular in the Ruby on Rails community.\",\n          \"created_by\": \"Max Howell\",\n          \"released\": \"2009\",\n          \"created_at\": \"2016-12-17T20:30:44Z\",\n          \"updated_at\": \"2018-02-06T16:14:56Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 19.194168\n        }\n      ]\n    }\n    \n\n### [](#highlighting-topic-search-results)Highlighting topic search results\n\nYou might want to highlight the matching search terms when displaying search results. The API offers additional metadata to support this use case. To get this metadata in your search results, specify the `text-match` media type in your Accept header. For example, via cURL, the above query would look like this:\n\ncurl -H 'Accept: application/vnd.github.v3.text-match+json, application/vnd.github.mercy-preview' \\\n  'https://api.github.com/search/topics?q=ruby+is:featured'\n\nThis produces the same JSON payload as above, with an extra key called `text_matches`, which is an array of objects. These objects provide information such as the position of your search terms within the text, as well as the `property` that included the search term.\n\nWhen searching for topics, you can get text match metadata for the topic's **short_description**, **description**, **name**, or **display_name** field. For details on the attributes present in the `text_matches` array, see [text match metadata](#text-match-metadata).\n\n    {\n      \"total_count\": 6,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"name\": \"ruby\",\n          \"display_name\": \"Ruby\",\n          \"short_description\": \"Ruby is a scripting language designed for simplified object-oriented programming.\",\n          \"description\": \"Ruby was developed by Yukihiro \\\"Matz\\\" Matsumoto in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python.\",\n          \"created_by\": \"Yukihiro Matsumoto\",\n          \"released\": \"December 21, 1995\",\n          \"created_at\": \"2016-11-28T22:03:59Z\",\n          \"updated_at\": \"2017-10-30T18:16:32Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 1750.5697,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:ruby\",\n              \"object_type\": \"Topic\",\n              \"property\": \"short_description\",\n              \"fragment\": \"Ruby is a scripting language designed for simplified object-oriented programming.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                }\n              ]\n            },\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:ruby\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Ruby was developed by Yukihiro \\\"Matz\\\" Matsumoto in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                },\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    201,\n                    205\n                  ]\n                }\n              ]\n            },\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:ruby\",\n              \"object_type\": \"Topic\",\n              \"property\": \"display_name\",\n              \"fragment\": \"Ruby\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                }\n              ]\n            },\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:ruby\",\n              \"object_type\": \"Topic\",\n              \"property\": \"name\",\n              \"fragment\": \"ruby\",\n              \"matches\": [\n                {\n                  \"text\": \"ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"rails\",\n          \"display_name\": \"Rails\",\n          \"short_description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby.\",\n          \"description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby. It is meant to help simplify the building of complex websites.\",\n          \"created_by\": \"David Heinemeier Hansson\",\n          \"released\": \"December 13 2005\",\n          \"created_at\": \"2016-12-09T17:03:50Z\",\n          \"updated_at\": \"2017-10-30T16:20:19Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 192.49652,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:rails\",\n              \"object_type\": \"Topic\",\n              \"property\": \"short_description\",\n              \"fragment\": \"Ruby on Rails (Rails) is a web application framework written in Ruby.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                },\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    64,\n                    68\n                  ]\n                }\n              ]\n            },\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:rails\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Ruby on Rails (Rails) is a web application framework written in Ruby. It is meant to help simplify the building of complex websites.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                },\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    64,\n                    68\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"python\",\n          \"display_name\": \"Python\",\n          \"short_description\": \"Python is a dynamically typed programming language.\",\n          \"description\": \"Python is a dynamically typed programming language designed by Guido Van Rossum. Much like the programming language Ruby, Python was designed to be easily read by programmers. Because of its large following and many libraries, Python can be implemented and used to do anything from webpages to scientific research.\",\n          \"created_by\": \"Guido van Rossum\",\n          \"released\": \"February 20, 1991\",\n          \"created_at\": \"2016-12-07T00:07:02Z\",\n          \"updated_at\": \"2017-10-27T22:45:43Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 112.94006,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:python\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Python is a dynamically typed programming language designed by Guido Van Rossum. Much like the programming language Ruby, Python was designed to be easily read by programmers. Because of its large\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    116,\n                    120\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"jekyll\",\n          \"display_name\": \"Jekyll\",\n          \"short_description\": \"Jekyll is a simple, blog-aware static site generator.\",\n          \"description\": \"Jekyll is a blog-aware, site generator written in Ruby. It takes raw text files, runs it through a renderer and produces a publishable static website.\",\n          \"created_by\": \"Tom Preston-Werner\",\n          \"released\": \"2008\",\n          \"created_at\": \"2016-12-16T21:53:08Z\",\n          \"updated_at\": \"2017-10-27T19:00:24Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 45.475624,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:jekyll\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Jekyll is a blog-aware, site generator written in Ruby. It takes raw text files, runs it through a renderer and produces a publishable static website.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    50,\n                    54\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"sass\",\n          \"display_name\": \"Sass\",\n          \"short_description\": \"Sass is a stable extension to classic CSS.\",\n          \"description\": \"Sass is a stylesheet language with a main implementation in Ruby. It is an extension of CSS that makes improvements to the old stylesheet format, such as being able to declare variables and using a cleaner nesting syntax.\",\n          \"created_by\": \"Hampton Catlin, Natalie Weizenbaum, Chris Eppstein\",\n          \"released\": \"November 28, 2006\",\n          \"created_at\": \"2016-12-16T21:53:45Z\",\n          \"updated_at\": \"2018-01-16T16:30:40Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 42.83278,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:sass\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Sass is a stylesheet language with a main implementation in Ruby. It is an extension of CSS that makes improvements to the old stylesheet format, such as being able to declare variables and using a cleaner nesting syntax.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    60,\n                    64\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"homebrew\",\n          \"display_name\": \"Homebrew\",\n          \"short_description\": \"Homebrew is a package manager for macOS.\",\n          \"description\": \"Homebrew is a package manager for Apple's macOS operating system. It simplifies the installation of software and is popular in the Ruby on Rails community.\",\n          \"created_by\": \"Max Howell\",\n          \"released\": \"2009\",\n          \"created_at\": \"2016-12-17T20:30:44Z\",\n          \"updated_at\": \"2018-02-06T16:14:56Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 19.368078,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:homebrew\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Homebrew is a package manager for Apple's macOS operating system. It simplifies the installation of software and is popular in the Ruby on Rails community.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    131,\n                    135\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n    \n\n[](#search-labels)Search labels[](/apps/ \"Enabled for GitHub Apps\")\n-------------------------------------------------------------------\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.symmetra-preview+json\n    \n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nFind labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/labels\n    \n\n### [](#parameters-6)Parameters\n\nName\n\nType\n\nDescription\n\n`repository_id`\n\n`integer`\n\nThe id of the repository.\n\n`q`\n\n`string`\n\nThe search keywords.\n\n`sort`\n\n`string`\n\nThe sort field. Can be one of `created` or `updated`. Default: results are sorted by best match.\n\n`order`\n\n`string`\n\nThe sort order if the sort parameter is provided. Can be one of `asc` or `desc`. Default: `desc`\n\n#### [](#example-6)Example\n\nSuppose you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\ncurl -H 'Accept: application/vnd.github.symmetra-preview+json' \\\n  'https://api.github.com/search/labels?repository_id=64778136&q=bug+defect+enhancement'\n\nThe labels that best match for the query appear first in the search results.\n\n    Status: 200 OK\n    \n\n    {\n      \"total_count\": 2,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"id\": 418327088,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n          \"name\": \"enhancement\",\n          \"color\": \"84b6eb\",\n          \"default\": true,\n          \"description\": \"New feature or request.\",\n          \"score\": 0.1193385\n        },\n        {\n          \"id\": 418327086,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n          \"name\": \"bug\",\n          \"color\": \"ee0701\",\n          \"default\": true,\n          \"description\": \"Something isn't working.\",\n          \"score\": 0.11928606\n        }\n      ]\n    }\n    \n\n### [](#highlighting-label-search-results)Highlighting label search results\n\nYou might want to highlight the matching search terms when displaying search results. The API offers additional metadata to support this use case. To get this metadata in your search results, specify the `text-match` media type in your `Accept` header. For example, via cURL, the above query would look like this:\n\ncurl -H 'Accept: application/vnd.github.symmetra-preview+json, \\\n application/vnd.github.v3.text-match+json' \\\n  'https://api.github.com/search/labels?repository_id=64778136&q=bug+defect+enhancement'\n\nThis produces the same JSON payload as above, with an extra key called `text_matches`, an array of objects. These objects provide information such as the position of your search terms within the text, as well as the `property` that included the search term.\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields. For details on the attributes present in the `text_matches` array, see [text match metadata](#text-match-metadata).\n\n    {\n      \"total_count\": 2,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"id\": 418327088,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n          \"name\": \"enhancement\",\n          \"color\": \"84b6eb\",\n          \"default\": true,\n          \"description\": \"New feature or request.\",\n          \"score\": 0.119338505,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n              \"object_type\": \"Label\",\n              \"property\": \"name\",\n              \"fragment\": \"enhancement\",\n              \"matches\": [\n                {\n                  \"text\": \"enhancement\",\n                  \"indices\": [\n                    0,\n                    11\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"id\": 418327086,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n          \"name\": \"bug\",\n          \"color\": \"ee0701\",\n          \"default\": true,\n          \"description\": \"Something isn't working.\",\n          \"score\": 0.119286075,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n              \"object_type\": \"Label\",\n              \"property\": \"name\",\n              \"fragment\": \"bug\",\n              \"matches\": [\n                {\n                  \"text\": \"bug\",\n                  \"indices\": [\n                    0,\n                    3\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n    \n\n[](#text-match-metadata)Text match metadata\n-------------------------------------------\n\nOn github.com, we enjoy the context provided by code snippets and highlights in search results.\n\n[![code-snippet-highlighting](https://f.cloud.github.com/assets/865/819651/959a4826-efb5-11e2-8af8-46c4a3857cdf.png)](https://f.cloud.github.com/assets/865/819651/959a4826-efb5-11e2-8af8-46c4a3857cdf.png)\n\nAPI consumers have access to that information as well. Requests can opt to receive those text fragments in the response, and every fragment is accompanied by numeric offsets identifying the exact location of each matching search term.\n\nTo get this metadata in your search results, specify the `text-match` media type in your `Accept` header.\n\n    application/vnd.github.v3.text-match+json\n    \n\nThe results will provide the same JSON payloads as shown above, with an extra key called `text_matches`. Inside the `text_matches` array, each object includes the following attributes:\n\nName\n\nDescription\n\n`object_url`\n\nThe URL for the resource that contains a string property matching one of the search terms.\n\n`object_type`\n\nThe name for the type of resource that exists at the given `object_url`.\n\n`property`\n\nThe name of a property of the resource that exists at `object_url`. That property is a string that matches one of the search terms. (In the JSON returned from `object_url`, the full content for the `fragment` will be found in the property with this name.)\n\n`fragment`\n\nA subset of the value of `property`. This is the text fragment that matches one or more of the search terms.\n\n`matches`\n\nAn array of one or more search terms that are present in `fragment`. The indices (i.e., \"offsets\") are relative to the fragment. (They are not relative to the _full_ content of `property`.)\n\n### [](#example-7)Example\n\nUsing cURL, and the [example issue search](#search-issues) above, our API request would look like this:\n\ncurl -H 'Accept: application/vnd.github.v3.text-match+json' \\\n  'https://api.github.com/search/issues?q=windows+label:bug+language:python+state:open&sort=created&order=asc'\n\nThe response will include a `text_matches` array for each search result. In the JSON below, we have two objects in the `text_matches` array.\n\nThe first text match occurred in the `body` property of the issue. We see a fragment of text from the issue body. The search term (`windows`) appears twice within that fragment, and we have the indices for each occurrence.\n\nThe second text match occurred in the `body` property of one of the issue's comments. We have the URL for the issue comment. And of course, we see a fragment of text from the comment body. The search term (`windows`) appears once within that fragment.\n\n    {\n      \"text_matches\": [\n        {\n          \"object_url\": \"https://api.github.com/repositories/215335/issues/132\",\n          \"object_type\": \"Issue\",\n          \"property\": \"body\",\n          \"fragment\": \"comprehensive windows font I know of).\\n\\nIf we can find a commonly distributed windows font that supports them then no problem (we can use html font tags) but otherwise the '(21)' style is probably better.\\n\",\n          \"matches\": [\n            {\n              \"text\": \"windows\",\n              \"indices\": [\n                14,\n                21\n              ]\n            },\n            {\n              \"text\": \"windows\",\n              \"indices\": [\n                78,\n                85\n              ]\n            }\n          ]\n        },\n        {\n          \"object_url\": \"https://api.github.com/repositories/215335/issues/comments/25688\",\n          \"object_type\": \"IssueComment\",\n          \"property\": \"body\",\n          \"fragment\": \" right after that are a bit broken IMHO :). I suppose we could have some hack that maxes out at whatever the font does...\\n\\nI'll check what the state of play is on Windows.\\n\",\n          \"matches\": [\n            {\n              \"text\": \"Windows\",\n              \"indices\": [\n                163,\n                170\n              ]\n            }\n          ]\n        }\n      ]\n    }",
    "params": [
      {
        "name": "q",
        "type": "string",
        "description": "The search terms."
      },
      {
        "name": "sort",
        "type": "string",
        "description": "The sort field. Can be `comments`, `created`, or `updated`.",
        "default": "results are sorted by best match."
      },
      {
        "name": "order",
        "type": "string",
        "description": "The sort order if `sort` parameter is provided. One of `asc` or `desc`.",
        "default": "desc"
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/search/#search-issues"
  },
  {
    "name": "Search users",
    "method": "GET",
    "path": "/search/users",
    "description": "Find users via various criteria. This method returns up to 100 results [per page](/v3/#pagination).",
    "params": [
      {
        "name": "q",
        "type": "string",
        "description": "The search terms."
      },
      {
        "name": "sort",
        "type": "string",
        "description": "The sort field. Can be `followers`, `repositories`, or `joined`.",
        "default": "results are sorted by best match."
      },
      {
        "name": "order",
        "type": "string",
        "description": "The sort order if `sort` parameter is provided. One of `asc` or `desc`.",
        "default": "desc"
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/search/#search-users"
  },
  {
    "name": "Search topics",
    "method": "GET",
    "path": "/search/topics",
    "description": "**Note:** The `topics` property for repositories on GitHub is currently available for developers to preview. To view the `topics` property in calls that return repository results, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.mercy-preview+json\n    \n\nFind topics via various criteria. This method returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/topics\n    \n\n### [](#parameters-5)Parameters\n\nName\n\nType\n\nDescription\n\n`q`\n\n`string`\n\nThe search terms.\n\nResults are sorted by best match by default.\n\nThe `q` search term can also contain any combination of the supported topic search qualifiers as described by the in-browser [topic search documentation](https://help.github.com/articles/searching-topics/) and [search syntax documentation](https://help.github.com/articles/search-syntax/):\n\n*   `is:curated` Finds topics that have extra information, e.g., a description, display name, or logo, because they have an entry in the [`github/explore` repository](https://github.com/github/explore).\n*   `is:featured` Finds topics listed on [https://github.com/topics](https://github.com/topics). Any featured topic will also be curated.\n*   `is:not-featured` Finds topics not listed on [https://github.com/topics](https://github.com/topics).\n*   `is:not-curated` Finds topics that have no extra information because they haven't been added to the [`github/explore` repository](https://github.com/github/explore).\n*   `repositories:` Finds topics with some number of repositories using them, e.g., `repositories:>1000`.\n\n#### [](#example-5)Example\n\nSuppose you want to search for topics related to Ruby that are featured on [https://github.com/topics](https://github.com/topics). Your query might look like this:\n\ncurl -H 'Accept: application/vnd.github.mercy-preview+json' \\\n  'https://api.github.com/search/topics?q=ruby+is:featured'\n\nIn this request, we're searching for topics with the keyword `ruby`, and we're limiting the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.\n\n**Note:** A search for featured Ruby topics only has 6 total results, so a [Link header](/v3/#link-header) indicating pagination is not included in the response.\n\n    Status: 200 OK\n    X-RateLimit-Limit: 20\n    X-RateLimit-Remaining: 19\n    \n\n    {\n      \"total_count\": 6,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"name\": \"ruby\",\n          \"display_name\": \"Ruby\",\n          \"short_description\": \"Ruby is a scripting language designed for simplified object-oriented programming.\",\n          \"description\": \"Ruby was developed by Yukihiro \\\"Matz\\\" Matsumoto in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python.\",\n          \"created_by\": \"Yukihiro Matsumoto\",\n          \"released\": \"December 21, 1995\",\n          \"created_at\": \"2016-11-28T22:03:59Z\",\n          \"updated_at\": \"2017-10-30T18:16:32Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 1750.5872\n        },\n        {\n          \"name\": \"rails\",\n          \"display_name\": \"Rails\",\n          \"short_description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby.\",\n          \"description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby. It is meant to help simplify the building of complex websites.\",\n          \"created_by\": \"David Heinemeier Hansson\",\n          \"released\": \"December 13 2005\",\n          \"created_at\": \"2016-12-09T17:03:50Z\",\n          \"updated_at\": \"2017-10-30T16:20:19Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 192.49863\n        },\n        {\n          \"name\": \"python\",\n          \"display_name\": \"Python\",\n          \"short_description\": \"Python is a dynamically typed programming language.\",\n          \"description\": \"Python is a dynamically typed programming language designed by Guido Van Rossum. Much like the programming language Ruby, Python was designed to be easily read by programmers. Because of its large following and many libraries, Python can be implemented and used to do anything from webpages to scientific research.\",\n          \"created_by\": \"Guido van Rossum\",\n          \"released\": \"February 20, 1991\",\n          \"created_at\": \"2016-12-07T00:07:02Z\",\n          \"updated_at\": \"2017-10-27T22:45:43Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 111.92691\n        },\n        {\n          \"name\": \"jekyll\",\n          \"display_name\": \"Jekyll\",\n          \"short_description\": \"Jekyll is a simple, blog-aware static site generator.\",\n          \"description\": \"Jekyll is a blog-aware, site generator written in Ruby. It takes raw text files, runs it through a renderer and produces a publishable static website.\",\n          \"created_by\": \"Tom Preston-Werner\",\n          \"released\": \"2008\",\n          \"created_at\": \"2016-12-16T21:53:08Z\",\n          \"updated_at\": \"2017-10-27T19:00:24Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 45.06729\n        },\n        {\n          \"name\": \"sass\",\n          \"display_name\": \"Sass\",\n          \"short_description\": \"Sass is a stable extension to classic CSS.\",\n          \"description\": \"Sass is a stylesheet language with a main implementation in Ruby. It is an extension of CSS that makes improvements to the old stylesheet format, such as being able to declare variables and using a cleaner nesting syntax.\",\n          \"created_by\": \"Hampton Catlin, Natalie Weizenbaum, Chris Eppstein\",\n          \"released\": \"November 28, 2006\",\n          \"created_at\": \"2016-12-16T21:53:45Z\",\n          \"updated_at\": \"2018-01-16T16:30:40Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 42.455986\n        },\n        {\n          \"name\": \"homebrew\",\n          \"display_name\": \"Homebrew\",\n          \"short_description\": \"Homebrew is a package manager for macOS.\",\n          \"description\": \"Homebrew is a package manager for Apple's macOS operating system. It simplifies the installation of software and is popular in the Ruby on Rails community.\",\n          \"created_by\": \"Max Howell\",\n          \"released\": \"2009\",\n          \"created_at\": \"2016-12-17T20:30:44Z\",\n          \"updated_at\": \"2018-02-06T16:14:56Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 19.194168\n        }\n      ]\n    }\n    \n\n### [](#highlighting-topic-search-results)Highlighting topic search results\n\nYou might want to highlight the matching search terms when displaying search results. The API offers additional metadata to support this use case. To get this metadata in your search results, specify the `text-match` media type in your Accept header. For example, via cURL, the above query would look like this:\n\ncurl -H 'Accept: application/vnd.github.v3.text-match+json, application/vnd.github.mercy-preview' \\\n  'https://api.github.com/search/topics?q=ruby+is:featured'\n\nThis produces the same JSON payload as above, with an extra key called `text_matches`, which is an array of objects. These objects provide information such as the position of your search terms within the text, as well as the `property` that included the search term.\n\nWhen searching for topics, you can get text match metadata for the topic's **short_description**, **description**, **name**, or **display_name** field. For details on the attributes present in the `text_matches` array, see [text match metadata](#text-match-metadata).\n\n    {\n      \"total_count\": 6,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"name\": \"ruby\",\n          \"display_name\": \"Ruby\",\n          \"short_description\": \"Ruby is a scripting language designed for simplified object-oriented programming.\",\n          \"description\": \"Ruby was developed by Yukihiro \\\"Matz\\\" Matsumoto in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python.\",\n          \"created_by\": \"Yukihiro Matsumoto\",\n          \"released\": \"December 21, 1995\",\n          \"created_at\": \"2016-11-28T22:03:59Z\",\n          \"updated_at\": \"2017-10-30T18:16:32Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 1750.5697,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:ruby\",\n              \"object_type\": \"Topic\",\n              \"property\": \"short_description\",\n              \"fragment\": \"Ruby is a scripting language designed for simplified object-oriented programming.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                }\n              ]\n            },\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:ruby\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Ruby was developed by Yukihiro \\\"Matz\\\" Matsumoto in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                },\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    201,\n                    205\n                  ]\n                }\n              ]\n            },\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:ruby\",\n              \"object_type\": \"Topic\",\n              \"property\": \"display_name\",\n              \"fragment\": \"Ruby\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                }\n              ]\n            },\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:ruby\",\n              \"object_type\": \"Topic\",\n              \"property\": \"name\",\n              \"fragment\": \"ruby\",\n              \"matches\": [\n                {\n                  \"text\": \"ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"rails\",\n          \"display_name\": \"Rails\",\n          \"short_description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby.\",\n          \"description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby. It is meant to help simplify the building of complex websites.\",\n          \"created_by\": \"David Heinemeier Hansson\",\n          \"released\": \"December 13 2005\",\n          \"created_at\": \"2016-12-09T17:03:50Z\",\n          \"updated_at\": \"2017-10-30T16:20:19Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 192.49652,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:rails\",\n              \"object_type\": \"Topic\",\n              \"property\": \"short_description\",\n              \"fragment\": \"Ruby on Rails (Rails) is a web application framework written in Ruby.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                },\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    64,\n                    68\n                  ]\n                }\n              ]\n            },\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:rails\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Ruby on Rails (Rails) is a web application framework written in Ruby. It is meant to help simplify the building of complex websites.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    0,\n                    4\n                  ]\n                },\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    64,\n                    68\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"python\",\n          \"display_name\": \"Python\",\n          \"short_description\": \"Python is a dynamically typed programming language.\",\n          \"description\": \"Python is a dynamically typed programming language designed by Guido Van Rossum. Much like the programming language Ruby, Python was designed to be easily read by programmers. Because of its large following and many libraries, Python can be implemented and used to do anything from webpages to scientific research.\",\n          \"created_by\": \"Guido van Rossum\",\n          \"released\": \"February 20, 1991\",\n          \"created_at\": \"2016-12-07T00:07:02Z\",\n          \"updated_at\": \"2017-10-27T22:45:43Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 112.94006,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:python\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Python is a dynamically typed programming language designed by Guido Van Rossum. Much like the programming language Ruby, Python was designed to be easily read by programmers. Because of its large\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    116,\n                    120\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"jekyll\",\n          \"display_name\": \"Jekyll\",\n          \"short_description\": \"Jekyll is a simple, blog-aware static site generator.\",\n          \"description\": \"Jekyll is a blog-aware, site generator written in Ruby. It takes raw text files, runs it through a renderer and produces a publishable static website.\",\n          \"created_by\": \"Tom Preston-Werner\",\n          \"released\": \"2008\",\n          \"created_at\": \"2016-12-16T21:53:08Z\",\n          \"updated_at\": \"2017-10-27T19:00:24Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 45.475624,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:jekyll\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Jekyll is a blog-aware, site generator written in Ruby. It takes raw text files, runs it through a renderer and produces a publishable static website.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    50,\n                    54\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"sass\",\n          \"display_name\": \"Sass\",\n          \"short_description\": \"Sass is a stable extension to classic CSS.\",\n          \"description\": \"Sass is a stylesheet language with a main implementation in Ruby. It is an extension of CSS that makes improvements to the old stylesheet format, such as being able to declare variables and using a cleaner nesting syntax.\",\n          \"created_by\": \"Hampton Catlin, Natalie Weizenbaum, Chris Eppstein\",\n          \"released\": \"November 28, 2006\",\n          \"created_at\": \"2016-12-16T21:53:45Z\",\n          \"updated_at\": \"2018-01-16T16:30:40Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 42.83278,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:sass\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Sass is a stylesheet language with a main implementation in Ruby. It is an extension of CSS that makes improvements to the old stylesheet format, such as being able to declare variables and using a cleaner nesting syntax.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    60,\n                    64\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"name\": \"homebrew\",\n          \"display_name\": \"Homebrew\",\n          \"short_description\": \"Homebrew is a package manager for macOS.\",\n          \"description\": \"Homebrew is a package manager for Apple's macOS operating system. It simplifies the installation of software and is popular in the Ruby on Rails community.\",\n          \"created_by\": \"Max Howell\",\n          \"released\": \"2009\",\n          \"created_at\": \"2016-12-17T20:30:44Z\",\n          \"updated_at\": \"2018-02-06T16:14:56Z\",\n          \"featured\": true,\n          \"curated\": true,\n          \"score\": 19.368078,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/search/repositories?q=topic:homebrew\",\n              \"object_type\": \"Topic\",\n              \"property\": \"description\",\n              \"fragment\": \"Homebrew is a package manager for Apple's macOS operating system. It simplifies the installation of software and is popular in the Ruby on Rails community.\",\n              \"matches\": [\n                {\n                  \"text\": \"Ruby\",\n                  \"indices\": [\n                    131,\n                    135\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n    \n\n[](#search-labels)Search labels[](/apps/ \"Enabled for GitHub Apps\")\n-------------------------------------------------------------------\n\n**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.symmetra-preview+json\n    \n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nFind labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/labels\n    \n\n### [](#parameters-6)Parameters\n\nName\n\nType\n\nDescription\n\n`repository_id`\n\n`integer`\n\nThe id of the repository.\n\n`q`\n\n`string`\n\nThe search keywords.\n\n`sort`\n\n`string`\n\nThe sort field. Can be one of `created` or `updated`. Default: results are sorted by best match.\n\n`order`\n\n`string`\n\nThe sort order if the sort parameter is provided. Can be one of `asc` or `desc`. Default: `desc`\n\n#### [](#example-6)Example\n\nSuppose you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\ncurl -H 'Accept: application/vnd.github.symmetra-preview+json' \\\n  'https://api.github.com/search/labels?repository_id=64778136&q=bug+defect+enhancement'\n\nThe labels that best match for the query appear first in the search results.\n\n    Status: 200 OK\n    \n\n    {\n      \"total_count\": 2,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"id\": 418327088,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n          \"name\": \"enhancement\",\n          \"color\": \"84b6eb\",\n          \"default\": true,\n          \"description\": \"New feature or request.\",\n          \"score\": 0.1193385\n        },\n        {\n          \"id\": 418327086,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n          \"name\": \"bug\",\n          \"color\": \"ee0701\",\n          \"default\": true,\n          \"description\": \"Something isn't working.\",\n          \"score\": 0.11928606\n        }\n      ]\n    }\n    \n\n### [](#highlighting-label-search-results)Highlighting label search results\n\nYou might want to highlight the matching search terms when displaying search results. The API offers additional metadata to support this use case. To get this metadata in your search results, specify the `text-match` media type in your `Accept` header. For example, via cURL, the above query would look like this:\n\ncurl -H 'Accept: application/vnd.github.symmetra-preview+json, \\\n application/vnd.github.v3.text-match+json' \\\n  'https://api.github.com/search/labels?repository_id=64778136&q=bug+defect+enhancement'\n\nThis produces the same JSON payload as above, with an extra key called `text_matches`, an array of objects. These objects provide information such as the position of your search terms within the text, as well as the `property` that included the search term.\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields. For details on the attributes present in the `text_matches` array, see [text match metadata](#text-match-metadata).\n\n    {\n      \"total_count\": 2,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"id\": 418327088,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n          \"name\": \"enhancement\",\n          \"color\": \"84b6eb\",\n          \"default\": true,\n          \"description\": \"New feature or request.\",\n          \"score\": 0.119338505,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n              \"object_type\": \"Label\",\n              \"property\": \"name\",\n              \"fragment\": \"enhancement\",\n              \"matches\": [\n                {\n                  \"text\": \"enhancement\",\n                  \"indices\": [\n                    0,\n                    11\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"id\": 418327086,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n          \"name\": \"bug\",\n          \"color\": \"ee0701\",\n          \"default\": true,\n          \"description\": \"Something isn't working.\",\n          \"score\": 0.119286075,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n              \"object_type\": \"Label\",\n              \"property\": \"name\",\n              \"fragment\": \"bug\",\n              \"matches\": [\n                {\n                  \"text\": \"bug\",\n                  \"indices\": [\n                    0,\n                    3\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n    \n\n[](#text-match-metadata)Text match metadata\n-------------------------------------------\n\nOn github.com, we enjoy the context provided by code snippets and highlights in search results.\n\n[![code-snippet-highlighting](https://f.cloud.github.com/assets/865/819651/959a4826-efb5-11e2-8af8-46c4a3857cdf.png)](https://f.cloud.github.com/assets/865/819651/959a4826-efb5-11e2-8af8-46c4a3857cdf.png)\n\nAPI consumers have access to that information as well. Requests can opt to receive those text fragments in the response, and every fragment is accompanied by numeric offsets identifying the exact location of each matching search term.\n\nTo get this metadata in your search results, specify the `text-match` media type in your `Accept` header.\n\n    application/vnd.github.v3.text-match+json\n    \n\nThe results will provide the same JSON payloads as shown above, with an extra key called `text_matches`. Inside the `text_matches` array, each object includes the following attributes:\n\nName\n\nDescription\n\n`object_url`\n\nThe URL for the resource that contains a string property matching one of the search terms.\n\n`object_type`\n\nThe name for the type of resource that exists at the given `object_url`.\n\n`property`\n\nThe name of a property of the resource that exists at `object_url`. That property is a string that matches one of the search terms. (In the JSON returned from `object_url`, the full content for the `fragment` will be found in the property with this name.)\n\n`fragment`\n\nA subset of the value of `property`. This is the text fragment that matches one or more of the search terms.\n\n`matches`\n\nAn array of one or more search terms that are present in `fragment`. The indices (i.e., \"offsets\") are relative to the fragment. (They are not relative to the _full_ content of `property`.)\n\n### [](#example-7)Example\n\nUsing cURL, and the [example issue search](#search-issues) above, our API request would look like this:\n\ncurl -H 'Accept: application/vnd.github.v3.text-match+json' \\\n  'https://api.github.com/search/issues?q=windows+label:bug+language:python+state:open&sort=created&order=asc'\n\nThe response will include a `text_matches` array for each search result. In the JSON below, we have two objects in the `text_matches` array.\n\nThe first text match occurred in the `body` property of the issue. We see a fragment of text from the issue body. The search term (`windows`) appears twice within that fragment, and we have the indices for each occurrence.\n\nThe second text match occurred in the `body` property of one of the issue's comments. We have the URL for the issue comment. And of course, we see a fragment of text from the comment body. The search term (`windows`) appears once within that fragment.\n\n    {\n      \"text_matches\": [\n        {\n          \"object_url\": \"https://api.github.com/repositories/215335/issues/132\",\n          \"object_type\": \"Issue\",\n          \"property\": \"body\",\n          \"fragment\": \"comprehensive windows font I know of).\\n\\nIf we can find a commonly distributed windows font that supports them then no problem (we can use html font tags) but otherwise the '(21)' style is probably better.\\n\",\n          \"matches\": [\n            {\n              \"text\": \"windows\",\n              \"indices\": [\n                14,\n                21\n              ]\n            },\n            {\n              \"text\": \"windows\",\n              \"indices\": [\n                78,\n                85\n              ]\n            }\n          ]\n        },\n        {\n          \"object_url\": \"https://api.github.com/repositories/215335/issues/comments/25688\",\n          \"object_type\": \"IssueComment\",\n          \"property\": \"body\",\n          \"fragment\": \" right after that are a bit broken IMHO :). I suppose we could have some hack that maxes out at whatever the font does...\\n\\nI'll check what the state of play is on Windows.\\n\",\n          \"matches\": [\n            {\n              \"text\": \"Windows\",\n              \"indices\": [\n                163,\n                170\n              ]\n            }\n          ]\n        }\n      ]\n    }",
    "params": [
      {
        "name": "q",
        "type": "string",
        "description": "The search terms."
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/search/#search-topics"
  },
  {
    "name": "Search labels",
    "method": "GET",
    "path": "/search/labels",
    "description": "**Note:** You can now use emoji in label names, add descriptions to labels, and search for labels in a repository. See the [blog post](/changes/2018-02-22-label-description-search-preview) for full details. To access these features and receive payloads with this data during the preview period, you must provide a custom [media type](/v3/media) in the `Accept` header:\n\n    application/vnd.github.symmetra-preview+json\n    \n\n**Warning:** The API may change without advance notice during the preview period. Preview features are not supported for production use. If you experience any issues, contact [GitHub support](https://github.com/contact).\n\nFind labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](/v3/#pagination).\n\n    GET /search/labels\n    \n\n### [](#parameters-6)Parameters\n\nName\n\nType\n\nDescription\n\n`repository_id`\n\n`integer`\n\nThe id of the repository.\n\n`q`\n\n`string`\n\nThe search keywords.\n\n`sort`\n\n`string`\n\nThe sort field. Can be one of `created` or `updated`. Default: results are sorted by best match.\n\n`order`\n\n`string`\n\nThe sort order if the sort parameter is provided. Can be one of `asc` or `desc`. Default: `desc`\n\n#### [](#example-6)Example\n\nSuppose you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\ncurl -H 'Accept: application/vnd.github.symmetra-preview+json' \\\n  'https://api.github.com/search/labels?repository_id=64778136&q=bug+defect+enhancement'\n\nThe labels that best match for the query appear first in the search results.\n\n    Status: 200 OK\n    \n\n    {\n      \"total_count\": 2,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"id\": 418327088,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n          \"name\": \"enhancement\",\n          \"color\": \"84b6eb\",\n          \"default\": true,\n          \"description\": \"New feature or request.\",\n          \"score\": 0.1193385\n        },\n        {\n          \"id\": 418327086,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n          \"name\": \"bug\",\n          \"color\": \"ee0701\",\n          \"default\": true,\n          \"description\": \"Something isn't working.\",\n          \"score\": 0.11928606\n        }\n      ]\n    }\n    \n\n### [](#highlighting-label-search-results)Highlighting label search results\n\nYou might want to highlight the matching search terms when displaying search results. The API offers additional metadata to support this use case. To get this metadata in your search results, specify the `text-match` media type in your `Accept` header. For example, via cURL, the above query would look like this:\n\ncurl -H 'Accept: application/vnd.github.symmetra-preview+json, \\\n application/vnd.github.v3.text-match+json' \\\n  'https://api.github.com/search/labels?repository_id=64778136&q=bug+defect+enhancement'\n\nThis produces the same JSON payload as above, with an extra key called `text_matches`, an array of objects. These objects provide information such as the position of your search terms within the text, as well as the `property` that included the search term.\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields. For details on the attributes present in the `text_matches` array, see [text match metadata](#text-match-metadata).\n\n    {\n      \"total_count\": 2,\n      \"incomplete_results\": false,\n      \"items\": [\n        {\n          \"id\": 418327088,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n          \"name\": \"enhancement\",\n          \"color\": \"84b6eb\",\n          \"default\": true,\n          \"description\": \"New feature or request.\",\n          \"score\": 0.119338505,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n              \"object_type\": \"Label\",\n              \"property\": \"name\",\n              \"fragment\": \"enhancement\",\n              \"matches\": [\n                {\n                  \"text\": \"enhancement\",\n                  \"indices\": [\n                    0,\n                    11\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"id\": 418327086,\n          \"url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n          \"name\": \"bug\",\n          \"color\": \"ee0701\",\n          \"default\": true,\n          \"description\": \"Something isn't working.\",\n          \"score\": 0.119286075,\n          \"text_matches\": [\n            {\n              \"object_url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n              \"object_type\": \"Label\",\n              \"property\": \"name\",\n              \"fragment\": \"bug\",\n              \"matches\": [\n                {\n                  \"text\": \"bug\",\n                  \"indices\": [\n                    0,\n                    3\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n    \n\n[](#text-match-metadata)Text match metadata\n-------------------------------------------\n\nOn github.com, we enjoy the context provided by code snippets and highlights in search results.\n\n[![code-snippet-highlighting](https://f.cloud.github.com/assets/865/819651/959a4826-efb5-11e2-8af8-46c4a3857cdf.png)](https://f.cloud.github.com/assets/865/819651/959a4826-efb5-11e2-8af8-46c4a3857cdf.png)\n\nAPI consumers have access to that information as well. Requests can opt to receive those text fragments in the response, and every fragment is accompanied by numeric offsets identifying the exact location of each matching search term.\n\nTo get this metadata in your search results, specify the `text-match` media type in your `Accept` header.\n\n    application/vnd.github.v3.text-match+json\n    \n\nThe results will provide the same JSON payloads as shown above, with an extra key called `text_matches`. Inside the `text_matches` array, each object includes the following attributes:\n\nName\n\nDescription\n\n`object_url`\n\nThe URL for the resource that contains a string property matching one of the search terms.\n\n`object_type`\n\nThe name for the type of resource that exists at the given `object_url`.\n\n`property`\n\nThe name of a property of the resource that exists at `object_url`. That property is a string that matches one of the search terms. (In the JSON returned from `object_url`, the full content for the `fragment` will be found in the property with this name.)\n\n`fragment`\n\nA subset of the value of `property`. This is the text fragment that matches one or more of the search terms.\n\n`matches`\n\nAn array of one or more search terms that are present in `fragment`. The indices (i.e., \"offsets\") are relative to the fragment. (They are not relative to the _full_ content of `property`.)\n\n### [](#example-7)Example\n\nUsing cURL, and the [example issue search](#search-issues) above, our API request would look like this:\n\ncurl -H 'Accept: application/vnd.github.v3.text-match+json' \\\n  'https://api.github.com/search/issues?q=windows+label:bug+language:python+state:open&sort=created&order=asc'\n\nThe response will include a `text_matches` array for each search result. In the JSON below, we have two objects in the `text_matches` array.\n\nThe first text match occurred in the `body` property of the issue. We see a fragment of text from the issue body. The search term (`windows`) appears twice within that fragment, and we have the indices for each occurrence.\n\nThe second text match occurred in the `body` property of one of the issue's comments. We have the URL for the issue comment. And of course, we see a fragment of text from the comment body. The search term (`windows`) appears once within that fragment.\n\n    {\n      \"text_matches\": [\n        {\n          \"object_url\": \"https://api.github.com/repositories/215335/issues/132\",\n          \"object_type\": \"Issue\",\n          \"property\": \"body\",\n          \"fragment\": \"comprehensive windows font I know of).\\n\\nIf we can find a commonly distributed windows font that supports them then no problem (we can use html font tags) but otherwise the '(21)' style is probably better.\\n\",\n          \"matches\": [\n            {\n              \"text\": \"windows\",\n              \"indices\": [\n                14,\n                21\n              ]\n            },\n            {\n              \"text\": \"windows\",\n              \"indices\": [\n                78,\n                85\n              ]\n            }\n          ]\n        },\n        {\n          \"object_url\": \"https://api.github.com/repositories/215335/issues/comments/25688\",\n          \"object_type\": \"IssueComment\",\n          \"property\": \"body\",\n          \"fragment\": \" right after that are a bit broken IMHO :). I suppose we could have some hack that maxes out at whatever the font does...\\n\\nI'll check what the state of play is on Windows.\\n\",\n          \"matches\": [\n            {\n              \"text\": \"Windows\",\n              \"indices\": [\n                163,\n                170\n              ]\n            }\n          ]\n        }\n      ]\n    }",
    "params": [
      {
        "name": "repository_id",
        "type": "integer",
        "description": "The id of the repository."
      },
      {
        "name": "q",
        "type": "string",
        "description": "The search keywords."
      },
      {
        "name": "sort",
        "type": "string",
        "description": "The sort field. Can be one of `created` or `updated`.",
        "default": "results are sorted by best match."
      },
      {
        "name": "order",
        "type": "string",
        "description": "The sort order if the sort parameter is provided. Can be one of `asc` or `desc`.",
        "default": "desc"
      }
    ],
    "documentationUrl": "https://developer.github.com/v3/search/#search-labels"
  }
]