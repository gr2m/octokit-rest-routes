[
  {
    "method": "GET",
    "path": "/issues",
    "enabledForApps": false,
    "name": "List all issues assigned to the authenticated user across all visible repositories including owned repositories, member repositories, and organization repositories",
    "params": [
      {
        "name": "filter",
        "type": "enum",
        "options": [
          "assigned",
          "created",
          "mentioned",
          "subscribed",
          "all"
        ],
        "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
        "default": "assigned",
        "required": false
      },
      {
        "name": "state",
        "type": "string",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "default": "open",
        "required": false
      },
      {
        "name": "labels",
        "type": "string",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "required": false
      },
      {
        "name": "sort",
        "type": "string",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "default": "created",
        "required": false
      },
      {
        "name": "direction",
        "type": "string",
        "description": "The direction of the sort. Can be either `asc` or `desc`.",
        "default": "desc",
        "required": false
      },
      {
        "name": "since",
        "type": "string",
        "description": "Only issues updated at or after this time are returned. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "required": false
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "**Note**: In the past, pull requests and issues were more closely aligned than they are now. As far as the API is concerned, every pull request is an issue, but not every issue is a pull request.\n\nThis endpoint may also return pull requests in the response. If an issue _is_ a pull request, the object will include a `pull_request` key.\n\nYou can use the `filter` query parameter to fetch issues that are not necessarily assigned to you. See the table below for more information.\n\n\n\n**Note:** If a user opened an issue via a GitHub App, the `performed_via_github_app` key contains information on that GitHub App.",
    "documentationUrl": "https://developer.github.com/v3/issues/#list-issues"
  },
  {
    "method": "GET",
    "path": "/user/issues",
    "enabledForApps": false,
    "name": "List all issues across owned and member repositories assigned to the authenticated user",
    "params": [
      {
        "name": "filter",
        "type": "enum",
        "options": [
          "assigned",
          "created",
          "mentioned",
          "subscribed",
          "all"
        ],
        "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
        "default": "assigned",
        "required": false
      },
      {
        "name": "state",
        "type": "string",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "default": "open",
        "required": false
      },
      {
        "name": "labels",
        "type": "string",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "required": false
      },
      {
        "name": "sort",
        "type": "string",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "default": "created",
        "required": false
      },
      {
        "name": "direction",
        "type": "string",
        "description": "The direction of the sort. Can be either `asc` or `desc`.",
        "default": "desc",
        "required": false
      },
      {
        "name": "since",
        "type": "string",
        "description": "Only issues updated at or after this time are returned. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "required": false
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "**Note**: In the past, pull requests and issues were more closely aligned than they are now. As far as the API is concerned, every pull request is an issue, but not every issue is a pull request.\n\nThis endpoint may also return pull requests in the response. If an issue _is_ a pull request, the object will include a `pull_request` key.\n\nYou can use the `filter` query parameter to fetch issues that are not necessarily assigned to you. See the table below for more information.\n\n\n\n**Note:** If a user opened an issue via a GitHub App, the `performed_via_github_app` key contains information on that GitHub App.",
    "documentationUrl": "https://developer.github.com/v3/issues/#list-issues"
  },
  {
    "method": "GET",
    "path": "/orgs/:org/issues",
    "enabledForApps": false,
    "name": "List all issues for a given organization assigned to the authenticated user",
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "filter",
        "type": "enum",
        "options": [
          "assigned",
          "created",
          "mentioned",
          "subscribed",
          "all"
        ],
        "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
        "default": "assigned",
        "required": false
      },
      {
        "name": "state",
        "type": "string",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "default": "open",
        "required": false
      },
      {
        "name": "labels",
        "type": "string",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "required": false
      },
      {
        "name": "sort",
        "type": "string",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "default": "created",
        "required": false
      },
      {
        "name": "direction",
        "type": "string",
        "description": "The direction of the sort. Can be either `asc` or `desc`.",
        "default": "desc",
        "required": false
      },
      {
        "name": "since",
        "type": "string",
        "description": "Only issues updated at or after this time are returned. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "required": false
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "**Note**: In the past, pull requests and issues were more closely aligned than they are now. As far as the API is concerned, every pull request is an issue, but not every issue is a pull request.\n\nThis endpoint may also return pull requests in the response. If an issue _is_ a pull request, the object will include a `pull_request` key.\n\nYou can use the `filter` query parameter to fetch issues that are not necessarily assigned to you. See the table below for more information.\n\n\n\n**Note:** If a user opened an issue via a GitHub App, the `performed_via_github_app` key contains information on that GitHub App.",
    "documentationUrl": "https://developer.github.com/v3/issues/#list-issues"
  },
  {
    "name": "List issues for a repository",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/issues",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "milestone",
        "type": "integer or string",
        "description": "If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned.",
        "required": false
      },
      {
        "name": "state",
        "type": "string",
        "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
        "default": "open",
        "required": false
      },
      {
        "name": "assignee",
        "type": "string",
        "description": "Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user.",
        "required": false
      },
      {
        "name": "creator",
        "type": "string",
        "description": "The user that created the issue.",
        "required": false
      },
      {
        "name": "mentioned",
        "type": "string",
        "description": "A user that's mentioned in the issue.",
        "required": false
      },
      {
        "name": "labels",
        "type": "string",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "required": false
      },
      {
        "name": "sort",
        "type": "string",
        "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
        "default": "created",
        "required": false
      },
      {
        "name": "direction",
        "type": "string",
        "description": "The direction of the sort. Can be either `asc` or `desc`.",
        "default": "desc",
        "required": false
      },
      {
        "name": "since",
        "type": "string",
        "description": "Only issues updated at or after this time are returned. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "required": false
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "**Note**: In the past, pull requests and issues were more closely aligned than they are now. As far as the API is concerned, every pull request is an issue, but not every issue is a pull request.\n\nThis endpoint may also return pull requests in the response. If an issue _is_ a pull request, the object will include a `pull_request` key.\n\n\n\n**Note:** If a user opened an issue via a GitHub App, the `performed_via_github_app` key contains information on that GitHub App.",
    "documentationUrl": "https://developer.github.com/v3/issues/#list-issues-for-a-repository"
  },
  {
    "name": "Get a single issue",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/issues/:number",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      }
    ],
    "description": "**Note**: In the past, pull requests and issues were more closely aligned than they are now. As far as the API is concerned, every pull request is an issue, but not every issue is a pull request.\n\nThis endpoint may also return pull requests in the response. If an issue _is_ a pull request, the object will include a `pull_request` key.",
    "documentationUrl": "https://developer.github.com/v3/issues/#get-a-single-issue"
  },
  {
    "name": "Create an issue",
    "enabledForApps": true,
    "method": "POST",
    "path": "/repos/:owner/:repo/issues",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "description": "The title of the issue.",
        "required": true
      },
      {
        "name": "body",
        "type": "string",
        "description": "The contents of the issue.",
        "required": false
      },
      {
        "name": "assignee",
        "type": "string",
        "description": "Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**_",
        "required": false
      },
      {
        "name": "milestone",
        "type": "integer",
        "description": "The `number` of the milestone to associate this issue with. _NOTE: Only users with push access can set the milestone for new issues. The milestone is silently dropped otherwise._",
        "required": false
      },
      {
        "name": "labels",
        "type": "array of strings",
        "description": "Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._",
        "required": false
      },
      {
        "name": "assignees",
        "type": "array of strings",
        "description": "Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._",
        "required": false
      }
    ],
    "description": "Any user with pull access to a repository can create an issue.",
    "documentationUrl": "https://developer.github.com/v3/issues/#create-an-issue"
  },
  {
    "name": "Edit an issue",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/issues/:number",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "description": "The title of the issue.",
        "required": false
      },
      {
        "name": "body",
        "type": "string",
        "description": "The contents of the issue.",
        "required": false
      },
      {
        "name": "assignee",
        "type": "string",
        "description": "Login for the user that this issue should be assigned to. **This field is deprecated.**",
        "required": false
      },
      {
        "name": "state",
        "type": "string",
        "description": "State of the issue. Either `open` or `closed`.",
        "required": false
      },
      {
        "name": "milestone",
        "type": "integer",
        "description": "The `number` of the milestone to associate this issue with or `null` to remove current. _NOTE: Only users with push access can set the milestone for issues. The milestone is silently dropped otherwise._",
        "required": false
      },
      {
        "name": "labels",
        "type": "array of strings",
        "description": "Labels to associate with this issue. Pass one or more Labels to _replace_ the set of Labels on this Issue. Send an empty array (`[]`) to clear all Labels from the Issue. _NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise._",
        "required": false
      },
      {
        "name": "assignees",
        "type": "array of strings",
        "description": "Logins for Users to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this Issue. Send an empty array (`[]`) to clear all assignees from the Issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._",
        "required": false
      }
    ],
    "description": "Issue owners and users with push access can edit an issue.",
    "documentationUrl": "https://developer.github.com/v3/issues/#edit-an-issue"
  },
  {
    "name": "Lock an issue",
    "enabledForApps": true,
    "method": "PUT",
    "path": "/repos/:owner/:repo/issues/:number/lock",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "lock_reason",
        "type": "string",
        "description": "The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:  \n\\* `off-topic`  \n\\* `too heated`  \n\\* `resolved`  \n\\* `spam`",
        "required": false
      }
    ],
    "description": "Users with push access can lock an issue or pull request's conversation.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](/v3/#http-verbs).\"",
    "documentationUrl": "https://developer.github.com/v3/issues/#lock-an-issue"
  },
  {
    "name": "Unlock an issue",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/issues/:number/lock",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      }
    ],
    "description": "Users with push access can unlock an issue's conversation.",
    "documentationUrl": "https://developer.github.com/v3/issues/#unlock-an-issue"
  },
  {
    "name": "List assignees",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/assignees",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "Lists the [available assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository.",
    "documentationUrl": "https://developer.github.com/v3/issues/assignees/#list-assignees"
  },
  {
    "name": "Check assignee",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/assignees/:assignee",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "assignee",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "Checks if a user has permission to be assigned to an issue in this repository.\n\nIf the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.\n\nOtherwise a `404` status code is returned.",
    "documentationUrl": "https://developer.github.com/v3/issues/assignees/#check-assignee"
  },
  {
    "name": "Add assignees to an issue",
    "enabledForApps": true,
    "method": "POST",
    "path": "/repos/:owner/:repo/issues/:number/assignees",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "assignees",
        "type": "array of strings",
        "description": "Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._",
        "required": false
      }
    ],
    "description": "Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced.\n\nThis example adds two assignees to the existing `octocat` assignee.",
    "documentationUrl": "https://developer.github.com/v3/issues/assignees/#add-assignees-to-an-issue"
  },
  {
    "name": "Remove assignees from an issue",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/issues/:number/assignees",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "assignees",
        "type": "array of strings",
        "description": "Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._",
        "required": false
      }
    ],
    "description": "Removes one or more assignees from an issue.\n\nThis example removes two of three assignees, leaving the `octocat` assignee.",
    "documentationUrl": "https://developer.github.com/v3/issues/assignees/#remove-assignees-from-an-issue"
  },
  {
    "name": "List comments on an issue",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/issues/:number/comments",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "since",
        "type": "string",
        "description": "Only comments updated at or after this time are returned. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "required": false
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "Issue Comments are ordered by ascending ID.",
    "documentationUrl": "https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue"
  },
  {
    "name": "List comments in a repository",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/issues/comments",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "sort",
        "type": "enum",
        "options": [
          "created",
          "updated"
        ],
        "description": "Either `created` or `updated`.",
        "default": "created",
        "required": false
      },
      {
        "name": "direction",
        "type": "enum",
        "options": [
          "asc",
          "desc",
          "sort"
        ],
        "description": "Either `asc` or `desc`. Ignored without the `sort` parameter.",
        "required": false
      },
      {
        "name": "since",
        "type": "string",
        "description": "Only comments updated at or after this time are returned. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "required": false
      }
    ],
    "description": "By default, Issue Comments are ordered by ascending ID.",
    "documentationUrl": "https://developer.github.com/v3/issues/comments/#list-comments-in-a-repository"
  },
  {
    "name": "Get a single comment",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/issues/comments/:id",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "\n\n**Note:** If a user created an issue comment via a GitHub App, the `performed_via_github_app` key will contain information on that GitHub App.",
    "documentationUrl": "https://developer.github.com/v3/issues/comments/#get-a-single-comment"
  },
  {
    "name": "Create a comment",
    "enabledForApps": true,
    "method": "POST",
    "path": "/repos/:owner/:repo/issues/:number/comments",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "body",
        "type": "string",
        "description": "The contents of the comment.",
        "required": true
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/comments/#create-a-comment"
  },
  {
    "name": "Edit a comment",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/issues/comments/:id",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "body",
        "type": "string",
        "description": "The contents of the comment.",
        "required": true
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/comments/#edit-a-comment"
  },
  {
    "name": "Delete a comment",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/issues/comments/:id",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/comments/#delete-a-comment"
  },
  {
    "name": "List events for an issue",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/issues/:number/events",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/events/#list-events-for-an-issue"
  },
  {
    "name": "List events for a repository",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/issues/events",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/events/#list-events-for-a-repository"
  },
  {
    "name": "Get a single event",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/issues/events/:id",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "\n\n**Note:** If the event was triggered by a user via a GitHub App, the `performed_via_github_app` key will contain information on that GitHub App.",
    "documentationUrl": "https://developer.github.com/v3/issues/events/#get-a-single-event"
  },
  {
    "name": "List all labels for this repository",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/labels",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/labels/#list-all-labels-for-this-repository"
  },
  {
    "name": "Get a single label",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/labels/:name",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/labels/#get-a-single-label"
  },
  {
    "name": "Create a label",
    "enabledForApps": true,
    "method": "POST",
    "path": "/repos/:owner/:repo/labels",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://a248.e.akamai.net/assets.github.com/images/icons/emoji/unicode/1f353.png \":strawberry:\"). For a full list of available emoji and codes, see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/).",
        "required": true
      },
      {
        "name": "color",
        "type": "string",
        "description": "The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.",
        "required": true
      },
      {
        "name": "description",
        "type": "string",
        "description": "A short description of the label.",
        "required": false
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/labels/#create-a-label"
  },
  {
    "name": "Update a label",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/labels/:oldname",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "oldname",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://a248.e.akamai.net/assets.github.com/images/icons/emoji/unicode/1f353.png \":strawberry:\"). For a full list of available emoji and codes, see [emoji-cheat-sheet.com](http://emoji-cheat-sheet.com/).",
        "required": false
      },
      {
        "name": "color",
        "type": "string",
        "description": "The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.",
        "required": false
      },
      {
        "name": "description",
        "type": "string",
        "description": "A short description of the label.",
        "required": false
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/labels/#update-a-label"
  },
  {
    "name": "Delete a label",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/labels/:name",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/labels/#delete-a-label"
  },
  {
    "name": "List labels on an issue",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/issues/:number/labels",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/labels/#list-labels-on-an-issue"
  },
  {
    "name": "Add labels to an issue",
    "enabledForApps": true,
    "method": "POST",
    "path": "/repos/:owner/:repo/issues/:number/labels",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/labels/#add-labels-to-an-issue"
  },
  {
    "name": "Remove a label from an issue",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/issues/:number/labels/:name",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/labels/#remove-a-label-from-an-issue"
  },
  {
    "name": "Replace all labels for an issue",
    "enabledForApps": true,
    "method": "PUT",
    "path": "/repos/:owner/:repo/issues/:number/labels",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      }
    ],
    "description": "Sending an empty array (`[]`) will remove all Labels from the Issue.",
    "documentationUrl": "https://developer.github.com/v3/issues/labels/#replace-all-labels-for-an-issue"
  },
  {
    "name": "Remove all labels from an issue",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/issues/:number/labels",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/labels/#remove-all-labels-from-an-issue"
  },
  {
    "name": "Get labels for every issue in a milestone",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/milestones/:number/labels",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/labels/#get-labels-for-every-issue-in-a-milestone"
  },
  {
    "name": "List milestones for a repository",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/milestones",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "state",
        "type": "string",
        "description": "The state of the milestone. Either `open`, `closed`, or `all`.",
        "default": "open",
        "required": false
      },
      {
        "name": "sort",
        "type": "string",
        "description": "What to sort results by. Either `due_on` or `completeness`.",
        "default": "due_on",
        "required": false
      },
      {
        "name": "direction",
        "type": "string",
        "description": "The direction of the sort. Either `asc` or `desc`.",
        "default": "asc",
        "required": false
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository"
  },
  {
    "name": "Get a single milestone",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/milestones/:number",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/milestones/#get-a-single-milestone"
  },
  {
    "name": "Create a milestone",
    "enabledForApps": true,
    "method": "POST",
    "path": "/repos/:owner/:repo/milestones",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "description": "The title of the milestone.",
        "required": true
      },
      {
        "name": "state",
        "type": "string",
        "description": "The state of the milestone. Either `open` or `closed`.",
        "default": "open",
        "required": false
      },
      {
        "name": "description",
        "type": "string",
        "description": "A description of the milestone.",
        "required": false
      },
      {
        "name": "due_on",
        "type": "string",
        "description": "The milestone due date. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "required": false
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/milestones/#create-a-milestone"
  },
  {
    "name": "Update a milestone",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/milestones/:number",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "description": "The title of the milestone.",
        "required": false
      },
      {
        "name": "state",
        "type": "string",
        "description": "The state of the milestone. Either `open` or `closed`.",
        "default": "open",
        "required": false
      },
      {
        "name": "description",
        "type": "string",
        "description": "A description of the milestone.",
        "required": false
      },
      {
        "name": "due_on",
        "type": "string",
        "description": "The milestone due date. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "required": false
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/milestones/#update-a-milestone"
  },
  {
    "name": "Delete a milestone",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/milestones/:number",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/milestones/#delete-a-milestone"
  },
  {
    "name": "List events for an issue",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/issues/:number/timeline",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/issues/timeline/#list-events-for-an-issue"
  }
]
