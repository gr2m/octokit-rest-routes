[
  {
    "name": "List public events",
    "enabledForApps": true,
    "method": "GET",
    "path": "/events",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/events/#list-public-events"
  },
  {
    "name": "List repository events",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/events",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/events/#list-repository-events"
  },
  {
    "name": "List public events for a network of repositories",
    "enabledForApps": true,
    "method": "GET",
    "path": "/networks/:owner/:repo/events",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/events/#list-public-events-for-a-network-of-repositories"
  },
  {
    "name": "List public events for an organization",
    "enabledForApps": true,
    "method": "GET",
    "path": "/orgs/:org/events",
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/events/#list-public-events-for-an-organization"
  },
  {
    "name": "List events that a user has received",
    "enabledForApps": true,
    "method": "GET",
    "path": "/users/:username/received_events",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "These are events that you've received by watching repos and following users. If you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events.",
    "documentationUrl": "https://developer.github.com/v3/activity/events/#list-events-that-a-user-has-received"
  },
  {
    "name": "List public events that a user has received",
    "enabledForApps": true,
    "method": "GET",
    "path": "/users/:username/received_events/public",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/events/#list-public-events-that-a-user-has-received"
  },
  {
    "name": "List events performed by a user",
    "enabledForApps": true,
    "method": "GET",
    "path": "/users/:username/events",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.",
    "documentationUrl": "https://developer.github.com/v3/activity/events/#list-events-performed-by-a-user"
  },
  {
    "name": "List public events performed by a user",
    "enabledForApps": true,
    "method": "GET",
    "path": "/users/:username/events/public",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/events/#list-public-events-performed-by-a-user"
  },
  {
    "name": "List events for an organization",
    "enabledForApps": false,
    "method": "GET",
    "path": "/users/:username/events/orgs/:org",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "This is the user's organization dashboard. You must be authenticated as the user to view this.",
    "documentationUrl": "https://developer.github.com/v3/activity/events/#list-events-for-an-organization"
  },
  {
    "name": "List Feeds",
    "enabledForApps": true,
    "method": "GET",
    "path": "/feeds",
    "params": [],
    "description": "GitHub provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://developer.github.com/v3/#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://developer.github.com/v3/#basic-authentication) since current feed URIs use the older, non revocable auth tokens.",
    "documentationUrl": "https://developer.github.com/v3/activity/feeds/#list-feeds"
  },
  {
    "name": "List your notifications",
    "enabledForApps": false,
    "method": "GET",
    "path": "/notifications",
    "params": [
      {
        "name": "all",
        "type": "boolean",
        "description": "If `true`, show notifications marked as read.",
        "default": false,
        "required": false,
        "location": "query"
      },
      {
        "name": "participating",
        "type": "boolean",
        "description": "If `true`, only shows notifications in which the user is directly participating or mentioned.",
        "default": false,
        "required": false,
        "location": "query"
      },
      {
        "name": "since",
        "type": "string",
        "description": "Only show notifications updated after the given time. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "default": "<current date/time>",
        "required": false,
        "location": "query"
      },
      {
        "name": "before",
        "type": "string",
        "description": "Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "required": false,
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "List all notifications for the current user, sorted by most recently updated.",
    "documentationUrl": "https://developer.github.com/v3/activity/notifications/#list-your-notifications"
  },
  {
    "name": "List your notifications in a repository",
    "enabledForApps": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/notifications",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "all",
        "type": "boolean",
        "description": "If `true`, show notifications marked as read.",
        "default": false,
        "required": false,
        "location": "query"
      },
      {
        "name": "participating",
        "type": "boolean",
        "description": "If `true`, only shows notifications in which the user is directly participating or mentioned.",
        "default": false,
        "required": false,
        "location": "query"
      },
      {
        "name": "since",
        "type": "string",
        "description": "Only show notifications updated after the given time. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "default": "<current date/time>",
        "required": false,
        "location": "query"
      },
      {
        "name": "before",
        "type": "string",
        "description": "Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "required": false,
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "List all notifications for the current user.",
    "documentationUrl": "https://developer.github.com/v3/activity/notifications/#list-your-notifications-in-a-repository"
  },
  {
    "name": "Mark as read",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/notifications",
    "params": [
      {
        "name": "last_read_at",
        "type": "string",
        "description": "Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "default": "<current date/time>",
        "required": false,
        "location": "body"
      }
    ],
    "description": "Marking a notification as \"read\" removes it from the [default view on GitHub](https://github.com/notifications).",
    "documentationUrl": "https://developer.github.com/v3/activity/notifications/#mark-as-read"
  },
  {
    "name": "Mark notifications as read in a repository",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/notifications",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "last_read_at",
        "type": "string",
        "description": "Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "default": "<current date/time>",
        "required": false,
        "location": "body"
      }
    ],
    "description": "Marking all notifications in a repository as \"read\" removes them from the [default view on GitHub](https://github.com/notifications).",
    "documentationUrl": "https://developer.github.com/v3/activity/notifications/#mark-notifications-as-read-in-a-repository"
  },
  {
    "name": "View a single thread",
    "enabledForApps": false,
    "method": "GET",
    "path": "/notifications/threads/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/notifications/#view-a-single-thread"
  },
  {
    "name": "Mark a thread as read",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/notifications/threads/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/notifications/#mark-a-thread-as-read"
  },
  {
    "name": "Get a Thread Subscription",
    "enabledForApps": false,
    "method": "GET",
    "path": "/notifications/threads/:id/subscription",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "This checks to see if the current user is subscribed to a thread. You can also [get a Repository subscription](https://developer.github.com/v3/activity/watching/#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mention**ed, or manually subscribe to a thread.",
    "documentationUrl": "https://developer.github.com/v3/activity/notifications/#get-a-thread-subscription"
  },
  {
    "name": "Set a Thread Subscription",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/notifications/threads/:id/subscription",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "subscribed",
        "type": "boolean",
        "description": "Determines if notifications should be received from this thread",
        "required": false,
        "location": "body"
      },
      {
        "name": "ignored",
        "type": "boolean",
        "description": "Determines if all notifications should be blocked from this thread",
        "required": false,
        "location": "body"
      }
    ],
    "description": "This lets you subscribe or unsubscribe from a conversation. Unsubscribing from a conversation mutes all future notifications (until you comment or get **@mention**ed once more).",
    "documentationUrl": "https://developer.github.com/v3/activity/notifications/#set-a-thread-subscription"
  },
  {
    "name": "Delete a Thread Subscription",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/notifications/threads/:id/subscription",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/notifications/#delete-a-thread-subscription"
  },
  {
    "name": "List Stargazers",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/stargazers",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:",
    "documentationUrl": "https://developer.github.com/v3/activity/starring/#list-stargazers"
  },
  {
    "method": "GET",
    "path": "/users/:username/starred",
    "enabledForApps": false,
    "name": "List repositories being starred by a user",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "sort",
        "type": "string",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "default": "created",
        "required": false,
        "enum": [
          "created",
          "updated"
        ],
        "location": "query"
      },
      {
        "name": "direction",
        "type": "string",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "default": "desc",
        "required": false,
        "enum": [
          "asc",
          "desc"
        ],
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:",
    "documentationUrl": "https://developer.github.com/v3/activity/starring/#list-repositories-being-starred"
  },
  {
    "method": "GET",
    "path": "/user/starred",
    "enabledForApps": false,
    "name": "List repositories being starred by the authenticated user",
    "params": [
      {
        "name": "sort",
        "type": "string",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "default": "created",
        "required": false,
        "enum": [
          "created",
          "updated"
        ],
        "location": "query"
      },
      {
        "name": "direction",
        "type": "string",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "default": "desc",
        "required": false,
        "enum": [
          "asc",
          "desc"
        ],
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:",
    "documentationUrl": "https://developer.github.com/v3/activity/starring/#list-repositories-being-starred"
  },
  {
    "name": "Check if you are starring a repository",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/starred/:owner/:repo",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Requires for the user to be authenticated.",
    "documentationUrl": "https://developer.github.com/v3/activity/starring/#check-if-you-are-starring-a-repository"
  },
  {
    "name": "Star a repository",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/user/starred/:owner/:repo",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Requires for the user to be authenticated.\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"",
    "documentationUrl": "https://developer.github.com/v3/activity/starring/#star-a-repository"
  },
  {
    "name": "Unstar a repository",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/user/starred/:owner/:repo",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Requires for the user to be authenticated.",
    "documentationUrl": "https://developer.github.com/v3/activity/starring/#unstar-a-repository"
  },
  {
    "name": "List watchers",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/subscribers",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/watching/#list-watchers"
  },
  {
    "method": "GET",
    "path": "/users/:username/subscriptions",
    "enabledForApps": false,
    "name": "List repositories being watched by a user",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/watching/#list-repositories-being-watched"
  },
  {
    "method": "GET",
    "path": "/user/subscriptions",
    "enabledForApps": false,
    "name": "List repositories being watched by the authenticated user",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/watching/#list-repositories-being-watched"
  },
  {
    "name": "Get a Repository Subscription",
    "enabledForApps": false,
    "method": "GET",
    "path": "/repos/:owner/:repo/subscription",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/activity/watching/#get-a-repository-subscription"
  },
  {
    "name": "Set a Repository Subscription",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/repos/:owner/:repo/subscription",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "subscribed",
        "type": "boolean",
        "description": "Determines if notifications should be received from this repository.",
        "required": false,
        "location": "body"
      },
      {
        "name": "ignored",
        "type": "boolean",
        "description": "Determines if all notifications should be blocked from this repository.",
        "required": false,
        "location": "body"
      }
    ],
    "description": "If you would like to watch a repository, set `subscribed` to `true`. If you would like to ignore notifications made within a repository, set `ignored` to `true`. If you would like to stop watching a repository, [delete the repository's subscription](#delete-a-repository-subscription) completely.",
    "documentationUrl": "https://developer.github.com/v3/activity/watching/#set-a-repository-subscription"
  },
  {
    "name": "Delete a Repository Subscription",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/subscription",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, [set the repository's subscription manually](#set-a-repository-subscription).",
    "documentationUrl": "https://developer.github.com/v3/activity/watching/#delete-a-repository-subscription"
  },
  {
    "name": "Check if you are watching a repository (LEGACY)",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/subscriptions/:owner/:repo",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Requires for the user to be authenticated.",
    "documentationUrl": "https://developer.github.com/v3/activity/watching/#check-if-you-are-watching-a-repository-legacy"
  },
  {
    "name": "Watch a repository (LEGACY)",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/user/subscriptions/:owner/:repo",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Requires the user to be authenticated.\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"",
    "documentationUrl": "https://developer.github.com/v3/activity/watching/#watch-a-repository-legacy"
  },
  {
    "name": "Stop watching a repository (LEGACY)",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/user/subscriptions/:owner/:repo",
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Requires for the user to be authenticated.",
    "documentationUrl": "https://developer.github.com/v3/activity/watching/#stop-watching-a-repository-legacy"
  }
]
