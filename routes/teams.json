[
  {
    "name": "List teams",
    "enabledForApps": true,
    "method": "GET",
    "path": "/orgs/:org/teams",
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/teams/#list-teams"
  },
  {
    "name": "Get team",
    "enabledForApps": true,
    "method": "GET",
    "path": "/teams/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/teams/#get-team"
  },
  {
    "name": "Create team",
    "enabledForApps": false,
    "method": "POST",
    "path": "/orgs/:org/teams",
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the team.",
        "required": true
      },
      {
        "name": "description",
        "type": "string",
        "description": "The description of the team.",
        "required": false
      },
      {
        "name": "maintainers",
        "type": "array of strings",
        "description": "The logins of organization members to add as maintainers of the team.",
        "required": false
      },
      {
        "name": "repo_names",
        "type": "array of strings",
        "description": "The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.",
        "required": false
      },
      {
        "name": "privacy",
        "type": "string",
        "description": "The level of privacy this team should have. The options are:  \n**For a non-nested team:**  \n\\* `secret` \\- only visible to organization owners and members of this team.  \n\\* `closed` \\- visible to all members of this organization.  \nDefault: `secret`  \n**For a parent or child team:**  \n\\* `closed` \\- visible to all members of this organization.  \nDefault for child team: `closed`  \n**Note**: You must pass the `hellcat-preview` media type to set privacy default to `closed` for child teams. **For a parent or child team:**  ",
        "default": "secret",
        "required": false
      },
      {
        "name": "permission",
        "type": "enum",
        "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` \\- team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` \\- team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` \\- team members can pull, push and administer newly-added repositories.",
        "default": "pull",
        "required": false,
        "options": [
          "pull",
          "push",
          "admin"
        ]
      },
      {
        "name": "parent_team_id",
        "type": "integer",
        "description": "The ID of a team to set as the parent team. **Note**: You must pass the `hellcat-preview` media type to use this parameter.",
        "required": false
      }
    ],
    "description": "To create a team, the authenticated user must be a member of `:org`.",
    "documentationUrl": "https://developer.github.com/v3/teams/#create-team"
  },
  {
    "name": "Edit team",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/teams/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "description": "The name of the team.",
        "required": true
      },
      {
        "name": "description",
        "type": "string",
        "description": "The description of the team.",
        "required": false
      },
      {
        "name": "privacy",
        "type": "string",
        "description": "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:  \n**For a non-nested team:**  \n\\* `secret` \\- only visible to organization owners and members of this team.  \n\\* `closed` \\- visible to all members of this organization.  \n**For a parent or child team:**  \n\\* `closed` \\- visible to all members of this organization.",
        "required": false
      },
      {
        "name": "permission",
        "type": "enum",
        "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:  \n\\* `pull` \\- team members can pull, but not push to or administer newly-added repositories.  \n\\* `push` \\- team members can pull and push, but not administer newly-added repositories.  \n\\* `admin` \\- team members can pull, push and administer newly-added repositories.",
        "default": "pull",
        "required": false,
        "options": [
          "pull",
          "push",
          "admin"
        ]
      },
      {
        "name": "parent_team_id",
        "type": "integer",
        "description": "The ID of a team to set as the parent team. **Note**: You must pass the `hellcat-preview` media type to use this parameter.",
        "required": false
      }
    ],
    "description": "To edit a team, the authenticated user must either be an owner of the org that the team is associated with, or a maintainer of the team.\n\n**Note:** With nested teams, the `privacy` for parent teams cannot be `secret`.",
    "documentationUrl": "https://developer.github.com/v3/teams/#edit-team"
  },
  {
    "name": "Delete team",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/teams/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "To delete a team, the authenticated user must be a team maintainer or an owner of the org associated with the team.\n\nIf you are an organization owner and you pass the `hellcat-preview` media type, deleting a parent team will delete all of its child teams as well.",
    "documentationUrl": "https://developer.github.com/v3/teams/#delete-team"
  },
  {
    "name": "List child teams",
    "enabledForApps": true,
    "method": "GET",
    "path": "/teams/:id/teams",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "At this time, the `hellcat-preview` media type is required to use this endpoint.\n\n",
    "documentationUrl": "https://developer.github.com/v3/teams/#list-child-teams"
  },
  {
    "name": "List team repos",
    "enabledForApps": true,
    "method": "GET",
    "path": "/teams/:id/repos",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "**Note**: If you pass the `hellcat-preview` media type, the response will include any repositories inherited through a parent team.",
    "documentationUrl": "https://developer.github.com/v3/teams/#list-team-repos"
  },
  {
    "name": "Check if a team manages a repository",
    "enabledForApps": false,
    "method": "GET",
    "path": "/teams/:id/repos/:owner/:repo",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "**Note**: If you pass the `hellcat-preview` media type, repositories inherited through a parent team will be checked as well.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](/v3/media/) via the `Accept` header:",
    "documentationUrl": "https://developer.github.com/v3/teams/#check-if-a-team-manages-a-repository"
  },
  {
    "name": "Add or update team repository",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/teams/:id/repos/:org/:repo",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "permission",
        "type": "enum",
        "description": "The permission to grant the team on this repository. Can be one of:  \n\\* `pull` \\- team members can pull, but not push to or administer this repository.  \n\\* `push` \\- team members can pull and push, but not administer this repository.  \n\\* `admin` \\- team members can pull, push and administer this repository.  \n  \nIf no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.  \n**Note**: If you pass the `hellcat-preview` media type, you can promote—but not demote—a `permission` attribute inherited through a parent team.",
        "required": false,
        "options": [
          "pull",
          "push",
          "admin",
          "permission",
          "hellcat-preview"
        ]
      }
    ],
    "description": "To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. Also, the repository must be owned by the organization, or a direct fork of a repository owned by the organization.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](/v3/#http-verbs).\"\n\n",
    "documentationUrl": "https://developer.github.com/v3/teams/#add-or-update-team-repository"
  },
  {
    "name": "Remove team repository",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/teams/:id/repos/:owner/:repo",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.",
    "documentationUrl": "https://developer.github.com/v3/teams/#remove-team-repository"
  },
  {
    "name": "List user teams",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/teams",
    "params": [
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](/apps/building-integrations/setting-up-and-registering-oauth-apps/about-scopes-for-oauth-apps/) when authenticating via [OAuth](/apps/building-integrations/setting-up-and-registering-oauth-apps/).",
    "documentationUrl": "https://developer.github.com/v3/teams/#list-user-teams"
  },
  {
    "name": "List team projects",
    "enabledForApps": false,
    "method": "GET",
    "path": "/teams/:id/projects",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "Lists the organization projects for a team. If you pass the `hellcat-preview` media type, the response will include projects inherited from a parent team.",
    "documentationUrl": "https://developer.github.com/v3/teams/#list-team-projects"
  },
  {
    "name": "Review a team project",
    "enabledForApps": false,
    "method": "GET",
    "path": "/teams/:id/projects/:project_id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "project_id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. If you pass the `hellcat-preview` media type, the response will include projects inherited from a parent team.",
    "documentationUrl": "https://developer.github.com/v3/teams/#review-a-team-project"
  },
  {
    "name": "Add or update team project",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/teams/:id/projects/:project_id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "project_id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "permission",
        "type": "enum",
        "description": "The permission to grant to the team for this project. Can be one of:  \n\\* `read` \\- team members can read, but not write to or administer this project.  \n\\* `write` \\- team members can read and write, but not administer this project.  \n\\* `admin` \\- team members can read, write and administer this project.  \nDefault: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](/v3/#http-verbs).\"  \n**Note**: If you pass the `hellcat-preview` media type, you can promote—but not demote—a `permission` attribute inherited from a parent team.",
        "required": false,
        "options": [
          "read",
          "write",
          "admin",
          "permission",
          "Content-Length",
          "hellcat-preview"
        ]
      }
    ],
    "description": "Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.",
    "documentationUrl": "https://developer.github.com/v3/teams/#add-or-update-team-project"
  },
  {
    "name": "Remove team project",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/teams/:id/projects/:project_id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "project_id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. **Note:** This endpoint removes the project from the team, but does not delete it.",
    "documentationUrl": "https://developer.github.com/v3/teams/#remove-team-project"
  },
  {
    "name": "List discussions",
    "enabledForApps": true,
    "method": "GET",
    "path": "/teams/:team_id/discussions",
    "params": [
      {
        "name": "team_id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "direction",
        "type": "enum",
        "description": "Sorts the discussion comments by the date they were created. To return the oldest comments first, set to `asc`. Can be one of `asc` or `desc`.",
        "default": "desc",
        "required": false,
        "options": [
          "asc",
          "desc"
        ]
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](/apps/building-oauth-apps/scopes-for-oauth-apps/).",
    "documentationUrl": "https://developer.github.com/v3/teams/discussions/#list-discussions"
  },
  {
    "name": "Get a single discussion",
    "enabledForApps": true,
    "method": "GET",
    "path": "/teams/:team_id/discussions/:discussion_number",
    "params": [
      {
        "name": "team_id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "discussion_number",
        "type": "number",
        "required": true,
        "description": ""
      }
    ],
    "description": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](/apps/building-oauth-apps/scopes-for-oauth-apps/).",
    "documentationUrl": "https://developer.github.com/v3/teams/discussions/#get-a-single-discussion"
  },
  {
    "name": "Create a discussion",
    "enabledForApps": true,
    "method": "POST",
    "path": "/teams/:team_id/discussions",
    "params": [
      {
        "name": "team_id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "description": "The discussion post's title.",
        "required": true
      },
      {
        "name": "body",
        "type": "string",
        "description": "The discussion post's body text.",
        "required": true
      },
      {
        "name": "private",
        "type": "boolean",
        "description": "Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.",
        "default": false,
        "required": false
      }
    ],
    "description": "Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](/apps/building-oauth-apps/scopes-for-oauth-apps/).",
    "documentationUrl": "https://developer.github.com/v3/teams/discussions/#create-a-discussion"
  },
  {
    "name": "Edit a discussion",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/teams/:team_id/discussions/:discussion_number",
    "params": [
      {
        "name": "team_id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "discussion_number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "title",
        "type": "string",
        "description": "The discussion post's title.",
        "required": false
      },
      {
        "name": "body",
        "type": "string",
        "description": "The discussion post's body text.",
        "required": false
      }
    ],
    "description": "Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](/apps/building-oauth-apps/scopes-for-oauth-apps/).",
    "documentationUrl": "https://developer.github.com/v3/teams/discussions/#edit-a-discussion"
  },
  {
    "name": "Delete a discussion",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/teams/:team_id/discussions/:discussion_number",
    "params": [
      {
        "name": "team_id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "discussion_number",
        "type": "number",
        "required": true,
        "description": ""
      }
    ],
    "description": "Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](/apps/building-oauth-apps/scopes-for-oauth-apps/).",
    "documentationUrl": "https://developer.github.com/v3/teams/discussions/#delete-a-discussion"
  },
  {
    "name": "List comments",
    "enabledForApps": true,
    "method": "GET",
    "path": "/teams/:team_id/discussions/:discussion_number/comments",
    "params": [
      {
        "name": "team_id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "discussion_number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "direction",
        "type": "enum",
        "description": "Sorts the discussion comments by the date they were created. To return the oldest comments first, set to `asc`. Can be one of `asc` or `desc`.",
        "default": "desc",
        "required": false,
        "options": [
          "asc",
          "desc"
        ]
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](/apps/building-oauth-apps/scopes-for-oauth-apps/).",
    "documentationUrl": "https://developer.github.com/v3/teams/discussion_comments/#list-comments"
  },
  {
    "name": "Get a single comment",
    "enabledForApps": true,
    "method": "GET",
    "path": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number",
    "params": [
      {
        "name": "team_id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "discussion_number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "comment_number",
        "type": "number",
        "required": true,
        "description": ""
      }
    ],
    "description": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](/apps/building-oauth-apps/scopes-for-oauth-apps/).",
    "documentationUrl": "https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment"
  },
  {
    "name": "Create a comment",
    "enabledForApps": true,
    "method": "POST",
    "path": "/teams/:team_id/discussions/:discussion_number/comments",
    "params": [
      {
        "name": "team_id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "discussion_number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "body",
        "type": "string",
        "description": "The discussion comment's body text.",
        "required": true
      }
    ],
    "description": "Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](/apps/building-oauth-apps/scopes-for-oauth-apps/).",
    "documentationUrl": "https://developer.github.com/v3/teams/discussion_comments/#create-a-comment"
  },
  {
    "name": "Edit a comment",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number",
    "params": [
      {
        "name": "team_id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "discussion_number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "comment_number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "body",
        "type": "string",
        "description": "The discussion comment's body text.",
        "required": true
      }
    ],
    "description": "Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](/apps/building-oauth-apps/scopes-for-oauth-apps/).",
    "documentationUrl": "https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment"
  },
  {
    "name": "Delete a comment",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/teams/:team_id/discussions/:discussion_number/comments/:comment_number",
    "params": [
      {
        "name": "team_id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "discussion_number",
        "type": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "comment_number",
        "type": "number",
        "required": true,
        "description": ""
      }
    ],
    "description": "Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](/apps/building-oauth-apps/scopes-for-oauth-apps/).",
    "documentationUrl": "https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment"
  },
  {
    "name": "List team members",
    "enabledForApps": true,
    "method": "GET",
    "path": "/teams/:id/members",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "role",
        "type": "enum",
        "description": "Filters members returned by their role in the team. Can be one of:  \n\\* `member` \\- normal members of the team.  \n\\* `maintainer` \\- team maintainers.  \n\\* `all` \\- all members of the team.",
        "default": "all",
        "required": false,
        "options": [
          "member",
          "maintainer",
          "all"
        ]
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "If you pass the `hellcat-preview` media type, team members will include the members of child teams.",
    "documentationUrl": "https://developer.github.com/v3/teams/members/#list-team-members"
  },
  {
    "name": "Get team member",
    "enabledForApps": true,
    "method": "GET",
    "path": "/teams/:id/members/:username",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "The \"Get team member\" API (described below) is deprecated.\n\nWe recommend using the [Get team membership API](/v3/teams/members/#get-team-membership) instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user.",
    "documentationUrl": "https://developer.github.com/v3/teams/members/#get-team-member"
  },
  {
    "name": "Add team member",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/teams/:id/members/:username",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "The \"Add team member\" API (described below) is deprecated.\n\nWe recommend using the [Add team membership API](/v3/teams/members/#add-or-update-team-membership) instead. It allows you to invite new organization members to your teams.\n\nTo add a user to a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with, and the user being added must already be a member of at least one other team on the same organization.\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](/v3/#http-verbs).\"\n\nIf you attempt to add an organization to a team, you will get this:\n\nIf you attempt to add a user to a team and that user is not a member of at least one other team on the same organization, you will get this:",
    "documentationUrl": "https://developer.github.com/v3/teams/members/#add-team-member"
  },
  {
    "name": "Remove team member",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/teams/:id/members/:username",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "The \"Remove team member\" API (described below) is deprecated.\n\nWe recommend using the [Remove team membership API](/v3/teams/members/#remove-team-membership) instead. It allows you to remove both active and pending memberships.\n\nTo remove a user from a team, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. NOTE: This does not delete the user, it just removes them from the team.",
    "documentationUrl": "https://developer.github.com/v3/teams/members/#remove-team-member"
  },
  {
    "name": "Get team membership",
    "enabledForApps": true,
    "method": "GET",
    "path": "/teams/:id/memberships/:username",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "If you pass the `hellcat-preview` media type, team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create team](/v3/teams#create-team).",
    "documentationUrl": "https://developer.github.com/v3/teams/members/#get-team-membership"
  },
  {
    "name": "Add or update team membership",
    "enabledForApps": true,
    "method": "PUT",
    "path": "/teams/:id/memberships/:username",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "role",
        "type": "enum",
        "description": "The role that this user should have in the team. Can be one of:  \n\\* `member` \\- a normal member of the team.  \n\\* `maintainer` \\- a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.",
        "default": "member",
        "required": false,
        "options": [
          "member",
          "maintainer"
        ]
      }
    ],
    "description": "If the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a maintainer of the team.\n\nIf the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a maintainer of the team.\n\nIf you attempt to add an organization to a team, you will get this:",
    "documentationUrl": "https://developer.github.com/v3/teams/members/#add-or-update-team-membership"
  },
  {
    "name": "Remove team membership",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/teams/:id/memberships/:username",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "To remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. NOTE: This does not delete the user, it just removes their membership from the team.",
    "documentationUrl": "https://developer.github.com/v3/teams/members/#remove-team-membership"
  },
  {
    "name": "List pending team invitations",
    "enabledForApps": true,
    "method": "GET",
    "path": "/teams/:id/invitations",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.",
    "documentationUrl": "https://developer.github.com/v3/teams/members/#list-pending-team-invitations"
  }
]
