[
  {
    "name": "Upload a license for the first time",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/start",
    "params": [
      {
        "name": "license",
        "type": "string",
        "description": "The content of your _.ghl_ license file.",
        "required": true
      },
      {
        "name": "password",
        "type": "string",
        "description": "You **must** provide a password _only if_ you are uploading your license for the first time. If you previously set a password through the web interface, you don't need this parameter.",
        "required": false
      },
      {
        "name": "settings",
        "type": "string",
        "description": "An optional JSON string containing the installation settings.",
        "required": false
      }
    ],
    "description": "When you boot a virtual machine for the first time, you can use the following endpoint to upload a license:\n\nNote that you need to POST to [`/setup/api/configure`](#start-a-configuration-process) to start the actual configuration process.\n\nWhen using this endpoint, your Enterprise instance must have a password set. This can be accomplished two ways:\n\n1.  If you're working directly with the API before accessing the web interface, you must pass in the password parameter to set your password.\n2.  If you set up your instance via the web interface before accessing the API, your calls to this endpoint do not need the password parameter.\n\nFor a list of the available settings, see [the `/setup/api/settings` endpoint](#retrieve-settings).",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#upload-a-license-for-the-first-time"
  },
  {
    "name": "Upgrade a license",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/upgrade",
    "params": [
      {
        "name": "license",
        "type": "string",
        "description": "The content of your new _.ghl_ license file.",
        "required": false
      }
    ],
    "description": "This API upgrades your license and also triggers the configuration process:",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#upgrade-a-license"
  },
  {
    "name": "Check configuration status",
    "enabledForApps": false,
    "method": "GET",
    "path": "/setup/api/configcheck",
    "params": [],
    "description": "This endpoint allows you to check the status of the most recent configuration process:\n\nNote that you may need to wait several seconds after you start a process before you can check its status.\n\nThe different statuses are:\n\n| Status        | Description                       |\n| ------------- | --------------------------------- |\n| `PENDING`     | The job has not started yet       |\n| `CONFIGURING` | The job is running                |\n| `DONE`        | The job has finished correctly    |\n| `FAILED`      | The job has finished unexpectedly |",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#check-configuration-status"
  },
  {
    "name": "Start a configuration process",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/configure",
    "params": [],
    "description": "This endpoint allows you to start a configuration process at any time for your updated settings to take effect:",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#start-a-configuration-process"
  },
  {
    "name": "Retrieve settings",
    "enabledForApps": false,
    "method": "GET",
    "path": "/setup/api/settings",
    "params": [],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#retrieve-settings"
  },
  {
    "name": "Modify settings",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/setup/api/settings",
    "params": [
      {
        "name": "settings",
        "type": "string",
        "description": "A JSON string with the new settings. Note that you only need to pass the specific settings you want to modify.",
        "required": true
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#modify-settings"
  },
  {
    "name": "Check maintenance status",
    "enabledForApps": false,
    "method": "GET",
    "path": "/setup/api/maintenance",
    "params": [],
    "description": "Check your installation's maintenance status:",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#check-maintenance-status"
  },
  {
    "name": "Enable or disable maintenance mode",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/maintenance",
    "params": [
      {
        "name": "maintenance",
        "type": "string",
        "description": "A JSON string with the attributes `enabled` and `when`.",
        "required": true
      }
    ],
    "description": "The possible values for `enabled` are `true` and `false`. When it's `false`, the attribute `when` is ignored and the maintenance mode is turned off. `when` defines the time period when the maintenance was enabled.\n\nThe possible values for `when` are `now` or any date parseable by [mojombo/chronic](https://github.com/mojombo/chronic).",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#enable-or-disable-maintenance-mode"
  },
  {
    "name": "Retrieve authorized SSH keys",
    "enabledForApps": false,
    "method": "GET",
    "path": "/setup/api/settings/authorized-keys",
    "params": [],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#retrieve-authorized-ssh-keys"
  },
  {
    "name": "Add a new authorized SSH key",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/settings/authorized-keys",
    "params": [
      {
        "name": "authorized_key",
        "type": "string",
        "description": "The path to the public SSH key.",
        "required": true
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#add-a-new-authorized-ssh-key"
  },
  {
    "name": "Remove an authorized SSH key",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/setup/api/settings/authorized-keys",
    "params": [
      {
        "name": "authorized_key",
        "type": "string",
        "description": "The path to the public SSH key.",
        "required": true
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#remove-an-authorized-ssh-key"
  }
]