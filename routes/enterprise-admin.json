[
  {
    "name": "Get statistics",
    "enabledForApps": false,
    "method": "GET",
    "path": "/enterprise/stats/:type",
    "params": [
      {
        "name": "type",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "There are a variety of types to choose from:\n\n| Type         | Description                                                                                         |\n| ------------ | --------------------------------------------------------------------------------------------------- |\n| `issues`     | The number of open and closed issues.                                                               |\n| `hooks`      | The number of active and inactive hooks.                                                            |\n| `milestones` | The number of open and closed milestones.                                                           |\n| `orgs`       | The number of organizations, teams, team members, and disabled organizations.                       |\n| `comments`   | The number of comments on issues, pull requests, commits, and gists.                                |\n| `pages`      | The number of GitHub Pages sites.                                                                   |\n| `users`      | The number of suspended and admin users.                                                            |\n| `gists`      | The number of private and public gists.                                                             |\n| `pulls`      | The number of merged, mergeable, and unmergeable pull requests.                                     |\n| `repos`      | The number of organization-owned repositories, root repositories, forks, pushed commits, and wikis. |\n| `all`        | All of the statistics listed above.                                                                 |\n\nThese statistics are cached and will be updated approximately every 10 minutes.",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/admin_stats/#get-statistics"
  },
  {
    "name": "List global hooks",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/hooks",
    "params": [
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/global_webhooks/#list-global-hooks"
  },
  {
    "name": "Get single global hook",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/hooks/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/global_webhooks/#get-single-global-hook"
  },
  {
    "name": "Create a global hook",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/hooks",
    "params": [
      {
        "name": "name",
        "type": "string",
        "description": "Must be passed as \"web\".",
        "required": true
      },
      {
        "name": "config",
        "type": "object",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](#create-hook-config-params).",
        "required": true
      },
      {
        "name": "config.url",
        "type": "string",
        "description": "**Required** The URL to which the payloads will be delivered.",
        "required": false
      },
      {
        "name": "config.content_type",
        "type": "string",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "required": false
      },
      {
        "name": "config.secret",
        "type": "string",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](/webhooks/#delivery-headers) header.",
        "required": false
      },
      {
        "name": "config.insecure_ssl",
        "type": "string",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "required": false
      },
      {
        "name": "events",
        "type": "array",
        "description": "The [events](/v3/activity/events/types/) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events.",
        "default": "`user` and `organization`",
        "required": false
      },
      {
        "name": "active",
        "type": "boolean",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "default": true,
        "required": false
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/global_webhooks/#create-a-global-hook"
  },
  {
    "name": "Edit a global hook",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/hooks/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "config",
        "type": "object",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](#update-hook-config-params).",
        "required": true
      },
      {
        "name": "config.url",
        "type": "string",
        "description": "**Required** The URL to which the payloads will be delivered.",
        "required": false
      },
      {
        "name": "config.content_type",
        "type": "string",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "required": false
      },
      {
        "name": "config.secret",
        "type": "string",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](/webhooks/#delivery-headers) header.",
        "required": false
      },
      {
        "name": "config.insecure_ssl",
        "type": "string",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "required": false
      },
      {
        "name": "events",
        "type": "array",
        "description": "The [events](/v3/activity/events/types/) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events.",
        "default": "`user` and `organization`",
        "required": false
      },
      {
        "name": "active",
        "type": "boolean",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "default": true,
        "required": false
      }
    ],
    "description": "Parameters that are not provided will be overwritten with the default value or removed if no default exists.",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/global_webhooks/#edit-a-global-hook"
  },
  {
    "name": "Ping a global hook",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/hooks/:id/pings",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "This will trigger a [ping event](/webhooks/#ping-event) to be sent to the hook.",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/global_webhooks/#ping-a-global-hook"
  },
  {
    "name": "Delete a global hook",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/admin/hooks/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/global_webhooks/#delete-a-global-hook"
  },
  {
    "name": "Get license information",
    "enabledForApps": false,
    "method": "GET",
    "path": "/enterprise/settings/license",
    "params": [],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/license/#get-license-information"
  },
  {
    "name": "Upload a license for the first time",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/start",
    "params": [
      {
        "name": "license",
        "type": "string",
        "description": "The content of your _.ghl_ license file.",
        "required": true
      },
      {
        "name": "password",
        "type": "string",
        "description": "You **must** provide a password _only if_ you are uploading your license for the first time. If you previously set a password through the web interface, you don't need this parameter.",
        "required": false
      },
      {
        "name": "settings",
        "type": "string",
        "description": "An optional JSON string containing the installation settings.",
        "required": false
      }
    ],
    "description": "When you boot a virtual machine for the first time, you can use the following endpoint to upload a license:\n\nNote that you need to POST to [`/setup/api/configure`](#start-a-configuration-process) to start the actual configuration process.\n\nWhen using this endpoint, your Enterprise instance must have a password set. This can be accomplished two ways:\n\n1.  If you're working directly with the API before accessing the web interface, you must pass in the password parameter to set your password.\n2.  If you set up your instance via the web interface before accessing the API, your calls to this endpoint do not need the password parameter.\n\nFor a list of the available settings, see [the `/setup/api/settings` endpoint](#retrieve-settings).",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#upload-a-license-for-the-first-time"
  },
  {
    "name": "Upgrade a license",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/upgrade",
    "params": [
      {
        "name": "license",
        "type": "string",
        "description": "The content of your new _.ghl_ license file.",
        "required": false
      }
    ],
    "description": "This API upgrades your license and also triggers the configuration process:",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#upgrade-a-license"
  },
  {
    "name": "Check configuration status",
    "enabledForApps": false,
    "method": "GET",
    "path": "/setup/api/configcheck",
    "params": [],
    "description": "This endpoint allows you to check the status of the most recent configuration process:\n\nNote that you may need to wait several seconds after you start a process before you can check its status.\n\nThe different statuses are:\n\n| Status        | Description                       |\n| ------------- | --------------------------------- |\n| `PENDING`     | The job has not started yet       |\n| `CONFIGURING` | The job is running                |\n| `DONE`        | The job has finished correctly    |\n| `FAILED`      | The job has finished unexpectedly |",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#check-configuration-status"
  },
  {
    "name": "Start a configuration process",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/configure",
    "params": [],
    "description": "This endpoint allows you to start a configuration process at any time for your updated settings to take effect:",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#start-a-configuration-process"
  },
  {
    "name": "Retrieve settings",
    "enabledForApps": false,
    "method": "GET",
    "path": "/setup/api/settings",
    "params": [],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#retrieve-settings"
  },
  {
    "name": "Modify settings",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/setup/api/settings",
    "params": [
      {
        "name": "settings",
        "type": "string",
        "description": "A JSON string with the new settings. Note that you only need to pass the specific settings you want to modify.",
        "required": true
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#modify-settings"
  },
  {
    "name": "Check maintenance status",
    "enabledForApps": false,
    "method": "GET",
    "path": "/setup/api/maintenance",
    "params": [],
    "description": "Check your installation's maintenance status:",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#check-maintenance-status"
  },
  {
    "name": "Enable or disable maintenance mode",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/maintenance",
    "params": [
      {
        "name": "maintenance",
        "type": "string",
        "description": "A JSON string with the attributes `enabled` and `when`.",
        "required": true
      }
    ],
    "description": "The possible values for `enabled` are `true` and `false`. When it's `false`, the attribute `when` is ignored and the maintenance mode is turned off. `when` defines the time period when the maintenance was enabled.\n\nThe possible values for `when` are `now` or any date parseable by [mojombo/chronic](https://github.com/mojombo/chronic).",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#enable-or-disable-maintenance-mode"
  },
  {
    "name": "Retrieve authorized SSH keys",
    "enabledForApps": false,
    "method": "GET",
    "path": "/setup/api/settings/authorized-keys",
    "params": [],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#retrieve-authorized-ssh-keys"
  },
  {
    "name": "Add a new authorized SSH key",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/settings/authorized-keys",
    "params": [
      {
        "name": "authorized_key",
        "type": "string",
        "description": "The path to the public SSH key.",
        "required": true
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#add-a-new-authorized-ssh-key"
  },
  {
    "name": "Remove an authorized SSH key",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/setup/api/settings/authorized-keys",
    "params": [
      {
        "name": "authorized_key",
        "type": "string",
        "description": "The path to the public SSH key.",
        "required": true
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/management_console/#remove-an-authorized-ssh-key"
  },
  {
    "name": "Create an organization",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/organizations",
    "params": [
      {
        "name": "login",
        "type": "string",
        "description": "**Required.** The organization's username.",
        "required": false
      },
      {
        "name": "admin",
        "type": "string",
        "description": "**Required.** The login of the user who will manage this organization.",
        "required": false
      },
      {
        "name": "profile_name",
        "type": "string",
        "description": "The organization's display name.",
        "required": false
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/orgs/#create-an-organization"
  },
  {
    "name": "Rename an organization",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/organizations/:org",
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "login",
        "type": "string",
        "description": "**Required.** The organization's new name.",
        "required": false
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/orgs/#rename-an-organization"
  },
  {
    "name": "Get a single pre-receive environment",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/pre-receive-environments/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#get-a-single-pre-receive-environment"
  },
  {
    "name": "List pre-receive environments",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/pre-receive-environments",
    "params": [
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#list-pre-receive-environments"
  },
  {
    "name": "Create a pre-receive environment",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/pre-receive-environments",
    "params": [
      {
        "name": "name",
        "type": "string",
        "description": "The new pre-receive environment's name.",
        "required": true
      },
      {
        "name": "image_url",
        "type": "string",
        "description": "URL from which to download a tarball of this environment.",
        "required": true
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#create-a-pre-receive-environment"
  },
  {
    "name": "Edit a pre-receive environment",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/pre-receive-environments/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "name",
        "type": "string",
        "description": "This pre-receive environment's new name.",
        "required": false
      },
      {
        "name": "image_url",
        "type": "string",
        "description": "URL from which to download a tarball of this environment.",
        "required": false
      }
    ],
    "description": "If you attempt to modify the default environment, you will get a response like this:",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#edit-a-pre-receive-environment"
  },
  {
    "name": "Delete a pre-receive environment",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/admin/pre-receive-environments/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "If you attempt to delete an environment that cannot be deleted, you will get a response like this:\n\nThe possible error messages are:\n\n*   _Cannot modify or delete the default environment_\n*   _Cannot delete environment that has hooks_\n*   _Cannot delete environment when download is in progress_",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#delete-a-pre-receive-environment"
  },
  {
    "name": "Get a pre-receive environment's download status",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/pre-receive-environments/:id/downloads/latest",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "state",
        "type": "string",
        "description": "The state of the most recent download.",
        "required": false
      },
      {
        "name": "downloaded_at",
        "type": "string",
        "description": "The time when the most recent download started.",
        "required": false
      },
      {
        "name": "message",
        "type": "string",
        "description": "On failure, this will have any error messages produced.",
        "required": false
      }
    ],
    "description": "In addition to seeing the download status at the `/admin/pre-receive-environments/:id`, there is also a separate endpoint for just the status.\n\nPossible values for `state` are `not_started`, `in_progress`, `success`, `failed`.",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#get-a-pre-receive-environments-download-status"
  },
  {
    "name": "Trigger a pre-receive environment download",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/pre-receive-environments/:id/downloads",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.\n\nIf a download cannot be triggered, you will get a reponse like this:\n\nThe possible error messages are:\n\n*   _Cannot modify or delete the default environment_\n*   _Can not start a new download when a download is in progress_",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/pre_receive_environments/#trigger-a-pre-receive-environment-download"
  },
  {
    "name": "Get a single pre-receive hook",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/pre-receive-hooks/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/pre_receive_hooks/#get-a-single-pre-receive-hook"
  },
  {
    "name": "List pre-receive hooks",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/pre-receive-hooks",
    "params": [
      {
        "name": "per_page",
        "type": "number",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30
      },
      {
        "name": "page",
        "type": "number",
        "required": true,
        "description": "Page number of the results to fetch.",
        "default": 1
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/pre_receive_hooks/#list-pre-receive-hooks"
  },
  {
    "name": "Create a pre-receive hook",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/pre-receive-hooks",
    "params": [
      {
        "name": "name",
        "type": "string",
        "description": "**Required** The name of the hook.",
        "required": false
      },
      {
        "name": "script",
        "type": "string",
        "description": "**Required** The script that the hook runs.",
        "required": false
      },
      {
        "name": "script_repository",
        "type": "object",
        "description": "**Required** The GitHub repository where the script is kept.",
        "required": false
      },
      {
        "name": "environment",
        "type": "object",
        "description": "**Required** The pre-receive environment where the script is executed.",
        "required": false
      },
      {
        "name": "enforcement",
        "type": "string",
        "description": "The state of enforcement for this hook. default: `disabled`",
        "required": false
      },
      {
        "name": "allow_downstream_configuration",
        "type": "boolean",
        "description": "Whether enforcement can be overridden at the org or repo level. default: `false`",
        "required": false
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/pre_receive_hooks/#create-a-pre-receive-hook"
  },
  {
    "name": "Edit a pre-receive hook",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/pre_receive_hooks/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/pre_receive_hooks/#edit-a-pre-receive-hook"
  },
  {
    "name": "Delete a pre-receive hook",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/admin/pre_receive_hooks/:id",
    "params": [
      {
        "name": "id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/pre_receive_hooks/#delete-a-pre-receive-hook"
  },
  {
    "name": "Update LDAP mapping for a user",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/ldap/users/:username/mapping",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "Pass a JSON payload with the new LDAP Distinguished Name.",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/ldap/#update-ldap-mapping-for-a-user"
  },
  {
    "name": "Sync LDAP mapping for a user",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/ldap/users/:username/sync",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/ldap/#sync-ldap-mapping-for-a-user"
  },
  {
    "name": "Update LDAP mapping for a team",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/ldap/teams/:team_id/mapping",
    "params": [
      {
        "name": "team_id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "Pass a JSON payload with the new LDAP Distinguished Name.",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/ldap/#update-ldap-mapping-for-a-team"
  },
  {
    "name": "Sync LDAP mapping for a team",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/ldap/teams/:team_id/sync",
    "params": [
      {
        "name": "team_id",
        "type": "string",
        "required": true,
        "description": ""
      }
    ],
    "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/ldap/#sync-ldap-mapping-for-a-team"
  },
  {
    "name": "Queue an indexing job",
    "enabledForApps": false,
    "method": "POST",
    "path": "/staff/indexing_jobs",
    "params": [
      {
        "name": "target",
        "type": "string",
        "description": "A string representing the item to index.",
        "required": true
      }
    ],
    "description": "You can index the following targets (replace `:owner` with the name of a user or organization account and `:repository` with the name of a repository):\n\n| Target                      | Description                                                          |\n| --------------------------- | -------------------------------------------------------------------- |\n| `:owner`                    | A user or organization account.                                      |\n| `:owner/:repository`        | A repository.                                                        |\n| `:owner/*`                  | All of a user or organization's repositories.                        |\n| `:owner/:repository/issues` | All the issues in a repository.                                      |\n| `:owner/*/issues`           | All the issues in all of a user or organization's repositories.      |\n| `:owner/:repository/code`   | All the source code in a repository.                                 |\n| `:owner/*/code`             | All the source code in all of a user or organization's repositories. |",
    "documentationUrl": "https://developer.github.com/v3/enterprise-admin/search_indexing/#queue-an-indexing-job"
  }
]
