[
  {
    "name": "List pull requests",
    "method": "GET",
    "path": "/repos/:owner/:repo/pulls",
    "description": "",
    "params": [
      {
        "name": "state",
        "type": "enum",
        "options": [
          "open",
          "closed",
          "all"
        ],
        "description": "Either `open`, `closed`, or `all` to filter by state.",
        "default": "open",
        "required": false
      },
      {
        "name": "head",
        "type": "string",
        "description": "Filter pulls by head user and branch name in the format of `user:ref-name`. Example: `github:new-script-format`.",
        "required": false
      },
      {
        "name": "base",
        "type": "string",
        "description": "Filter pulls by base branch name. Example: `gh-pages`.",
        "required": false
      },
      {
        "name": "sort",
        "type": "string",
        "description": "What to sort results by. Can be either `created`, `updated`, `popularity` (comment count) or `long-running` (age, filtering by pulls updated in the last month).",
        "default": "created",
        "required": false
      },
      {
        "name": "direction",
        "type": "string",
        "description": "The direction of the sort. Can be either `asc` or `desc`.",
        "default": "`desc` when sort is `created` or sort is not specified, otherwise `asc`",
        "required": false
      }
    ],
    "enabledForApps": true,
    "documentationUrl": "https://developer.github.com/v3/pulls/#list-pull-requests"
  },
  {
    "name": "Get a single pull request",
    "method": "GET",
    "path": "/repos/:owner/:repo/pulls/:number",
    "description": "Each time the pull request receives new commits, GitHub creates a merge commit to _test_ whether the pull request can be automatically merged into the base branch. (This _test_ commit is not added to the base branch or the head branch.)\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before a pull request is merged, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After a pull request is merged, the attribute changes depending on how the pull request was merged:\n\n*   If the pull request was merged as a merge commit, the attribute represents the SHA of the merge commit.\n*   If the pull request was merged via a squash, the attribute represents the SHA of the squashed commit on the base branch.\n*   If the pull request was rebased, the attribute represents the commit that the base branch was updated to.\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, this means that the mergeability hasn't been computed yet, and a background job was started to compute it. Give the job a few moments to complete, and then submit the request again. When the job is complete, the response will include a non-`null` value for the `mergeable` attribute.\n\nPass the appropriate [media type](/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.",
    "params": [],
    "enabledForApps": true,
    "documentationUrl": "https://developer.github.com/v3/pulls/#get-a-single-pull-request"
  },
  {
    "name": "Create a pull request",
    "method": "POST",
    "path": "/repos/:owner/:repo/pulls",
    "description": "You can also create a Pull Request from an existing Issue by passing an Issue number instead of `title` and `body`.",
    "params": [
      {
        "name": "title",
        "type": "string",
        "description": "The title of the pull request.",
        "required": true
      },
      {
        "name": "head",
        "type": "string",
        "description": "The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`.",
        "required": true
      },
      {
        "name": "base",
        "type": "string",
        "description": "The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.",
        "required": true
      },
      {
        "name": "body",
        "type": "string",
        "description": "The contents of the pull request.",
        "required": false
      },
      {
        "name": "maintainer_can_modify",
        "type": "boolean",
        "description": "Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.",
        "required": false
      }
    ],
    "enabledForApps": true,
    "documentationUrl": "https://developer.github.com/v3/pulls/#create-a-pull-request"
  },
  {
    "name": "Update a pull request",
    "method": "PATCH",
    "path": "/repos/:owner/:repo/pulls/:number",
    "description": "",
    "params": [
      {
        "name": "title",
        "type": "string",
        "description": "The title of the pull request.",
        "required": false
      },
      {
        "name": "body",
        "type": "string",
        "description": "The contents of the pull request.",
        "required": false
      },
      {
        "name": "state",
        "type": "string",
        "description": "State of this Pull Request. Either `open` or `closed`.",
        "required": false
      },
      {
        "name": "base",
        "type": "string",
        "description": "The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.",
        "required": false
      },
      {
        "name": "maintainer_can_modify",
        "type": "boolean",
        "description": "Indicates whether [maintainers can modify](https://help.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.",
        "required": false
      }
    ],
    "enabledForApps": true,
    "documentationUrl": "https://developer.github.com/v3/pulls/#update-a-pull-request"
  },
  {
    "name": "List commits on a pull request",
    "method": "GET",
    "path": "/repos/:owner/:repo/pulls/:number/commits",
    "description": "**Note:** The response includes a maximum of 250 commits. To receive a complete commit list for pull requests with more than 250 commits, use the [Commit List API](/v3/repos/commits/#list-commits-on-a-repository).",
    "params": [],
    "enabledForApps": true,
    "documentationUrl": "https://developer.github.com/v3/pulls/#list-commits-on-a-pull-request"
  },
  {
    "name": "List pull requests files",
    "method": "GET",
    "path": "/repos/:owner/:repo/pulls/:number/files",
    "description": "**Note:** The response includes a maximum of 300 files.",
    "params": [],
    "enabledForApps": true,
    "documentationUrl": "https://developer.github.com/v3/pulls/#list-pull-requests-files"
  },
  {
    "name": "Get if a pull request has been merged",
    "method": "GET",
    "path": "/repos/:owner/:repo/pulls/:number/merge",
    "description": "",
    "params": [],
    "enabledForApps": true,
    "documentationUrl": "https://developer.github.com/v3/pulls/#get-if-a-pull-request-has-been-merged"
  },
  {
    "name": "Merge a pull request (Merge Button)",
    "method": "PUT",
    "path": "/repos/:owner/:repo/pulls/:number/merge",
    "description": "",
    "params": [
      {
        "name": "commit_title",
        "type": "string",
        "description": "Title for the automatic commit message.",
        "required": false
      },
      {
        "name": "commit_message",
        "type": "string",
        "description": "Extra detail to append to automatic commit message.",
        "required": false
      },
      {
        "name": "sha",
        "type": "string",
        "description": "SHA that pull request head must match to allow merge.",
        "required": false
      },
      {
        "name": "merge_method",
        "type": "string",
        "description": "Merge method to use. Possible values are `merge`, `squash` or `rebase`. Default is `merge`.",
        "required": false
      }
    ],
    "enabledForApps": false,
    "documentationUrl": "https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button"
  }
]