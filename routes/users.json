[
  {
    "name": "Get a single user",
    "enabledForApps": true,
    "method": "GET",
    "path": "/users/:username",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Provides publicly available information about someone with a GitHub account.\n\nThe `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://developer.github.com/v3/#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://developer.github.com/v3/users/emails/)\".",
    "idName": "get-by-username",
    "documentationUrl": "https://developer.github.com/v3/users/#get-a-single-user"
  },
  {
    "name": "Get the authenticated user",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user",
    "params": [],
    "description": "Lists public and private profile information when authenticated through basic auth or OAuth with the `user` scope.\n\nLists public profile information when authenticated through OAuth without the `user` scope.",
    "idName": "get-authenticated",
    "documentationUrl": "https://developer.github.com/v3/users/#get-the-authenticated-user"
  },
  {
    "name": "Update the authenticated user",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/user",
    "params": [
      {
        "name": "name",
        "type": "string",
        "description": "The new name of the user.",
        "required": false,
        "location": "body"
      },
      {
        "name": "email",
        "type": "string",
        "description": "The publicly visible email address of the user.",
        "required": false,
        "location": "body"
      },
      {
        "name": "blog",
        "type": "string",
        "description": "The new blog URL of the user.",
        "required": false,
        "location": "body"
      },
      {
        "name": "company",
        "type": "string",
        "description": "The new company of the user.",
        "required": false,
        "location": "body"
      },
      {
        "name": "location",
        "type": "string",
        "description": "The new location of the user.",
        "required": false,
        "location": "body"
      },
      {
        "name": "hireable",
        "type": "boolean",
        "description": "The new hiring availability of the user.",
        "required": false,
        "location": "body"
      },
      {
        "name": "bio",
        "type": "string",
        "description": "The new short biography of the user.",
        "required": false,
        "location": "body"
      }
    ],
    "description": "**Note:** If your email is set to private and you send an `email` parameter as part of this request to update your profile, your privacy settings are still enforced: the email address will not be displayed on your public profile or via the API.",
    "idName": "update-authenticated",
    "documentationUrl": "https://developer.github.com/v3/users/#update-the-authenticated-user"
  },
  {
    "name": "Get contextual information about a user",
    "enabledForApps": false,
    "method": "GET",
    "path": "/users/:username/hovercard",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "subject_type",
        "type": "string",
        "description": "Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repository`, `issue`, `pull_request`. **Required** when using `subject_id`.",
        "required": false,
        "enum": [
          "organization",
          "repository",
          "issue",
          "pull_request"
        ],
        "location": "query"
      },
      {
        "name": "subject_id",
        "type": "string",
        "description": "Uses the ID for the `subject_type` you specified. **Required** when using `subject_type`.",
        "required": false,
        "location": "query"
      }
    ],
    "description": "Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.\n\nThe `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:",
    "idName": "get-context-for-user",
    "documentationUrl": "https://developer.github.com/v3/users/#get-contextual-information-about-a-user"
  },
  {
    "name": "Get all users",
    "enabledForApps": true,
    "method": "GET",
    "path": "/users",
    "params": [
      {
        "name": "since",
        "type": "string",
        "description": "The integer ID of the last User that you've seen.",
        "required": false,
        "location": "query"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of users.",
    "idName": "list",
    "documentationUrl": "https://developer.github.com/v3/users/#get-all-users"
  },
  {
    "name": "List blocked users",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/blocks",
    "params": [],
    "description": "List the users you've blocked on your personal account.",
    "idName": "list-blocked",
    "documentationUrl": "https://developer.github.com/v3/users/blocking/#list-blocked-users"
  },
  {
    "name": "Check whether you've blocked a user",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/blocks/:username",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "If the user is blocked:\n\nIf the user is not blocked:",
    "idName": "check-blocked",
    "documentationUrl": "https://developer.github.com/v3/users/blocking/#check-whether-youve-blocked-a-user"
  },
  {
    "name": "Block a user",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/user/blocks/:username",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "idName": "block",
    "documentationUrl": "https://developer.github.com/v3/users/blocking/#block-a-user"
  },
  {
    "name": "Unblock a user",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/user/blocks/:username",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "idName": "unblock",
    "documentationUrl": "https://developer.github.com/v3/users/blocking/#unblock-a-user"
  },
  {
    "name": "List email addresses for a user",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/emails",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with the `user:email` scope.",
    "idName": "list-emails",
    "documentationUrl": "https://developer.github.com/v3/users/emails/#list-email-addresses-for-a-user"
  },
  {
    "name": "List public email addresses for a user",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/public_emails",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists your publicly visible email address, which you can set with the [Toggle primary email visibility](#toggle-primary-email-visibility) endpoint. This endpoint is accessible with the `user:email` scope.",
    "idName": "list-public-emails",
    "documentationUrl": "https://developer.github.com/v3/users/emails/#list-public-email-addresses-for-a-user"
  },
  {
    "name": "Add email address(es)",
    "enabledForApps": false,
    "method": "POST",
    "path": "/user/emails",
    "params": [],
    "description": "You can post a single email address or an array of addresses:",
    "idName": "add-emails",
    "documentationUrl": "https://developer.github.com/v3/users/emails/#add-email-addresses"
  },
  {
    "name": "Delete email address(es)",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/user/emails",
    "params": [],
    "description": "You can include a single email address or an array of addresses:",
    "idName": "delete-emails",
    "documentationUrl": "https://developer.github.com/v3/users/emails/#delete-email-addresses"
  },
  {
    "name": "Toggle primary email visibility",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/user/email/visibility",
    "params": [
      {
        "name": "email",
        "type": "string",
        "description": "Specify the _primary_ email address that needs a visibility change.",
        "required": true,
        "location": "body"
      },
      {
        "name": "visibility",
        "type": "string",
        "description": "Use `public` to enable an authenticated user to view the specified email address, or use `private` so this primary email address cannot be seen publicly.",
        "required": true,
        "location": "body"
      }
    ],
    "description": "Sets the visibility for your primary email addresses.",
    "idName": "toggle-primary-email-visibility",
    "documentationUrl": "https://developer.github.com/v3/users/emails/#toggle-primary-email-visibility"
  },
  {
    "method": "GET",
    "path": "/users/:username/followers",
    "enabledForApps": true,
    "name": "List a user's followers",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "idName": "list-followers-for-user",
    "documentationUrl": "https://developer.github.com/v3/users/followers/#list-followers-of-a-user"
  },
  {
    "method": "GET",
    "path": "/user/followers",
    "enabledForApps": true,
    "name": "List the authenticated user's followers",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "idName": "list-followers-for-authenticated-user",
    "documentationUrl": "https://developer.github.com/v3/users/followers/#list-followers-of-a-user"
  },
  {
    "method": "GET",
    "path": "/users/:username/following",
    "enabledForApps": true,
    "name": "List who a user is following",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "idName": "list-following-for-user",
    "documentationUrl": "https://developer.github.com/v3/users/followers/#list-users-followed-by-another-user"
  },
  {
    "method": "GET",
    "path": "/user/following",
    "enabledForApps": true,
    "name": "List who the authenticated user is following",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "idName": "list-following-for-authenticated-user",
    "documentationUrl": "https://developer.github.com/v3/users/followers/#list-users-followed-by-another-user"
  },
  {
    "name": "Check if you are following a user",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/following/:username",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "idName": "check-following",
    "documentationUrl": "https://developer.github.com/v3/users/followers/#check-if-you-are-following-a-user"
  },
  {
    "name": "Check if one user follows another",
    "enabledForApps": true,
    "method": "GET",
    "path": "/users/:username/following/:target_user",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "target_user",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "idName": "check-following-for-user",
    "documentationUrl": "https://developer.github.com/v3/users/followers/#check-if-one-user-follows-another"
  },
  {
    "name": "Follow a user",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/user/following/:username",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"\n\nFollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.",
    "idName": "follow",
    "documentationUrl": "https://developer.github.com/v3/users/followers/#follow-a-user"
  },
  {
    "name": "Unfollow a user",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/user/following/:username",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope.",
    "idName": "unfollow",
    "documentationUrl": "https://developer.github.com/v3/users/followers/#unfollow-a-user"
  },
  {
    "name": "List public keys for a user",
    "enabledForApps": true,
    "method": "GET",
    "path": "/users/:username/keys",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists the _verified_ public keys for a user. This is accessible by anyone.",
    "idName": "list-public-keys-for-user",
    "documentationUrl": "https://developer.github.com/v3/users/keys/#list-public-keys-for-a-user"
  },
  {
    "name": "List your public keys",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/keys",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists the current user's keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "idName": "list-public-keys",
    "documentationUrl": "https://developer.github.com/v3/users/keys/#list-your-public-keys"
  },
  {
    "name": "Get a single public key",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/keys/:key_id",
    "params": [
      {
        "name": "key_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "View extended details for a single public key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "idName": "get-public-key",
    "documentationUrl": "https://developer.github.com/v3/users/keys/#get-a-single-public-key"
  },
  {
    "name": "Create a public key",
    "enabledForApps": false,
    "method": "POST",
    "path": "/user/keys",
    "params": [],
    "description": "Creates a public key. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "idName": "create-public-key",
    "documentationUrl": "https://developer.github.com/v3/users/keys/#create-a-public-key"
  },
  {
    "name": "Delete a public key",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/user/keys/:key_id",
    "params": [
      {
        "name": "key_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Removes a public key. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "idName": "delete-public-key",
    "documentationUrl": "https://developer.github.com/v3/users/keys/#delete-a-public-key"
  },
  {
    "name": "List GPG keys for a user",
    "enabledForApps": true,
    "method": "GET",
    "path": "/users/:username/gpg_keys",
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists the GPG keys for a user. This information is accessible by anyone.",
    "idName": "list-gpg-keys-for-user",
    "documentationUrl": "https://developer.github.com/v3/users/gpg_keys/#list-gpg-keys-for-a-user"
  },
  {
    "name": "List your GPG keys",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/gpg_keys",
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "idName": "list-gpg-keys",
    "documentationUrl": "https://developer.github.com/v3/users/gpg_keys/#list-your-gpg-keys"
  },
  {
    "name": "Get a single GPG key",
    "enabledForApps": false,
    "method": "GET",
    "path": "/user/gpg_keys/:gpg_key_id",
    "params": [
      {
        "name": "gpg_key_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "idName": "get-gpg-key",
    "documentationUrl": "https://developer.github.com/v3/users/gpg_keys/#get-a-single-gpg-key"
  },
  {
    "name": "Create a GPG key",
    "enabledForApps": false,
    "method": "POST",
    "path": "/user/gpg_keys",
    "params": [],
    "description": "Creates a GPG key. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "idName": "create-gpg-key",
    "documentationUrl": "https://developer.github.com/v3/users/gpg_keys/#create-a-gpg-key"
  },
  {
    "name": "Delete a GPG key",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/user/gpg_keys/:gpg_key_id",
    "params": [
      {
        "name": "gpg_key_id",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Removes a GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
    "idName": "delete-gpg-key",
    "documentationUrl": "https://developer.github.com/v3/users/gpg_keys/#delete-a-gpg-key"
  }
]
