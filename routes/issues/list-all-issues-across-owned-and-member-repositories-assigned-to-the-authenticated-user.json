{
  "method": "GET",
  "path": "/user/issues",
  "enabledForApps": false,
  "name": "List all issues across owned and member repositories assigned to the authenticated user",
  "params": [
    {
      "name": "filter",
      "type": "string",
      "description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation",
      "default": "assigned",
      "required": false,
      "enum": [
        "assigned",
        "created",
        "mentioned",
        "subscribed",
        "all"
      ],
      "location": "query"
    },
    {
      "name": "state",
      "type": "string",
      "description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.",
      "default": "open",
      "required": false,
      "enum": [
        "open",
        "closed",
        "all"
      ],
      "location": "query"
    },
    {
      "name": "labels",
      "type": "string",
      "description": "A list of comma separated label names. Example: `bug,ui,@high`",
      "required": false,
      "location": "query"
    },
    {
      "name": "sort",
      "type": "string",
      "description": "What to sort results by. Can be either `created`, `updated`, `comments`.",
      "default": "created",
      "required": false,
      "enum": [
        "created",
        "updated",
        "comments"
      ],
      "location": "query"
    },
    {
      "name": "direction",
      "type": "string",
      "description": "The direction of the sort. Can be either `asc` or `desc`.",
      "default": "desc",
      "required": false,
      "enum": [
        "asc",
        "desc"
      ],
      "location": "query"
    },
    {
      "name": "since",
      "type": "string",
      "description": "Only issues updated at or after this time are returned. This is a timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
      "required": false,
      "location": "query"
    },
    {
      "name": "per_page",
      "type": "integer",
      "required": false,
      "description": "Results per page (max 100)",
      "default": 30,
      "location": "query"
    },
    {
      "name": "page",
      "type": "integer",
      "required": false,
      "description": "Page number of the results to fetch.",
      "default": 1,
      "location": "query"
    }
  ],
  "description": "**Note**: In the past, pull requests and issues were more closely aligned than they are now. As far as the API is concerned, every pull request is an issue, but not every issue is a pull request.\n\nThis endpoint may also return pull requests in the response. If an issue _is_ a pull request, the object will include a `pull_request` key.\n\nYou can use the `filter` query parameter to fetch issues that are not necessarily assigned to you. See the table below for more information.\n\n\n\n**Note:** If a user opened an issue via a GitHub App, the `performed_via_github_app` key contains information on that GitHub App.",
  "idName": "list-across-owned-member-repos-assigned-to-user",
  "documentationUrl": "https://developer.github.com/v3/issues/#list-issues"
}
